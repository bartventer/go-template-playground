{"version":3,"file":"autosave.worker-CXmuNWYS.js","sources":["../src/services/storage/IndexedDBService.ts","../src/workers/autosave.worker.ts"],"sourcesContent":["const ERROR_MESSAGES = {\n\tIDB_ERROR: \"IndexedDB error\",\n\tSTORE_PUT_ERROR: \"Store put error\",\n\tSTORE_GET_ERROR: \"Store get error\",\n} as const;\n\n/**\n * IndexedDBService implements the {@link Playground.editor.AutoSaver AutoSaver} interface\n * using {@link IDBDatabase IndexedDB} as the storage backend.\n */\nexport class IndexedDBService implements Playground.editor.AutoSaver {\n\tstatic readonly #DB_NAME = \"PlaygroundDB\";\n\tstatic readonly #STORE_NAME = \"autosave\";\n\tstatic readonly #DB_VERSION = 1;\n\tstatic readonly #DB_KEY_PATH = \"key\";\n\n\t#db: IDBDatabase | null = null;\n\n\tasync #openDB(): Promise<IDBDatabase> {\n\t\tif (this.#db) return this.#db;\n\n\t\tthis.#db = await new Promise<IDBDatabase>((resolve, reject) => {\n\t\t\tconst request = indexedDB.open(\n\t\t\t\tIndexedDBService.#DB_NAME,\n\t\t\t\tIndexedDBService.#DB_VERSION,\n\t\t\t);\n\n\t\t\trequest.onupgradeneeded = (event) => {\n\t\t\t\tconst dbInstance = (event.target as IDBOpenDBRequest).result;\n\t\t\t\tif (\n\t\t\t\t\t!dbInstance.objectStoreNames.contains(\n\t\t\t\t\t\tIndexedDBService.#STORE_NAME,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tdbInstance.createObjectStore(IndexedDBService.#STORE_NAME, {\n\t\t\t\t\t\tkeyPath: IndexedDBService.#DB_KEY_PATH,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve((event.target as IDBOpenDBRequest).result);\n\t\t\t};\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\treject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t(event.target as IDBOpenDBRequest).error?.message ||\n\t\t\t\t\t\t\tERROR_MESSAGES.IDB_ERROR,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t};\n\t\t});\n\n\t\treturn this.#db;\n\t}\n\n\tasync put(\n\t\tkey: Playground.editor.AutoSaveKey,\n\t\tdata: Playground.editor.AutoSavePayload,\n\t): Promise<void> {\n\t\tconst db = await this.#openDB();\n\t\tconst transaction = db.transaction(\n\t\t\tIndexedDBService.#STORE_NAME,\n\t\t\t\"readwrite\",\n\t\t);\n\t\tconst store = transaction.objectStore(IndexedDBService.#STORE_NAME);\n\n\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\tconst request = store.put({\n\t\t\t\t...data,\n\t\t\t\tkey: key,\n\t\t\t});\n\n\t\t\trequest.onsuccess = () => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\treject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\tERROR_MESSAGES.STORE_PUT_ERROR,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t};\n\t\t});\n\t}\n\n\tasync get(\n\t\tkey: Playground.editor.AutoSaveKey,\n\t): Promise<Playground.editor.AutoSavePayload | null> {\n\t\tconst db = await this.#openDB();\n\t\tconst transaction = db.transaction(\n\t\t\tIndexedDBService.#STORE_NAME,\n\t\t\t\"readonly\",\n\t\t);\n\t\tconst store = transaction.objectStore(IndexedDBService.#STORE_NAME);\n\n\t\treturn new Promise<Playground.editor.AutoSavePayload | null>(\n\t\t\t(resolve, reject) => {\n\t\t\t\tconst request = store.get(key);\n\n\t\t\t\trequest.onsuccess = (event) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\t(event.target as IDBRequest)\n\t\t\t\t\t\t\t.result as Playground.editor.AutoSavePayload | null,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\trequest.onerror = (event) => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t\tERROR_MESSAGES.STORE_GET_ERROR,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\t}\n\n\tasync getAllKeys(): Promise<Playground.editor.AutoSaveKey[]> {\n\t\tconst db = await this.#openDB();\n\t\tconst transaction = db.transaction(\n\t\t\tIndexedDBService.#STORE_NAME,\n\t\t\t\"readonly\",\n\t\t);\n\t\tconst store = transaction.objectStore(IndexedDBService.#STORE_NAME);\n\n\t\treturn new Promise<Playground.editor.AutoSaveKey[]>(\n\t\t\t(resolve, reject) => {\n\t\t\t\tconst request = store.getAllKeys();\n\n\t\t\t\trequest.onsuccess = (event) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\t(event.target as IDBRequest)\n\t\t\t\t\t\t\t.result as Playground.editor.AutoSaveKey[],\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\trequest.onerror = (event) => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t\tERROR_MESSAGES.STORE_GET_ERROR,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tconst db = await this.#openDB();\n\t\tconst transaction = db.transaction(\n\t\t\tIndexedDBService.#STORE_NAME,\n\t\t\t\"readwrite\",\n\t\t);\n\t\tconst store = transaction.objectStore(IndexedDBService.#STORE_NAME);\n\n\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\tconst request = store.clear();\n\n\t\t\trequest.onsuccess = () => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\treject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\tERROR_MESSAGES.STORE_PUT_ERROR,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t};\n\t\t});\n\t}\n}\n","/**\n * @file Autosave worker script for the Playground.\n *\n * This worker is used to save the editor state to IndexedDB. It listens for\n * messages from the main thread and commits the state to the database.\n */\n\nimport { IndexedDBService } from \"../services/storage/IndexedDBService\";\n\nconst idb = new IndexedDBService();\n\nonmessage = async (\n\tevent: MessageEvent<Playground.editor.AutosaveWorkerMessage>,\n) => {\n\tconst { key, ...payload } = event.data;\n\n\ttry {\n\t\tawait idb.put(key, payload);\n\t} catch (error) {\n\t\tconsole.error(\"Autosave error:\", error);\n\t}\n};\n"],"names":["ERROR_MESSAGES","_IndexedDBService","__privateAdd","_IndexedDBService_instances","_db","key","data","store","__privateMethod","openDB_fn","__privateGet","_STORE_NAME","resolve","reject","request","event","_a","_DB_NAME","_DB_VERSION","_DB_KEY_PATH","__privateSet","dbInstance","IndexedDBService","idb","payload","error"],"mappings":"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"}