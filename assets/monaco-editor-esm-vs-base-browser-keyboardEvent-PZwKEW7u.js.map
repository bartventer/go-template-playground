{"version":3,"file":"monaco-editor-esm-vs-base-browser-keyboardEvent-PZwKEW7u.js","sources":["../../../node_modules/monaco-editor/esm/vs/base/browser/keyboardEvent.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { EVENT_KEY_CODE_MAP, KeyCodeUtils } from '../common/keyCodes.js';\nimport { KeyCodeChord } from '../common/keybindings.js';\nimport * as platform from '../common/platform.js';\nfunction extractKeyCode(e) {\n    if (e.charCode) {\n        // \"keypress\" events mostly\n        const char = String.fromCharCode(e.charCode).toUpperCase();\n        return KeyCodeUtils.fromString(char);\n    }\n    const keyCode = e.keyCode;\n    // browser quirks\n    if (keyCode === 3) {\n        return 7 /* KeyCode.PauseBreak */;\n    }\n    else if (browser.isFirefox) {\n        switch (keyCode) {\n            case 59: return 85 /* KeyCode.Semicolon */;\n            case 60:\n                if (platform.isLinux) {\n                    return 97 /* KeyCode.IntlBackslash */;\n                }\n                break;\n            case 61: return 86 /* KeyCode.Equal */;\n            // based on: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode#numpad_keys\n            case 107: return 109 /* KeyCode.NumpadAdd */;\n            case 109: return 111 /* KeyCode.NumpadSubtract */;\n            case 173: return 88 /* KeyCode.Minus */;\n            case 224:\n                if (platform.isMacintosh) {\n                    return 57 /* KeyCode.Meta */;\n                }\n                break;\n        }\n    }\n    else if (browser.isWebKit) {\n        if (platform.isMacintosh && keyCode === 93) {\n            // the two meta keys in the Mac have different key codes (91 and 93)\n            return 57 /* KeyCode.Meta */;\n        }\n        else if (!platform.isMacintosh && keyCode === 92) {\n            return 57 /* KeyCode.Meta */;\n        }\n    }\n    // cross browser keycodes:\n    return EVENT_KEY_CODE_MAP[keyCode] || 0 /* KeyCode.Unknown */;\n}\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nconst altKeyMod = 512 /* KeyMod.Alt */;\nconst shiftKeyMod = 1024 /* KeyMod.Shift */;\nconst metaKeyMod = (platform.isMacintosh ? 2048 /* KeyMod.CtrlCmd */ : 256 /* KeyMod.WinCtrl */);\nexport class StandardKeyboardEvent {\n    constructor(source) {\n        this._standardKeyboardEventBrand = true;\n        const e = source;\n        this.browserEvent = e;\n        this.target = e.target;\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n        this.altGraphKey = e.getModifierState?.('AltGraph');\n        this.keyCode = extractKeyCode(e);\n        this.code = e.code;\n        // console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n        this.ctrlKey = this.ctrlKey || this.keyCode === 5 /* KeyCode.Ctrl */;\n        this.altKey = this.altKey || this.keyCode === 6 /* KeyCode.Alt */;\n        this.shiftKey = this.shiftKey || this.keyCode === 4 /* KeyCode.Shift */;\n        this.metaKey = this.metaKey || this.keyCode === 57 /* KeyCode.Meta */;\n        this._asKeybinding = this._computeKeybinding();\n        this._asKeyCodeChord = this._computeKeyCodeChord();\n        // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n    }\n    preventDefault() {\n        if (this.browserEvent && this.browserEvent.preventDefault) {\n            this.browserEvent.preventDefault();\n        }\n    }\n    stopPropagation() {\n        if (this.browserEvent && this.browserEvent.stopPropagation) {\n            this.browserEvent.stopPropagation();\n        }\n    }\n    toKeyCodeChord() {\n        return this._asKeyCodeChord;\n    }\n    equals(other) {\n        return this._asKeybinding === other;\n    }\n    _computeKeybinding() {\n        let key = 0 /* KeyCode.Unknown */;\n        if (this.keyCode !== 5 /* KeyCode.Ctrl */ && this.keyCode !== 4 /* KeyCode.Shift */ && this.keyCode !== 6 /* KeyCode.Alt */ && this.keyCode !== 57 /* KeyCode.Meta */) {\n            key = this.keyCode;\n        }\n        let result = 0;\n        if (this.ctrlKey) {\n            result |= ctrlKeyMod;\n        }\n        if (this.altKey) {\n            result |= altKeyMod;\n        }\n        if (this.shiftKey) {\n            result |= shiftKeyMod;\n        }\n        if (this.metaKey) {\n            result |= metaKeyMod;\n        }\n        result |= key;\n        return result;\n    }\n    _computeKeyCodeChord() {\n        let key = 0 /* KeyCode.Unknown */;\n        if (this.keyCode !== 5 /* KeyCode.Ctrl */ && this.keyCode !== 4 /* KeyCode.Shift */ && this.keyCode !== 6 /* KeyCode.Alt */ && this.keyCode !== 57 /* KeyCode.Meta */) {\n            key = this.keyCode;\n        }\n        return new KeyCodeChord(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\n    }\n}\n"],"names":["isFirefox","isWebKit","KeyCodeChord","KeyCodeUtils","isMacintosh","EVENT_KEY_CODE_MAP","extractKeyCode","e","char","keyCode","browser.isFirefox","platform.isLinux","platform.isMacintosh","browser.isWebKit","ctrlKeyMod","altKeyMod","shiftKeyMod","metaKeyMod","StandardKeyboardEvent","source","_a","other","key","result"],"mappings":"AAAA,OAAA,KAAAA,EAAA,KAAAC,MAAA,kDAAA,OAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,EAAA,KAAAC,MAAA,0CAQA,SAASC,EAAeC,EAAG,CACvB,GAAIA,EAAE,SAAU,CAEZ,MAAMC,EAAO,OAAO,aAAaD,EAAE,QAAQ,EAAE,YAAa,EAC1D,OAAOJ,EAAa,WAAWK,CAAI,CAC3C,CACI,MAAMC,EAAUF,EAAE,QAElB,GAAIE,IAAY,EACZ,MAAO,GAEN,GAAIC,EACL,OAAQD,EAAO,CACX,IAAK,IAAI,MAAO,IAChB,IAAK,IACD,GAAIE,EACA,MAAO,IAEX,MACJ,IAAK,IAAI,MAAO,IAEhB,IAAK,KAAK,MAAO,KACjB,IAAK,KAAK,MAAO,KACjB,IAAK,KAAK,MAAO,IACjB,IAAK,KACD,GAAIC,EACA,MAAO,IAEX,KAChB,SAEaC,EAAkB,CACvB,GAAID,GAAwBH,IAAY,GAEpC,MAAO,IAEN,GAAI,CAACG,GAAwBH,IAAY,GAC1C,MAAO,GAEnB,CAEI,OAAOJ,EAAmBI,CAAO,GAAK,CAC1C,CACA,MAAMK,EAAcF,EAAuB,IAA2B,KAChEG,EAAY,IACZC,EAAc,KACdC,EAAcL,EAAuB,KAA4B,IAChE,MAAMM,CAAsB,CAC/B,YAAYC,EAAQ,CAxDxB,IAAAC,EAyDQ,KAAK,4BAA8B,GACnC,MAAM,EAAID,EACV,KAAK,aAAe,EACpB,KAAK,OAAS,EAAE,OAChB,KAAK,QAAU,EAAE,QACjB,KAAK,SAAW,EAAE,SAClB,KAAK,OAAS,EAAE,OAChB,KAAK,QAAU,EAAE,QACjB,KAAK,aAAcC,EAAA,EAAE,mBAAF,YAAAA,EAAA,OAAqB,YACxC,KAAK,QAAUd,EAAe,CAAC,EAC/B,KAAK,KAAO,EAAE,KAEd,KAAK,QAAU,KAAK,SAAW,KAAK,UAAY,EAChD,KAAK,OAAS,KAAK,QAAU,KAAK,UAAY,EAC9C,KAAK,SAAW,KAAK,UAAY,KAAK,UAAY,EAClD,KAAK,QAAU,KAAK,SAAW,KAAK,UAAY,GAChD,KAAK,cAAgB,KAAK,mBAAoB,EAC9C,KAAK,gBAAkB,KAAK,qBAAsB,CAE1D,CACI,gBAAiB,CACT,KAAK,cAAgB,KAAK,aAAa,gBACvC,KAAK,aAAa,eAAgB,CAE9C,CACI,iBAAkB,CACV,KAAK,cAAgB,KAAK,aAAa,iBACvC,KAAK,aAAa,gBAAiB,CAE/C,CACI,gBAAiB,CACb,OAAO,KAAK,eACpB,CACI,OAAOe,EAAO,CACV,OAAO,KAAK,gBAAkBA,CACtC,CACI,oBAAqB,CACjB,IAAIC,EAAM,EACN,KAAK,UAAY,GAAwB,KAAK,UAAY,GAAyB,KAAK,UAAY,GAAuB,KAAK,UAAY,KAC5IA,EAAM,KAAK,SAEf,IAAIC,EAAS,EACb,OAAI,KAAK,UACLA,GAAUT,GAEV,KAAK,SACLS,GAAUR,GAEV,KAAK,WACLQ,GAAUP,GAEV,KAAK,UACLO,GAAUN,GAEdM,GAAUD,EACHC,CACf,CACI,sBAAuB,CACnB,IAAID,EAAM,EACV,OAAI,KAAK,UAAY,GAAwB,KAAK,UAAY,GAAyB,KAAK,UAAY,GAAuB,KAAK,UAAY,KAC5IA,EAAM,KAAK,SAER,IAAIpB,EAAa,KAAK,QAAS,KAAK,SAAU,KAAK,OAAQ,KAAK,QAASoB,CAAG,CAC3F,CACA","x_google_ignoreList":[0]}