{"version":3,"file":"monaco-editor-esm-vs-editor-browser-widget-diffEditor-components-Bx_By8ox.js","sources":["../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/accessibleDiffViewer.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/inlineDiffDeletedCodeMargin.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorDecorations.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorSash.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorEditors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener, addStandardDisposableListener, reset } from '../../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../../base/browser/trustedTypes.js';\nimport { ActionBar } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../../../base/common/actions.js';\nimport { forEachAdjacent, groupAdjacentBy } from '../../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedWithStore, observableValue, subtransaction, transaction } from '../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { applyStyle } from '../utils.js';\nimport { EditorFontLigatures } from '../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/offsetRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { LineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { LineTokens } from '../../../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 } from '../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../../common/viewModel.js';\nimport { localize } from '../../../../../nls.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { registerIcon } from '../../../../../platform/theme/common/iconRegistry.js';\nimport './accessibleDiffViewer.css';\nconst accessibleDiffViewerInsertIcon = registerIcon('diff-review-insert', Codicon.add, localize('accessibleDiffViewerInsertIcon', 'Icon for \\'Insert\\' in accessible diff viewer.'));\nconst accessibleDiffViewerRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, localize('accessibleDiffViewerRemoveIcon', 'Icon for \\'Remove\\' in accessible diff viewer.'));\nconst accessibleDiffViewerCloseIcon = registerIcon('diff-review-close', Codicon.close, localize('accessibleDiffViewerCloseIcon', 'Icon for \\'Close\\' in accessible diff viewer.'));\nlet AccessibleDiffViewer = class AccessibleDiffViewer extends Disposable {\n    static { this._ttPolicy = createTrustedTypesPolicy('diffReview', { createHTML: value => value }); }\n    constructor(_parentNode, _visible, _setVisible, _canClose, _width, _height, _diffs, _models, _instantiationService) {\n        super();\n        this._parentNode = _parentNode;\n        this._visible = _visible;\n        this._setVisible = _setVisible;\n        this._canClose = _canClose;\n        this._width = _width;\n        this._height = _height;\n        this._diffs = _diffs;\n        this._models = _models;\n        this._instantiationService = _instantiationService;\n        this._state = derivedWithStore(this, (reader, store) => {\n            const visible = this._visible.read(reader);\n            this._parentNode.style.visibility = visible ? 'visible' : 'hidden';\n            if (!visible) {\n                return null;\n            }\n            const model = store.add(this._instantiationService.createInstance(ViewModel, this._diffs, this._models, this._setVisible, this._canClose));\n            const view = store.add(this._instantiationService.createInstance(View, this._parentNode, model, this._width, this._height, this._models));\n            return { model, view, };\n        }).recomputeInitiallyAndOnChange(this._store);\n    }\n    next() {\n        transaction(tx => {\n            const isVisible = this._visible.get();\n            this._setVisible(true, tx);\n            if (isVisible) {\n                this._state.get().model.nextGroup(tx);\n            }\n        });\n    }\n    prev() {\n        transaction(tx => {\n            this._setVisible(true, tx);\n            this._state.get().model.previousGroup(tx);\n        });\n    }\n    close() {\n        transaction(tx => {\n            this._setVisible(false, tx);\n        });\n    }\n};\nAccessibleDiffViewer = __decorate([\n    __param(8, IInstantiationService)\n], AccessibleDiffViewer);\nexport { AccessibleDiffViewer };\nlet ViewModel = class ViewModel extends Disposable {\n    constructor(_diffs, _models, _setVisible, canClose, _accessibilitySignalService) {\n        super();\n        this._diffs = _diffs;\n        this._models = _models;\n        this._setVisible = _setVisible;\n        this.canClose = canClose;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._groups = observableValue(this, []);\n        this._currentGroupIdx = observableValue(this, 0);\n        this._currentElementIdx = observableValue(this, 0);\n        this.groups = this._groups;\n        this.currentGroup = this._currentGroupIdx.map((idx, r) => this._groups.read(r)[idx]);\n        this.currentGroupIndex = this._currentGroupIdx;\n        this.currentElement = this._currentElementIdx.map((idx, r) => this.currentGroup.read(r)?.lines[idx]);\n        this._register(autorun(reader => {\n            /** @description update groups */\n            const diffs = this._diffs.read(reader);\n            if (!diffs) {\n                this._groups.set([], undefined);\n                return;\n            }\n            const groups = computeViewElementGroups(diffs, this._models.getOriginalModel().getLineCount(), this._models.getModifiedModel().getLineCount());\n            transaction(tx => {\n                const p = this._models.getModifiedPosition();\n                if (p) {\n                    const nextGroup = groups.findIndex(g => p?.lineNumber < g.range.modified.endLineNumberExclusive);\n                    if (nextGroup !== -1) {\n                        this._currentGroupIdx.set(nextGroup, tx);\n                    }\n                }\n                this._groups.set(groups, tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            /** @description play audio-cue for diff */\n            const currentViewItem = this.currentElement.read(reader);\n            if (currentViewItem?.type === LineType.Deleted) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'accessibleDiffViewer.currentElementChanged' });\n            }\n            else if (currentViewItem?.type === LineType.Added) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'accessibleDiffViewer.currentElementChanged' });\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description select lines in editor */\n            // This ensures editor commands (like revert/stage) work\n            const currentViewItem = this.currentElement.read(reader);\n            if (currentViewItem && currentViewItem.type !== LineType.Header) {\n                const lineNumber = currentViewItem.modifiedLineNumber ?? currentViewItem.diff.modified.startLineNumber;\n                this._models.modifiedSetSelection(Range.fromPositions(new Position(lineNumber, 1)));\n            }\n        }));\n    }\n    _goToGroupDelta(delta, tx) {\n        const groups = this.groups.get();\n        if (!groups || groups.length <= 1) {\n            return;\n        }\n        subtransaction(tx, tx => {\n            this._currentGroupIdx.set(OffsetRange.ofLength(groups.length).clipCyclic(this._currentGroupIdx.get() + delta), tx);\n            this._currentElementIdx.set(0, tx);\n        });\n    }\n    nextGroup(tx) { this._goToGroupDelta(1, tx); }\n    previousGroup(tx) { this._goToGroupDelta(-1, tx); }\n    _goToLineDelta(delta) {\n        const group = this.currentGroup.get();\n        if (!group || group.lines.length <= 1) {\n            return;\n        }\n        transaction(tx => {\n            this._currentElementIdx.set(OffsetRange.ofLength(group.lines.length).clip(this._currentElementIdx.get() + delta), tx);\n        });\n    }\n    goToNextLine() { this._goToLineDelta(1); }\n    goToPreviousLine() { this._goToLineDelta(-1); }\n    goToLine(line) {\n        const group = this.currentGroup.get();\n        if (!group) {\n            return;\n        }\n        const idx = group.lines.indexOf(line);\n        if (idx === -1) {\n            return;\n        }\n        transaction(tx => {\n            this._currentElementIdx.set(idx, tx);\n        });\n    }\n    revealCurrentElementInEditor() {\n        if (!this.canClose.get()) {\n            return;\n        }\n        this._setVisible(false, undefined);\n        const curElem = this.currentElement.get();\n        if (curElem) {\n            if (curElem.type === LineType.Deleted) {\n                this._models.originalReveal(Range.fromPositions(new Position(curElem.originalLineNumber, 1)));\n            }\n            else {\n                this._models.modifiedReveal(curElem.type !== LineType.Header\n                    ? Range.fromPositions(new Position(curElem.modifiedLineNumber, 1))\n                    : undefined);\n            }\n        }\n    }\n    close() {\n        if (!this.canClose.get()) {\n            return;\n        }\n        this._setVisible(false, undefined);\n        this._models.modifiedFocus();\n    }\n};\nViewModel = __decorate([\n    __param(4, IAccessibilitySignalService)\n], ViewModel);\nconst viewElementGroupLineMargin = 3;\nfunction computeViewElementGroups(diffs, originalLineCount, modifiedLineCount) {\n    const result = [];\n    for (const g of groupAdjacentBy(diffs, (a, b) => (b.modified.startLineNumber - a.modified.endLineNumberExclusive < 2 * viewElementGroupLineMargin))) {\n        const viewElements = [];\n        viewElements.push(new HeaderViewElement());\n        const origFullRange = new LineRange(Math.max(1, g[0].original.startLineNumber - viewElementGroupLineMargin), Math.min(g[g.length - 1].original.endLineNumberExclusive + viewElementGroupLineMargin, originalLineCount + 1));\n        const modifiedFullRange = new LineRange(Math.max(1, g[0].modified.startLineNumber - viewElementGroupLineMargin), Math.min(g[g.length - 1].modified.endLineNumberExclusive + viewElementGroupLineMargin, modifiedLineCount + 1));\n        forEachAdjacent(g, (a, b) => {\n            const origRange = new LineRange(a ? a.original.endLineNumberExclusive : origFullRange.startLineNumber, b ? b.original.startLineNumber : origFullRange.endLineNumberExclusive);\n            const modifiedRange = new LineRange(a ? a.modified.endLineNumberExclusive : modifiedFullRange.startLineNumber, b ? b.modified.startLineNumber : modifiedFullRange.endLineNumberExclusive);\n            origRange.forEach(origLineNumber => {\n                viewElements.push(new UnchangedLineViewElement(origLineNumber, modifiedRange.startLineNumber + (origLineNumber - origRange.startLineNumber)));\n            });\n            if (b) {\n                b.original.forEach(origLineNumber => {\n                    viewElements.push(new DeletedLineViewElement(b, origLineNumber));\n                });\n                b.modified.forEach(modifiedLineNumber => {\n                    viewElements.push(new AddedLineViewElement(b, modifiedLineNumber));\n                });\n            }\n        });\n        const modifiedRange = g[0].modified.join(g[g.length - 1].modified);\n        const originalRange = g[0].original.join(g[g.length - 1].original);\n        result.push(new ViewElementGroup(new LineRangeMapping(modifiedRange, originalRange), viewElements));\n    }\n    return result;\n}\nvar LineType;\n(function (LineType) {\n    LineType[LineType[\"Header\"] = 0] = \"Header\";\n    LineType[LineType[\"Unchanged\"] = 1] = \"Unchanged\";\n    LineType[LineType[\"Deleted\"] = 2] = \"Deleted\";\n    LineType[LineType[\"Added\"] = 3] = \"Added\";\n})(LineType || (LineType = {}));\nclass ViewElementGroup {\n    constructor(range, lines) {\n        this.range = range;\n        this.lines = lines;\n    }\n}\nclass HeaderViewElement {\n    constructor() {\n        this.type = LineType.Header;\n    }\n}\nclass DeletedLineViewElement {\n    constructor(diff, originalLineNumber) {\n        this.diff = diff;\n        this.originalLineNumber = originalLineNumber;\n        this.type = LineType.Deleted;\n        this.modifiedLineNumber = undefined;\n    }\n}\nclass AddedLineViewElement {\n    constructor(diff, modifiedLineNumber) {\n        this.diff = diff;\n        this.modifiedLineNumber = modifiedLineNumber;\n        this.type = LineType.Added;\n        this.originalLineNumber = undefined;\n    }\n}\nclass UnchangedLineViewElement {\n    constructor(originalLineNumber, modifiedLineNumber) {\n        this.originalLineNumber = originalLineNumber;\n        this.modifiedLineNumber = modifiedLineNumber;\n        this.type = LineType.Unchanged;\n    }\n}\nlet View = class View extends Disposable {\n    constructor(_element, _model, _width, _height, _models, _languageService) {\n        super();\n        this._element = _element;\n        this._model = _model;\n        this._width = _width;\n        this._height = _height;\n        this._models = _models;\n        this._languageService = _languageService;\n        this.domNode = this._element;\n        this.domNode.className = 'monaco-component diff-review monaco-editor-background';\n        const actionBarContainer = document.createElement('div');\n        actionBarContainer.className = 'diff-review-actions';\n        this._actionBar = this._register(new ActionBar(actionBarContainer));\n        this._register(autorun(reader => {\n            /** @description update actions */\n            this._actionBar.clear();\n            if (this._model.canClose.read(reader)) {\n                this._actionBar.push(new Action('diffreview.close', localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(accessibleDiffViewerCloseIcon), true, async () => _model.close()), { label: false, icon: true });\n            }\n        }));\n        this._content = document.createElement('div');\n        this._content.className = 'diff-review-content';\n        this._content.setAttribute('role', 'code');\n        this._scrollbar = this._register(new DomScrollableElement(this._content, {}));\n        reset(this.domNode, this._scrollbar.getDomNode(), actionBarContainer);\n        this._register(autorun(r => {\n            this._height.read(r);\n            this._width.read(r);\n            this._scrollbar.scanDomNode();\n        }));\n        this._register(toDisposable(() => { reset(this.domNode); }));\n        this._register(applyStyle(this.domNode, { width: this._width, height: this._height }));\n        this._register(applyStyle(this._content, { width: this._width, height: this._height }));\n        this._register(autorunWithStore((reader, store) => {\n            /** @description render */\n            this._model.currentGroup.read(reader);\n            this._render(store);\n        }));\n        // TODO@hediet use commands\n        this._register(addStandardDisposableListener(this.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._model.goToNextLine();\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._model.goToPreviousLine();\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)) {\n                e.preventDefault();\n                this._model.close();\n            }\n            if (e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this._model.revealCurrentElementInEditor();\n            }\n        }));\n    }\n    _render(store) {\n        const originalOptions = this._models.getOriginalOptions();\n        const modifiedOptions = this._models.getModifiedOptions();\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', localize('ariaLabel', 'Accessible Diff Viewer. Use arrow up and down to navigate.'));\n        applyFontInfo(container, modifiedOptions.get(50 /* EditorOption.fontInfo */));\n        reset(this._content, container);\n        const originalModel = this._models.getOriginalModel();\n        const modifiedModel = this._models.getModifiedModel();\n        if (!originalModel || !modifiedModel) {\n            return;\n        }\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        const lineHeight = modifiedOptions.get(67 /* EditorOption.lineHeight */);\n        const group = this._model.currentGroup.get();\n        for (const viewItem of group?.lines || []) {\n            if (!group) {\n                break;\n            }\n            let row;\n            if (viewItem.type === LineType.Header) {\n                const header = document.createElement('div');\n                header.className = 'diff-review-row';\n                header.setAttribute('role', 'listitem');\n                const r = group.range;\n                const diffIndex = this._model.currentGroupIndex.get();\n                const diffsLength = this._model.groups.get().length;\n                const getAriaLines = (lines) => lines === 0 ? localize('no_lines_changed', \"no lines changed\")\n                    : lines === 1 ? localize('one_line_changed', \"1 line changed\")\n                        : localize('more_lines_changed', \"{0} lines changed\", lines);\n                const originalChangedLinesCntAria = getAriaLines(r.original.length);\n                const modifiedChangedLinesCntAria = getAriaLines(r.modified.length);\n                header.setAttribute('aria-label', localize({\n                    key: 'header',\n                    comment: [\n                        'This is the ARIA label for a git diff header.',\n                        'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                        'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                        'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                        'Variables 2 and 4 will be numbers (a line number).',\n                        'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n                    ]\n                }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), diffsLength, r.original.startLineNumber, originalChangedLinesCntAria, r.modified.startLineNumber, modifiedChangedLinesCntAria));\n                const cell = document.createElement('div');\n                cell.className = 'diff-review-cell diff-review-summary';\n                // e.g.: `1/10: @@ -504,7 +517,7 @@`\n                cell.appendChild(document.createTextNode(`${diffIndex + 1}/${diffsLength}: @@ -${r.original.startLineNumber},${r.original.length} +${r.modified.startLineNumber},${r.modified.length} @@`));\n                header.appendChild(cell);\n                row = header;\n            }\n            else {\n                row = this._createRow(viewItem, lineHeight, this._width.get(), originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\n            }\n            container.appendChild(row);\n            const isSelectedObs = derived(reader => /** @description isSelected */ this._model.currentElement.read(reader) === viewItem);\n            store.add(autorun(reader => {\n                /** @description update tab index */\n                const isSelected = isSelectedObs.read(reader);\n                row.tabIndex = isSelected ? 0 : -1;\n                if (isSelected) {\n                    row.focus();\n                }\n            }));\n            store.add(addDisposableListener(row, 'focus', () => {\n                this._model.goToLine(viewItem);\n            }));\n        }\n        this._scrollbar.scanDomNode();\n    }\n    _createRow(item, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\n        const originalLayoutInfo = originalOptions.get(146 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(146 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (item.type) {\n            case LineType.Added:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = accessibleDiffViewerInsertIcon;\n                break;\n            case LineType.Deleted:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = accessibleDiffViewerRemoveIcon;\n                break;\n        }\n        const row = document.createElement('div');\n        row.style.minWidth = width + 'px';\n        row.className = rowClassName;\n        row.setAttribute('role', 'listitem');\n        row.ariaLevel = '';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell';\n        cell.style.height = `${lineHeight}px`;\n        row.appendChild(cell);\n        const originalLineNumber = document.createElement('span');\n        originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n        originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n        originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n        if (item.originalLineNumber !== undefined) {\n            originalLineNumber.appendChild(document.createTextNode(String(item.originalLineNumber)));\n        }\n        else {\n            originalLineNumber.innerText = '\\u00a0';\n        }\n        cell.appendChild(originalLineNumber);\n        const modifiedLineNumber = document.createElement('span');\n        modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n        modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n        modifiedLineNumber.style.paddingRight = '10px';\n        modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n        if (item.modifiedLineNumber !== undefined) {\n            modifiedLineNumber.appendChild(document.createTextNode(String(item.modifiedLineNumber)));\n        }\n        else {\n            modifiedLineNumber.innerText = '\\u00a0';\n        }\n        cell.appendChild(modifiedLineNumber);\n        const spacer = document.createElement('span');\n        spacer.className = spacerClassName;\n        if (spacerIcon) {\n            const spacerCodicon = document.createElement('span');\n            spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n            spacerCodicon.innerText = '\\u00a0\\u00a0';\n            spacer.appendChild(spacerCodicon);\n        }\n        else {\n            spacer.innerText = '\\u00a0\\u00a0';\n        }\n        cell.appendChild(spacer);\n        let lineContent;\n        if (item.modifiedLineNumber !== undefined) {\n            let html = this._getLineHtml(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, item.modifiedLineNumber, this._languageService.languageIdCodec);\n            if (AccessibleDiffViewer._ttPolicy) {\n                html = AccessibleDiffViewer._ttPolicy.createHTML(html);\n            }\n            cell.insertAdjacentHTML('beforeend', html);\n            lineContent = modifiedModel.getLineContent(item.modifiedLineNumber);\n        }\n        else {\n            let html = this._getLineHtml(originalModel, originalOptions, originalModelOpts.tabSize, item.originalLineNumber, this._languageService.languageIdCodec);\n            if (AccessibleDiffViewer._ttPolicy) {\n                html = AccessibleDiffViewer._ttPolicy.createHTML(html);\n            }\n            cell.insertAdjacentHTML('beforeend', html);\n            lineContent = originalModel.getLineContent(item.originalLineNumber);\n        }\n        if (lineContent.length === 0) {\n            lineContent = localize('blankLine', \"blank\");\n        }\n        let ariaLabel = '';\n        switch (item.type) {\n            case LineType.Unchanged:\n                if (item.originalLineNumber === item.modifiedLineNumber) {\n                    ariaLabel = localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, item.originalLineNumber);\n                }\n                else {\n                    ariaLabel = localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, item.originalLineNumber, item.modifiedLineNumber);\n                }\n                break;\n            case LineType.Added:\n                ariaLabel = localize('insertLine', \"+ {0} modified line {1}\", lineContent, item.modifiedLineNumber);\n                break;\n            case LineType.Deleted:\n                ariaLabel = localize('deleteLine', \"- {0} original line {1}\", lineContent, item.originalLineNumber);\n                break;\n        }\n        row.setAttribute('aria-label', ariaLabel);\n        return row;\n    }\n    _getLineHtml(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine2(new RenderLineInput((fontInfo.isMonospace && !options.get(33 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(118 /* EditorOption.stopRenderingLineAfter */), options.get(100 /* EditorOption.renderWhitespace */), options.get(95 /* EditorOption.renderControlCharacters */), options.get(51 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nView = __decorate([\n    __param(5, ILanguageService)\n], View);\nexport class AccessibleDiffViewerModelFromEditors {\n    constructor(editors) {\n        this.editors = editors;\n    }\n    getOriginalModel() {\n        return this.editors.original.getModel();\n    }\n    getOriginalOptions() {\n        return this.editors.original.getOptions();\n    }\n    originalReveal(range) {\n        this.editors.original.revealRange(range);\n        this.editors.original.setSelection(range);\n        this.editors.original.focus();\n    }\n    getModifiedModel() {\n        return this.editors.modified.getModel();\n    }\n    getModifiedOptions() {\n        return this.editors.modified.getOptions();\n    }\n    modifiedReveal(range) {\n        if (range) {\n            this.editors.modified.revealRange(range);\n            this.editors.modified.setSelection(range);\n        }\n        this.editors.modified.focus();\n    }\n    modifiedSetSelection(range) {\n        this.editors.modified.setSelection(range);\n    }\n    modifiedFocus() {\n        this.editors.modified.focus();\n    }\n    getModifiedPosition() {\n        return this.editors.modified.getPosition() ?? undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { addStandardDisposableListener, getDomNodePagePosition } from '../../../../../../base/browser/dom.js';\nimport { Action } from '../../../../../../base/common/actions.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { localize } from '../../../../../../nls.js';\nexport class InlineDiffDeletedCodeMargin extends Disposable {\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            this._diffActions.style.visibility = _visibility ? 'visible' : 'hidden';\n        }\n    }\n    constructor(_getViewZoneId, _marginDomNode, _modifiedEditor, _diff, _editor, _viewLineCounts, _originalTextModel, _contextMenuService, _clipboardService) {\n        super();\n        this._getViewZoneId = _getViewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this._modifiedEditor = _modifiedEditor;\n        this._diff = _diff;\n        this._editor = _editor;\n        this._viewLineCounts = _viewLineCounts;\n        this._originalTextModel = _originalTextModel;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = ThemeIcon.asClassName(Codicon.lightBulb) + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = this._modifiedEditor.getOption(67 /* EditorOption.lineHeight */);\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        let currentLineNumberOffset = 0;\n        const useShadowDOM = _modifiedEditor.getOption(128 /* EditorOption.useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                domForShadowRoot: useShadowDOM ? _modifiedEditor.getDomNode() ?? undefined : undefined,\n                getAnchor: () => ({ x, y }),\n                getActions: () => {\n                    const actions = [];\n                    const isDeletion = _diff.modified.isEmpty;\n                    // default action\n                    actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n                        ? (_diff.original.length > 1\n                            ? localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                            : localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n                        : (_diff.original.length > 1\n                            ? localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                            : localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, async () => {\n                        const originalText = this._originalTextModel.getValueInRange(_diff.original.toExclusiveRange());\n                        await this._clipboardService.writeText(originalText);\n                    }));\n                    if (_diff.original.length > 1) {\n                        actions.push(new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                            ? localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", _diff.original.startLineNumber + currentLineNumberOffset)\n                            : localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", _diff.original.startLineNumber + currentLineNumberOffset), undefined, true, async () => {\n                            let lineContent = this._originalTextModel.getLineContent(_diff.original.startLineNumber + currentLineNumberOffset);\n                            if (lineContent === '') {\n                                // empty line -> new line\n                                const eof = this._originalTextModel.getEndOfLineSequence();\n                                lineContent = eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n';\n                            }\n                            await this._clipboardService.writeText(lineContent);\n                        }));\n                    }\n                    const readOnly = _modifiedEditor.getOption(92 /* EditorOption.readOnly */);\n                    if (!readOnly) {\n                        actions.push(new Action('diff.inline.revertChange', localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, async () => {\n                            this._editor.revert(this._diff);\n                        }));\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            if (!e.leftButton) {\n                return;\n            }\n            const { top, height } = getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(_modifiedEditor.onMouseMove((e) => {\n            if ((e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) && e.target.detail.viewZoneId === this._getViewZoneId()) {\n                currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                this.visibility = true;\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(_modifiedEditor.onMouseDown((e) => {\n            if (!e.event.leftButton) {\n                return;\n            }\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._getViewZoneId()) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this._viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this._viewLineCounts.length; i++) {\n                acc += this._viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../../../../base/browser/trustedTypes.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../../../common/config/editorOptions.js';\nimport { StringBuilder } from '../../../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../../../common/viewModel.js';\nconst ttPolicy = createTrustedTypesPolicy('diffEditorWidget', { createHTML: value => value });\nexport function renderLines(source, options, decorations, domNode) {\n    applyFontInfo(domNode, options.fontInfo);\n    const hasCharChanges = (decorations.length > 0);\n    const sb = new StringBuilder(10000);\n    let maxCharsPerLine = 0;\n    let renderedLineCount = 0;\n    const viewLineCounts = [];\n    for (let lineIndex = 0; lineIndex < source.lineTokens.length; lineIndex++) {\n        const lineNumber = lineIndex + 1;\n        const lineTokens = source.lineTokens[lineIndex];\n        const lineBreakData = source.lineBreakData[lineIndex];\n        const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, Number.MAX_SAFE_INTEGER);\n        if (lineBreakData) {\n            let lastBreakOffset = 0;\n            for (const breakOffset of lineBreakData.breakOffsets) {\n                const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                maxCharsPerLine = Math.max(maxCharsPerLine, renderOriginalLine(renderedLineCount, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, source.mightContainNonBasicASCII, source.mightContainRTL, options, sb));\n                renderedLineCount++;\n                lastBreakOffset = breakOffset;\n            }\n            viewLineCounts.push(lineBreakData.breakOffsets.length);\n        }\n        else {\n            viewLineCounts.push(1);\n            maxCharsPerLine = Math.max(maxCharsPerLine, renderOriginalLine(renderedLineCount, lineTokens, actualDecorations, hasCharChanges, source.mightContainNonBasicASCII, source.mightContainRTL, options, sb));\n            renderedLineCount++;\n        }\n    }\n    maxCharsPerLine += options.scrollBeyondLastColumn;\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n    const minWidthInPx = (maxCharsPerLine * options.typicalHalfwidthCharacterWidth);\n    return {\n        heightInLines: renderedLineCount,\n        minWidthInPx,\n        viewLineCounts,\n    };\n}\nexport class LineSource {\n    constructor(lineTokens, lineBreakData, mightContainNonBasicASCII, mightContainRTL) {\n        this.lineTokens = lineTokens;\n        this.lineBreakData = lineBreakData;\n        this.mightContainNonBasicASCII = mightContainNonBasicASCII;\n        this.mightContainRTL = mightContainRTL;\n    }\n}\nexport class RenderOptions {\n    static fromEditor(editor) {\n        const modifiedEditorOptions = editor.getOptions();\n        const fontInfo = modifiedEditorOptions.get(50 /* EditorOption.fontInfo */);\n        const layoutInfo = modifiedEditorOptions.get(146 /* EditorOption.layoutInfo */);\n        return new RenderOptions(editor.getModel()?.getOptions().tabSize || 0, fontInfo, modifiedEditorOptions.get(33 /* EditorOption.disableMonospaceOptimizations */), fontInfo.typicalHalfwidthCharacterWidth, modifiedEditorOptions.get(105 /* EditorOption.scrollBeyondLastColumn */), modifiedEditorOptions.get(67 /* EditorOption.lineHeight */), layoutInfo.decorationsWidth, modifiedEditorOptions.get(118 /* EditorOption.stopRenderingLineAfter */), modifiedEditorOptions.get(100 /* EditorOption.renderWhitespace */), modifiedEditorOptions.get(95 /* EditorOption.renderControlCharacters */), modifiedEditorOptions.get(51 /* EditorOption.fontLigatures */));\n    }\n    constructor(tabSize, fontInfo, disableMonospaceOptimizations, typicalHalfwidthCharacterWidth, scrollBeyondLastColumn, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures) {\n        this.tabSize = tabSize;\n        this.fontInfo = fontInfo;\n        this.disableMonospaceOptimizations = disableMonospaceOptimizations;\n        this.typicalHalfwidthCharacterWidth = typicalHalfwidthCharacterWidth;\n        this.scrollBeyondLastColumn = scrollBeyondLastColumn;\n        this.lineHeight = lineHeight;\n        this.lineDecorationsWidth = lineDecorationsWidth;\n        this.stopRenderingLineAfter = stopRenderingLineAfter;\n        this.renderWhitespace = renderWhitespace;\n        this.renderControlCharacters = renderControlCharacters;\n        this.fontLigatures = fontLigatures;\n    }\n}\nfunction renderOriginalLine(viewLineIdx, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, options, sb) {\n    sb.appendString('<div class=\"view-line');\n    if (!hasCharChanges) {\n        // No char changes\n        sb.appendString(' char-delete');\n    }\n    sb.appendString('\" style=\"top:');\n    sb.appendString(String(viewLineIdx * options.lineHeight));\n    sb.appendString('px;width:1000000px;\">');\n    const lineContent = lineTokens.getLineContent();\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n    const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n    const output = renderViewLine(new RenderLineInput((options.fontInfo.isMonospace && !options.disableMonospaceOptimizations), options.fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, options.tabSize, 0, options.fontInfo.spaceWidth, options.fontInfo.middotWidth, options.fontInfo.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n    ), sb);\n    sb.appendString('</div>');\n    return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener } from '../../../../../../base/browser/dom.js';\nimport { ArrayQueue } from '../../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../../base/common/async.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { assertIsDefined } from '../../../../../../base/common/types.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { diffDeleteDecoration, diffRemoveIcon } from '../../registrations.contribution.js';\nimport { DiffMapping } from '../../diffEditorViewModel.js';\nimport { InlineDiffDeletedCodeMargin } from './inlineDiffDeletedCodeMargin.js';\nimport { LineSource, RenderOptions, renderLines } from './renderLines.js';\nimport { animatedObservable, joinCombine } from '../../utils.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { InlineDecoration } from '../../../../../common/viewModel.js';\nimport { IClipboardService } from '../../../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\nimport { Range } from '../../../../../common/core/range.js';\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nlet DiffEditorViewZones = class DiffEditorViewZones extends Disposable {\n    constructor(_targetWindow, _editors, _diffModel, _options, _diffEditorWidget, _canIgnoreViewZoneUpdateEvent, _origViewZonesToIgnore, _modViewZonesToIgnore, _clipboardService, _contextMenuService) {\n        super();\n        this._targetWindow = _targetWindow;\n        this._editors = _editors;\n        this._diffModel = _diffModel;\n        this._options = _options;\n        this._diffEditorWidget = _diffEditorWidget;\n        this._canIgnoreViewZoneUpdateEvent = _canIgnoreViewZoneUpdateEvent;\n        this._origViewZonesToIgnore = _origViewZonesToIgnore;\n        this._modViewZonesToIgnore = _modViewZonesToIgnore;\n        this._clipboardService = _clipboardService;\n        this._contextMenuService = _contextMenuService;\n        this._originalTopPadding = observableValue(this, 0);\n        this._originalScrollOffset = observableValue(this, 0);\n        this._originalScrollOffsetAnimated = animatedObservable(this._targetWindow, this._originalScrollOffset, this._store);\n        this._modifiedTopPadding = observableValue(this, 0);\n        this._modifiedScrollOffset = observableValue(this, 0);\n        this._modifiedScrollOffsetAnimated = animatedObservable(this._targetWindow, this._modifiedScrollOffset, this._store);\n        const state = observableValue('invalidateAlignmentsState', 0);\n        const updateImmediately = this._register(new RunOnceScheduler(() => {\n            state.set(state.get() + 1, undefined);\n        }, 0));\n        this._register(this._editors.original.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) {\n            updateImmediately.schedule();\n        } }));\n        this._register(this._editors.modified.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) {\n            updateImmediately.schedule();\n        } }));\n        this._register(this._editors.original.onDidChangeConfiguration((args) => {\n            if (args.hasChanged(147 /* EditorOption.wrappingInfo */) || args.hasChanged(67 /* EditorOption.lineHeight */)) {\n                updateImmediately.schedule();\n            }\n        }));\n        this._register(this._editors.modified.onDidChangeConfiguration((args) => {\n            if (args.hasChanged(147 /* EditorOption.wrappingInfo */) || args.hasChanged(67 /* EditorOption.lineHeight */)) {\n                updateImmediately.schedule();\n            }\n        }));\n        const originalModelTokenizationCompleted = this._diffModel.map(m => m ? observableFromEvent(this, m.model.original.onDidChangeTokens, () => m.model.original.tokenization.backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) : undefined).map((m, reader) => m?.read(reader));\n        const alignments = derived((reader) => {\n            /** @description alignments */\n            const diffModel = this._diffModel.read(reader);\n            const diff = diffModel?.diff.read(reader);\n            if (!diffModel || !diff) {\n                return null;\n            }\n            state.read(reader);\n            const renderSideBySide = this._options.renderSideBySide.read(reader);\n            const innerHunkAlignment = renderSideBySide;\n            return computeRangeAlignment(this._editors.original, this._editors.modified, diff.mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, innerHunkAlignment);\n        });\n        const alignmentsSyncedMovedText = derived((reader) => {\n            /** @description alignmentsSyncedMovedText */\n            const syncedMovedText = this._diffModel.read(reader)?.movedTextToCompare.read(reader);\n            if (!syncedMovedText) {\n                return null;\n            }\n            state.read(reader);\n            const mappings = syncedMovedText.changes.map(c => new DiffMapping(c));\n            // TODO dont include alignments outside syncedMovedText\n            return computeRangeAlignment(this._editors.original, this._editors.modified, mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, true);\n        });\n        function createFakeLinesDiv() {\n            const r = document.createElement('div');\n            r.className = 'diagonal-fill';\n            return r;\n        }\n        const alignmentViewZonesDisposables = this._register(new DisposableStore());\n        this.viewZones = derivedWithStore(this, (reader, store) => {\n            alignmentViewZonesDisposables.clear();\n            const alignmentsVal = alignments.read(reader) || [];\n            const origViewZones = [];\n            const modViewZones = [];\n            const modifiedTopPaddingVal = this._modifiedTopPadding.read(reader);\n            if (modifiedTopPaddingVal > 0) {\n                modViewZones.push({\n                    afterLineNumber: 0,\n                    domNode: document.createElement('div'),\n                    heightInPx: modifiedTopPaddingVal,\n                    showInHiddenAreas: true,\n                    suppressMouseDown: true,\n                });\n            }\n            const originalTopPaddingVal = this._originalTopPadding.read(reader);\n            if (originalTopPaddingVal > 0) {\n                origViewZones.push({\n                    afterLineNumber: 0,\n                    domNode: document.createElement('div'),\n                    heightInPx: originalTopPaddingVal,\n                    showInHiddenAreas: true,\n                    suppressMouseDown: true,\n                });\n            }\n            const renderSideBySide = this._options.renderSideBySide.read(reader);\n            const deletedCodeLineBreaksComputer = !renderSideBySide ? this._editors.modified._getViewModel()?.createLineBreaksComputer() : undefined;\n            if (deletedCodeLineBreaksComputer) {\n                const originalModel = this._editors.original.getModel();\n                for (const a of alignmentsVal) {\n                    if (a.diff) {\n                        for (let i = a.originalRange.startLineNumber; i < a.originalRange.endLineNumberExclusive; i++) {\n                            // `i` can be out of bound when the diff has not been updated yet.\n                            // In this case, we do an early return.\n                            // TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n                            if (i > originalModel.getLineCount()) {\n                                return { orig: origViewZones, mod: modViewZones };\n                            }\n                            deletedCodeLineBreaksComputer?.addRequest(originalModel.getLineContent(i), null, null);\n                        }\n                    }\n                }\n            }\n            const lineBreakData = deletedCodeLineBreaksComputer?.finalize() ?? [];\n            let lineBreakDataIdx = 0;\n            const modLineHeight = this._editors.modified.getOption(67 /* EditorOption.lineHeight */);\n            const syncedMovedText = this._diffModel.read(reader)?.movedTextToCompare.read(reader);\n            const mightContainNonBasicASCII = this._editors.original.getModel()?.mightContainNonBasicASCII() ?? false;\n            const mightContainRTL = this._editors.original.getModel()?.mightContainRTL() ?? false;\n            const renderOptions = RenderOptions.fromEditor(this._editors.modified);\n            for (const a of alignmentsVal) {\n                if (a.diff && !renderSideBySide && (!this._options.useTrueInlineDiffRendering.read(reader) || !allowsTrueInlineDiffRendering(a.diff))) {\n                    if (!a.originalRange.isEmpty) {\n                        originalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n                        const deletedCodeDomNode = document.createElement('div');\n                        deletedCodeDomNode.classList.add('view-lines', 'line-delete', 'monaco-mouse-cursor-text');\n                        const originalModel = this._editors.original.getModel();\n                        // `a.originalRange` can be out of bound when the diff has not been updated yet.\n                        // In this case, we do an early return.\n                        // TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n                        if (a.originalRange.endLineNumberExclusive - 1 > originalModel.getLineCount()) {\n                            return { orig: origViewZones, mod: modViewZones };\n                        }\n                        const source = new LineSource(a.originalRange.mapToLineArray(l => originalModel.tokenization.getLineTokens(l)), a.originalRange.mapToLineArray(_ => lineBreakData[lineBreakDataIdx++]), mightContainNonBasicASCII, mightContainRTL);\n                        const decorations = [];\n                        for (const i of a.diff.innerChanges || []) {\n                            decorations.push(new InlineDecoration(i.originalRange.delta(-(a.diff.original.startLineNumber - 1)), diffDeleteDecoration.className, 0 /* InlineDecorationType.Regular */));\n                        }\n                        const result = renderLines(source, renderOptions, decorations, deletedCodeDomNode);\n                        const marginDomNode = document.createElement('div');\n                        marginDomNode.className = 'inline-deleted-margin-view-zone';\n                        applyFontInfo(marginDomNode, renderOptions.fontInfo);\n                        if (this._options.renderIndicators.read(reader)) {\n                            for (let i = 0; i < result.heightInLines; i++) {\n                                const marginElement = document.createElement('div');\n                                marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n                                marginElement.setAttribute('style', `position:absolute;top:${i * modLineHeight}px;width:${renderOptions.lineDecorationsWidth}px;height:${modLineHeight}px;right:0;`);\n                                marginDomNode.appendChild(marginElement);\n                            }\n                        }\n                        let zoneId = undefined;\n                        alignmentViewZonesDisposables.add(new InlineDiffDeletedCodeMargin(() => assertIsDefined(zoneId), marginDomNode, this._editors.modified, a.diff, this._diffEditorWidget, result.viewLineCounts, this._editors.original.getModel(), this._contextMenuService, this._clipboardService));\n                        for (let i = 0; i < result.viewLineCounts.length; i++) {\n                            const count = result.viewLineCounts[i];\n                            // Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n                            if (count > 1) {\n                                origViewZones.push({\n                                    afterLineNumber: a.originalRange.startLineNumber + i,\n                                    domNode: createFakeLinesDiv(),\n                                    heightInPx: (count - 1) * modLineHeight,\n                                    showInHiddenAreas: true,\n                                    suppressMouseDown: true,\n                                });\n                            }\n                        }\n                        modViewZones.push({\n                            afterLineNumber: a.modifiedRange.startLineNumber - 1,\n                            domNode: deletedCodeDomNode,\n                            heightInPx: result.heightInLines * modLineHeight,\n                            minWidthInPx: result.minWidthInPx,\n                            marginDomNode,\n                            setZoneId(id) { zoneId = id; },\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                    const marginDomNode = document.createElement('div');\n                    marginDomNode.className = 'gutter-delete';\n                    origViewZones.push({\n                        afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: a.modifiedHeightInPx,\n                        marginDomNode,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n                else {\n                    const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n                    if (delta > 0) {\n                        if (syncedMovedText?.lineRangeMapping.original.delta(-1).deltaLength(2).contains(a.originalRange.endLineNumberExclusive - 1)) {\n                            continue;\n                        }\n                        origViewZones.push({\n                            afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                            domNode: createFakeLinesDiv(),\n                            heightInPx: delta,\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                    else {\n                        if (syncedMovedText?.lineRangeMapping.modified.delta(-1).deltaLength(2).contains(a.modifiedRange.endLineNumberExclusive - 1)) {\n                            continue;\n                        }\n                        function createViewZoneMarginArrow() {\n                            const arrow = document.createElement('div');\n                            arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n                            store.add(addDisposableListener(arrow, 'mousedown', e => e.stopPropagation()));\n                            store.add(addDisposableListener(arrow, 'click', e => {\n                                e.stopPropagation();\n                                _diffEditorWidget.revert(a.diff);\n                            }));\n                            return $('div', {}, arrow);\n                        }\n                        let marginDomNode = undefined;\n                        if (a.diff && a.diff.modified.isEmpty && this._options.shouldRenderOldRevertArrows.read(reader)) {\n                            marginDomNode = createViewZoneMarginArrow();\n                        }\n                        modViewZones.push({\n                            afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                            domNode: createFakeLinesDiv(),\n                            heightInPx: -delta,\n                            marginDomNode,\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                }\n            }\n            for (const a of alignmentsSyncedMovedText.read(reader) ?? []) {\n                if (!syncedMovedText?.lineRangeMapping.original.intersect(a.originalRange)\n                    || !syncedMovedText?.lineRangeMapping.modified.intersect(a.modifiedRange)) {\n                    // ignore unrelated alignments outside the synced moved text\n                    continue;\n                }\n                const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n                if (delta > 0) {\n                    origViewZones.push({\n                        afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: delta,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n                else {\n                    modViewZones.push({\n                        afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: -delta,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n            }\n            return { orig: origViewZones, mod: modViewZones };\n        });\n        let ignoreChange = false;\n        this._register(this._editors.original.onDidScrollChange(e => {\n            if (e.scrollLeftChanged && !ignoreChange) {\n                ignoreChange = true;\n                this._editors.modified.setScrollLeft(e.scrollLeft);\n                ignoreChange = false;\n            }\n        }));\n        this._register(this._editors.modified.onDidScrollChange(e => {\n            if (e.scrollLeftChanged && !ignoreChange) {\n                ignoreChange = true;\n                this._editors.original.setScrollLeft(e.scrollLeft);\n                ignoreChange = false;\n            }\n        }));\n        this._originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => /** @description original.getScrollTop */ this._editors.original.getScrollTop());\n        this._modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => /** @description modified.getScrollTop */ this._editors.modified.getScrollTop());\n        // origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n        // origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n        // modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n        // origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n        // origScrollTop >= 0, modScrollTop >= 0\n        this._register(autorun(reader => {\n            /** @description update scroll modified */\n            const newScrollTopModified = this._originalScrollTop.read(reader)\n                - (this._originalScrollOffsetAnimated.get() - this._modifiedScrollOffsetAnimated.read(reader))\n                - (this._originalTopPadding.get() - this._modifiedTopPadding.read(reader));\n            if (newScrollTopModified !== this._editors.modified.getScrollTop()) {\n                this._editors.modified.setScrollTop(newScrollTopModified, 1 /* ScrollType.Immediate */);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update scroll original */\n            const newScrollTopOriginal = this._modifiedScrollTop.read(reader)\n                - (this._modifiedScrollOffsetAnimated.get() - this._originalScrollOffsetAnimated.read(reader))\n                - (this._modifiedTopPadding.get() - this._originalTopPadding.read(reader));\n            if (newScrollTopOriginal !== this._editors.original.getScrollTop()) {\n                this._editors.original.setScrollTop(newScrollTopOriginal, 1 /* ScrollType.Immediate */);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update editor top offsets */\n            const m = this._diffModel.read(reader)?.movedTextToCompare.read(reader);\n            let deltaOrigToMod = 0;\n            if (m) {\n                const trueTopOriginal = this._editors.original.getTopForLineNumber(m.lineRangeMapping.original.startLineNumber, true) - this._originalTopPadding.get();\n                const trueTopModified = this._editors.modified.getTopForLineNumber(m.lineRangeMapping.modified.startLineNumber, true) - this._modifiedTopPadding.get();\n                deltaOrigToMod = trueTopModified - trueTopOriginal;\n            }\n            if (deltaOrigToMod > 0) {\n                this._modifiedTopPadding.set(0, undefined);\n                this._originalTopPadding.set(deltaOrigToMod, undefined);\n            }\n            else if (deltaOrigToMod < 0) {\n                this._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n                this._originalTopPadding.set(0, undefined);\n            }\n            else {\n                setTimeout(() => {\n                    this._modifiedTopPadding.set(0, undefined);\n                    this._originalTopPadding.set(0, undefined);\n                }, 400);\n            }\n            if (this._editors.modified.hasTextFocus()) {\n                this._originalScrollOffset.set(this._modifiedScrollOffset.get() - deltaOrigToMod, undefined, true);\n            }\n            else {\n                this._modifiedScrollOffset.set(this._originalScrollOffset.get() + deltaOrigToMod, undefined, true);\n            }\n        }));\n    }\n};\nDiffEditorViewZones = __decorate([\n    __param(8, IClipboardService),\n    __param(9, IContextMenuService)\n], DiffEditorViewZones);\nexport { DiffEditorViewZones };\nfunction computeRangeAlignment(originalEditor, modifiedEditor, diffs, originalEditorAlignmentViewZones, modifiedEditorAlignmentViewZones, innerHunkAlignment) {\n    const originalLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(originalEditor, originalEditorAlignmentViewZones));\n    const modifiedLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(modifiedEditor, modifiedEditorAlignmentViewZones));\n    const origLineHeight = originalEditor.getOption(67 /* EditorOption.lineHeight */);\n    const modLineHeight = modifiedEditor.getOption(67 /* EditorOption.lineHeight */);\n    const result = [];\n    let lastOriginalLineNumber = 0;\n    let lastModifiedLineNumber = 0;\n    function handleAlignmentsOutsideOfDiffs(untilOriginalLineNumberExclusive, untilModifiedLineNumberExclusive) {\n        while (true) {\n            let origNext = originalLineHeightOverrides.peek();\n            let modNext = modifiedLineHeightOverrides.peek();\n            if (origNext && origNext.lineNumber >= untilOriginalLineNumberExclusive) {\n                origNext = undefined;\n            }\n            if (modNext && modNext.lineNumber >= untilModifiedLineNumberExclusive) {\n                modNext = undefined;\n            }\n            if (!origNext && !modNext) {\n                break;\n            }\n            const distOrig = origNext ? origNext.lineNumber - lastOriginalLineNumber : Number.MAX_VALUE;\n            const distNext = modNext ? modNext.lineNumber - lastModifiedLineNumber : Number.MAX_VALUE;\n            if (distOrig < distNext) {\n                originalLineHeightOverrides.dequeue();\n                modNext = {\n                    lineNumber: origNext.lineNumber - lastOriginalLineNumber + lastModifiedLineNumber,\n                    heightInPx: 0,\n                };\n            }\n            else if (distOrig > distNext) {\n                modifiedLineHeightOverrides.dequeue();\n                origNext = {\n                    lineNumber: modNext.lineNumber - lastModifiedLineNumber + lastOriginalLineNumber,\n                    heightInPx: 0,\n                };\n            }\n            else {\n                originalLineHeightOverrides.dequeue();\n                modifiedLineHeightOverrides.dequeue();\n            }\n            result.push({\n                originalRange: LineRange.ofLength(origNext.lineNumber, 1),\n                modifiedRange: LineRange.ofLength(modNext.lineNumber, 1),\n                originalHeightInPx: origLineHeight + origNext.heightInPx,\n                modifiedHeightInPx: modLineHeight + modNext.heightInPx,\n                diff: undefined,\n            });\n        }\n    }\n    for (const m of diffs) {\n        const c = m.lineRangeMapping;\n        handleAlignmentsOutsideOfDiffs(c.original.startLineNumber, c.modified.startLineNumber);\n        let first = true;\n        let lastModLineNumber = c.modified.startLineNumber;\n        let lastOrigLineNumber = c.original.startLineNumber;\n        function emitAlignment(origLineNumberExclusive, modLineNumberExclusive, forceAlignment = false) {\n            if (origLineNumberExclusive < lastOrigLineNumber || modLineNumberExclusive < lastModLineNumber) {\n                return;\n            }\n            if (first) {\n                first = false;\n            }\n            else if (!forceAlignment && (origLineNumberExclusive === lastOrigLineNumber || modLineNumberExclusive === lastModLineNumber)) {\n                // This causes a re-alignment of an already aligned line.\n                // However, we don't care for the final alignment.\n                return;\n            }\n            const originalRange = new LineRange(lastOrigLineNumber, origLineNumberExclusive);\n            const modifiedRange = new LineRange(lastModLineNumber, modLineNumberExclusive);\n            if (originalRange.isEmpty && modifiedRange.isEmpty) {\n                return;\n            }\n            const originalAdditionalHeight = originalLineHeightOverrides\n                .takeWhile(v => v.lineNumber < origLineNumberExclusive)\n                ?.reduce((p, c) => p + c.heightInPx, 0) ?? 0;\n            const modifiedAdditionalHeight = modifiedLineHeightOverrides\n                .takeWhile(v => v.lineNumber < modLineNumberExclusive)\n                ?.reduce((p, c) => p + c.heightInPx, 0) ?? 0;\n            result.push({\n                originalRange,\n                modifiedRange,\n                originalHeightInPx: originalRange.length * origLineHeight + originalAdditionalHeight,\n                modifiedHeightInPx: modifiedRange.length * modLineHeight + modifiedAdditionalHeight,\n                diff: m.lineRangeMapping,\n            });\n            lastOrigLineNumber = origLineNumberExclusive;\n            lastModLineNumber = modLineNumberExclusive;\n        }\n        if (innerHunkAlignment) {\n            for (const i of c.innerChanges || []) {\n                if (i.originalRange.startColumn > 1 && i.modifiedRange.startColumn > 1) {\n                    // There is some unmodified text on this line before the diff\n                    emitAlignment(i.originalRange.startLineNumber, i.modifiedRange.startLineNumber);\n                }\n                const originalModel = originalEditor.getModel();\n                // When the diff is invalid, the ranges might be out of bounds (this should be fixed in the diff model by applying edits directly).\n                const maxColumn = i.originalRange.endLineNumber <= originalModel.getLineCount() ? originalModel.getLineMaxColumn(i.originalRange.endLineNumber) : Number.MAX_SAFE_INTEGER;\n                if (i.originalRange.endColumn < maxColumn) {\n                    // // There is some unmodified text on this line after the diff\n                    emitAlignment(i.originalRange.endLineNumber, i.modifiedRange.endLineNumber);\n                }\n            }\n        }\n        emitAlignment(c.original.endLineNumberExclusive, c.modified.endLineNumberExclusive, true);\n        lastOriginalLineNumber = c.original.endLineNumberExclusive;\n        lastModifiedLineNumber = c.modified.endLineNumberExclusive;\n    }\n    handleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n    return result;\n}\nfunction getAdditionalLineHeights(editor, viewZonesToIgnore) {\n    const viewZoneHeights = [];\n    const wrappingZoneHeights = [];\n    const hasWrapping = editor.getOption(147 /* EditorOption.wrappingInfo */).wrappingColumn !== -1;\n    const coordinatesConverter = editor._getViewModel().coordinatesConverter;\n    const editorLineHeight = editor.getOption(67 /* EditorOption.lineHeight */);\n    if (hasWrapping) {\n        for (let i = 1; i <= editor.getModel().getLineCount(); i++) {\n            const lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n            if (lineCount > 1) {\n                wrappingZoneHeights.push({ lineNumber: i, heightInPx: editorLineHeight * (lineCount - 1) });\n            }\n        }\n    }\n    for (const w of editor.getWhitespaces()) {\n        if (viewZonesToIgnore.has(w.id)) {\n            continue;\n        }\n        const modelLineNumber = w.afterLineNumber === 0 ? 0 : coordinatesConverter.convertViewPositionToModelPosition(new Position(w.afterLineNumber, 1)).lineNumber;\n        viewZoneHeights.push({ lineNumber: modelLineNumber, heightInPx: w.height });\n    }\n    const result = joinCombine(viewZoneHeights, wrappingZoneHeights, v => v.lineNumber, (v1, v2) => ({ lineNumber: v1.lineNumber, heightInPx: v1.heightInPx + v2.heightInPx }));\n    return result;\n}\nexport function allowsTrueInlineDiffRendering(mapping) {\n    if (!mapping.innerChanges) {\n        return false;\n    }\n    return mapping.innerChanges.every(c => (rangeIsSingleLine(c.modifiedRange) && rangeIsSingleLine(c.originalRange))\n        || c.originalRange.equalsRange(new Range(1, 1, 1, 1)));\n}\nfunction rangeIsSingleLine(range) {\n    return range.startLineNumber === range.endLineNumber;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { derived } from '../../../../../base/common/observable.js';\nimport { allowsTrueInlineDiffRendering } from './diffEditorViewZones/diffEditorViewZones.js';\nimport { MovedBlocksLinesFeature } from '../features/movedBlocksLinesFeature.js';\nimport { diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackground, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackground, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from '../registrations.contribution.js';\nimport { applyObservableDecorations } from '../utils.js';\nexport class DiffEditorDecorations extends Disposable {\n    constructor(_editors, _diffModel, _options, widget) {\n        super();\n        this._editors = _editors;\n        this._diffModel = _diffModel;\n        this._options = _options;\n        this._decorations = derived(this, (reader) => {\n            const diffModel = this._diffModel.read(reader);\n            const diff = diffModel?.diff.read(reader);\n            if (!diff) {\n                return null;\n            }\n            const movedTextToCompare = this._diffModel.read(reader).movedTextToCompare.read(reader);\n            const renderIndicators = this._options.renderIndicators.read(reader);\n            const showEmptyDecorations = this._options.showEmptyDecorations.read(reader);\n            const originalDecorations = [];\n            const modifiedDecorations = [];\n            if (!movedTextToCompare) {\n                for (const m of diff.mappings) {\n                    if (!m.lineRangeMapping.original.isEmpty) {\n                        originalDecorations.push({ range: m.lineRangeMapping.original.toInclusiveRange(), options: renderIndicators ? diffLineDeleteDecorationBackgroundWithIndicator : diffLineDeleteDecorationBackground });\n                    }\n                    if (!m.lineRangeMapping.modified.isEmpty) {\n                        modifiedDecorations.push({ range: m.lineRangeMapping.modified.toInclusiveRange(), options: renderIndicators ? diffLineAddDecorationBackgroundWithIndicator : diffLineAddDecorationBackground });\n                    }\n                    if (m.lineRangeMapping.modified.isEmpty || m.lineRangeMapping.original.isEmpty) {\n                        if (!m.lineRangeMapping.original.isEmpty) {\n                            originalDecorations.push({ range: m.lineRangeMapping.original.toInclusiveRange(), options: diffWholeLineDeleteDecoration });\n                        }\n                        if (!m.lineRangeMapping.modified.isEmpty) {\n                            modifiedDecorations.push({ range: m.lineRangeMapping.modified.toInclusiveRange(), options: diffWholeLineAddDecoration });\n                        }\n                    }\n                    else {\n                        const useInlineDiff = this._options.useTrueInlineDiffRendering.read(reader) && allowsTrueInlineDiffRendering(m.lineRangeMapping);\n                        for (const i of m.lineRangeMapping.innerChanges || []) {\n                            // Don't show empty markers outside the line range\n                            if (m.lineRangeMapping.original.contains(i.originalRange.startLineNumber)) {\n                                originalDecorations.push({ range: i.originalRange, options: (i.originalRange.isEmpty() && showEmptyDecorations) ? diffDeleteDecorationEmpty : diffDeleteDecoration });\n                            }\n                            if (m.lineRangeMapping.modified.contains(i.modifiedRange.startLineNumber)) {\n                                modifiedDecorations.push({ range: i.modifiedRange, options: (i.modifiedRange.isEmpty() && showEmptyDecorations && !useInlineDiff) ? diffAddDecorationEmpty : diffAddDecoration });\n                            }\n                            if (useInlineDiff) {\n                                const deletedText = diffModel.model.original.getValueInRange(i.originalRange);\n                                modifiedDecorations.push({\n                                    range: i.modifiedRange,\n                                    options: {\n                                        description: 'deleted-text',\n                                        before: {\n                                            content: deletedText,\n                                            inlineClassName: 'inline-deleted-text',\n                                        },\n                                        zIndex: 100000,\n                                        showIfCollapsed: true,\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (movedTextToCompare) {\n                for (const m of movedTextToCompare.changes) {\n                    const fullRangeOriginal = m.original.toInclusiveRange();\n                    if (fullRangeOriginal) {\n                        originalDecorations.push({ range: fullRangeOriginal, options: renderIndicators ? diffLineDeleteDecorationBackgroundWithIndicator : diffLineDeleteDecorationBackground });\n                    }\n                    const fullRangeModified = m.modified.toInclusiveRange();\n                    if (fullRangeModified) {\n                        modifiedDecorations.push({ range: fullRangeModified, options: renderIndicators ? diffLineAddDecorationBackgroundWithIndicator : diffLineAddDecorationBackground });\n                    }\n                    for (const i of m.innerChanges || []) {\n                        originalDecorations.push({ range: i.originalRange, options: diffDeleteDecoration });\n                        modifiedDecorations.push({ range: i.modifiedRange, options: diffAddDecoration });\n                    }\n                }\n            }\n            const activeMovedText = this._diffModel.read(reader).activeMovedText.read(reader);\n            for (const m of diff.movedTexts) {\n                originalDecorations.push({\n                    range: m.lineRangeMapping.original.toInclusiveRange(), options: {\n                        description: 'moved',\n                        blockClassName: 'movedOriginal' + (m === activeMovedText ? ' currentMove' : ''),\n                        blockPadding: [MovedBlocksLinesFeature.movedCodeBlockPadding, 0, MovedBlocksLinesFeature.movedCodeBlockPadding, MovedBlocksLinesFeature.movedCodeBlockPadding],\n                    }\n                });\n                modifiedDecorations.push({\n                    range: m.lineRangeMapping.modified.toInclusiveRange(), options: {\n                        description: 'moved',\n                        blockClassName: 'movedModified' + (m === activeMovedText ? ' currentMove' : ''),\n                        blockPadding: [4, 0, 4, 4],\n                    }\n                });\n            }\n            return { originalDecorations, modifiedDecorations };\n        });\n        this._register(applyObservableDecorations(this._editors.original, this._decorations.map(d => d?.originalDecorations || [])));\n        this._register(applyObservableDecorations(this._editors.modified, this._decorations.map(d => d?.modifiedDecorations || [])));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Sash } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, observableValue } from '../../../../../base/common/observable.js';\nimport { derivedWithSetter } from '../../../../../base/common/observableInternal/derived.js';\nexport class SashLayout {\n    resetSash() {\n        this._sashRatio.set(undefined, undefined);\n    }\n    constructor(_options, dimensions) {\n        this._options = _options;\n        this.dimensions = dimensions;\n        this.sashLeft = derivedWithSetter(this, reader => {\n            const ratio = this._sashRatio.read(reader) ?? this._options.splitViewDefaultRatio.read(reader);\n            return this._computeSashLeft(ratio, reader);\n        }, (value, tx) => {\n            const contentWidth = this.dimensions.width.get();\n            this._sashRatio.set(value / contentWidth, tx);\n        });\n        this._sashRatio = observableValue(this, undefined);\n    }\n    /** @pure */\n    _computeSashLeft(desiredRatio, reader) {\n        const contentWidth = this.dimensions.width.read(reader);\n        const midPoint = Math.floor(this._options.splitViewDefaultRatio.read(reader) * contentWidth);\n        const sashLeft = this._options.enableSplitViewResizing.read(reader) ? Math.floor(desiredRatio * contentWidth) : midPoint;\n        const MINIMUM_EDITOR_WIDTH = 100;\n        if (contentWidth <= MINIMUM_EDITOR_WIDTH * 2) {\n            return midPoint;\n        }\n        if (sashLeft < MINIMUM_EDITOR_WIDTH) {\n            return MINIMUM_EDITOR_WIDTH;\n        }\n        if (sashLeft > contentWidth - MINIMUM_EDITOR_WIDTH) {\n            return contentWidth - MINIMUM_EDITOR_WIDTH;\n        }\n        return sashLeft;\n    }\n}\nexport class DiffEditorSash extends Disposable {\n    constructor(_domNode, _dimensions, _enabled, _boundarySashes, sashLeft, _resetSash) {\n        super();\n        this._domNode = _domNode;\n        this._dimensions = _dimensions;\n        this._enabled = _enabled;\n        this._boundarySashes = _boundarySashes;\n        this.sashLeft = sashLeft;\n        this._resetSash = _resetSash;\n        this._sash = this._register(new Sash(this._domNode, {\n            getVerticalSashTop: (_sash) => 0,\n            getVerticalSashLeft: (_sash) => this.sashLeft.get(),\n            getVerticalSashHeight: (_sash) => this._dimensions.height.get(),\n        }, { orientation: 0 /* Orientation.VERTICAL */ }));\n        this._startSashPosition = undefined;\n        this._register(this._sash.onDidStart(() => {\n            this._startSashPosition = this.sashLeft.get();\n        }));\n        this._register(this._sash.onDidChange((e) => {\n            this.sashLeft.set(this._startSashPosition + (e.currentX - e.startX), undefined);\n        }));\n        this._register(this._sash.onDidEnd(() => this._sash.layout()));\n        this._register(this._sash.onDidReset(() => this._resetSash()));\n        this._register(autorun(reader => {\n            const sashes = this._boundarySashes.read(reader);\n            if (sashes) {\n                this._sash.orthogonalEndSash = sashes.bottom;\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description DiffEditorSash.layoutSash */\n            const enabled = this._enabled.read(reader);\n            this._sash.state = enabled ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n            this.sashLeft.read(reader);\n            this._dimensions.height.read(reader);\n            this._sash.layout();\n        }));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorunHandleChanges, derivedOpts, observableFromEvent } from '../../../../../base/common/observable.js';\nimport { observableCodeEditor } from '../../../observableCodeEditor.js';\nimport { OverviewRulerFeature } from '../features/overviewRulerFeature.js';\nimport { EditorOptions } from '../../../../common/config/editorOptions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { localize } from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nlet DiffEditorEditors = class DiffEditorEditors extends Disposable {\n    get onDidContentSizeChange() { return this._onDidContentSizeChange.event; }\n    constructor(originalEditorElement, modifiedEditorElement, _options, _argCodeEditorWidgetOptions, _createInnerEditor, _instantiationService, _keybindingService) {\n        super();\n        this.originalEditorElement = originalEditorElement;\n        this.modifiedEditorElement = modifiedEditorElement;\n        this._options = _options;\n        this._argCodeEditorWidgetOptions = _argCodeEditorWidgetOptions;\n        this._createInnerEditor = _createInnerEditor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this.original = this._register(this._createLeftHandSideEditor(this._options.editorOptions.get(), this._argCodeEditorWidgetOptions.originalEditor || {}));\n        this.modified = this._register(this._createRightHandSideEditor(this._options.editorOptions.get(), this._argCodeEditorWidgetOptions.modifiedEditor || {}));\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this.modifiedScrollTop = observableFromEvent(this, this.modified.onDidScrollChange, () => /** @description modified.getScrollTop */ this.modified.getScrollTop());\n        this.modifiedScrollHeight = observableFromEvent(this, this.modified.onDidScrollChange, () => /** @description modified.getScrollHeight */ this.modified.getScrollHeight());\n        this.modifiedObs = observableCodeEditor(this.modified);\n        this.originalObs = observableCodeEditor(this.original);\n        this.modifiedModel = this.modifiedObs.model;\n        this.modifiedSelections = observableFromEvent(this, this.modified.onDidChangeCursorSelection, () => this.modified.getSelections() ?? []);\n        this.modifiedCursor = derivedOpts({ owner: this, equalsFn: Position.equals }, reader => this.modifiedSelections.read(reader)[0]?.getPosition() ?? new Position(1, 1));\n        this.originalCursor = observableFromEvent(this, this.original.onDidChangeCursorPosition, () => this.original.getPosition() ?? new Position(1, 1));\n        this._argCodeEditorWidgetOptions = null;\n        this._register(autorunHandleChanges({\n            createEmptyChangeSummary: () => ({}),\n            handleChange: (ctx, changeSummary) => {\n                if (ctx.didChange(_options.editorOptions)) {\n                    Object.assign(changeSummary, ctx.change.changedOptions);\n                }\n                return true;\n            }\n        }, (reader, changeSummary) => {\n            /** @description update editor options */\n            _options.editorOptions.read(reader);\n            this._options.renderSideBySide.read(reader);\n            this.modified.updateOptions(this._adjustOptionsForRightHandSide(reader, changeSummary));\n            this.original.updateOptions(this._adjustOptionsForLeftHandSide(reader, changeSummary));\n        }));\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const leftHandSideOptions = this._adjustOptionsForLeftHandSide(undefined, options);\n        const editor = this._constructInnerEditor(this._instantiationService, this.originalEditorElement, leftHandSideOptions, codeEditorWidgetOptions);\n        editor.setContextValue('isInDiffLeftEditor', true);\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const rightHandSideOptions = this._adjustOptionsForRightHandSide(undefined, options);\n        const editor = this._constructInnerEditor(this._instantiationService, this.modifiedEditorElement, rightHandSideOptions, codeEditorWidgetOptions);\n        editor.setContextValue('isInDiffRightEditor', true);\n        return editor;\n    }\n    _constructInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        const editor = this._createInnerEditor(instantiationService, container, options, editorWidgetOptions);\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this.original.getContentWidth() + this.modified.getContentWidth() + OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH;\n            const height = Math.max(this.modified.getContentHeight(), this.original.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _adjustOptionsForLeftHandSide(_reader, changedOptions) {\n        const result = this._adjustOptionsForSubEditor(changedOptions);\n        if (!this._options.renderSideBySide.get()) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n            result.stickyScroll = { enabled: false };\n            // Disable unicode highlighting for the original side in inline mode, as they are not shown anyway.\n            result.unicodeHighlight = { nonBasicASCII: false, ambiguousCharacters: false, invisibleCharacters: false };\n        }\n        else {\n            result.unicodeHighlight = this._options.editorOptions.get().unicodeHighlight || {};\n            result.wordWrapOverride1 = this._options.diffWordWrap.get();\n        }\n        result.glyphMargin = this._options.renderSideBySide.get();\n        if (changedOptions.originalAriaLabel) {\n            result.ariaLabel = changedOptions.originalAriaLabel;\n        }\n        result.ariaLabel = this._updateAriaLabel(result.ariaLabel);\n        result.readOnly = !this._options.originalEditable.get();\n        result.dropIntoEditor = { enabled: !result.readOnly };\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return result;\n    }\n    _adjustOptionsForRightHandSide(reader, changedOptions) {\n        const result = this._adjustOptionsForSubEditor(changedOptions);\n        if (changedOptions.modifiedAriaLabel) {\n            result.ariaLabel = changedOptions.modifiedAriaLabel;\n        }\n        result.ariaLabel = this._updateAriaLabel(result.ariaLabel);\n        result.wordWrapOverride1 = this._options.diffWordWrap.get();\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + OverviewRulerFeature.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return result;\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = {\n            ...options,\n            dimension: {\n                height: 0,\n                width: 0\n            },\n        };\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = { ...(clonedOptions.scrollbar || {}) };\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens.get();\n        clonedOptions.fixedOverflowWidgets = true;\n        // Clone minimap options before changing them\n        clonedOptions.minimap = { ...(clonedOptions.minimap || {}) };\n        clonedOptions.minimap.enabled = false;\n        if (this._options.hideUnchangedRegions.get()) {\n            clonedOptions.stickyScroll = { enabled: false };\n        }\n        else {\n            clonedOptions.stickyScroll = this._options.editorOptions.get().stickyScroll;\n        }\n        return clonedOptions;\n    }\n    _updateAriaLabel(ariaLabel) {\n        if (!ariaLabel) {\n            ariaLabel = '';\n        }\n        const ariaNavigationTip = localize('diff-aria-navigation-tip', ' use {0} to open the accessibility help.', this._keybindingService.lookupKeybinding('editor.action.accessibilityHelp')?.getAriaLabel());\n        if (this._options.accessibilityVerbose.get()) {\n            return ariaLabel + ariaNavigationTip;\n        }\n        else if (ariaLabel) {\n            return ariaLabel.replaceAll(ariaNavigationTip, '');\n        }\n        return '';\n    }\n};\nDiffEditorEditors = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IKeybindingService)\n], DiffEditorEditors);\nexport { DiffEditorEditors };\n"],"names":["reset","addStandardDisposableListener","addDisposableListener","getDomNodePagePosition","$","createTrustedTypesPolicy","ActionBar","DomScrollableElement","Sash","localize","Codicon","Disposable","derivedWithStore","transaction","observableValue","autorun","subtransaction","Action","ThemeIcon","toDisposable","autorunWithStore","derived","groupAdjacentBy","forEachAdjacent","isIOS","RunOnceScheduler","observableFromEvent","DisposableStore","ArrayQueue","assertIsDefined","derivedWithSetter","Emitter","derivedOpts","autorunHandleChanges","applyStyle","applyFontInfo","animatedObservable","DiffMapping","joinCombine","diffDeleteDecoration","diffRemoveIcon","diffLineDeleteDecorationBackgroundWithIndicator","diffLineDeleteDecorationBackground","diffLineAddDecorationBackgroundWithIndicator","diffLineAddDecorationBackground","diffWholeLineDeleteDecoration","diffWholeLineAddDecoration","diffDeleteDecorationEmpty","diffAddDecorationEmpty","diffAddDecoration","MovedBlocksLinesFeature","applyObservableDecorations","observableCodeEditor","OverviewRulerFeature","ILanguageService","Range","Position","OffsetRange","LineTokens","ViewLineRenderingData","renderViewLine2","RenderLineInput","EditorFontLigatures","LineRange","LineRangeMapping","LineDecoration","StringBuilder","renderViewLine","InlineDecoration","EditorOptions","registerIcon","IInstantiationService","IAccessibilitySignalService","AccessibilitySignal","IClipboardService","IContextMenuService","IKeybindingService","__decorate","decorators","target","key","desc","c","r","d","i","__param","paramIndex","decorator","accessibleDiffViewerInsertIcon","accessibleDiffViewerRemoveIcon","accessibleDiffViewerCloseIcon","_a","AccessibleDiffViewer","_parentNode","_visible","_setVisible","_canClose","_width","_height","_diffs","_models","_instantiationService","reader","store","visible","model","ViewModel","view","View","tx","isVisible","value","canClose","_accessibilitySignalService","idx","diffs","groups","computeViewElementGroups","nextGroup","g","currentViewItem","LineType","lineNumber","delta","group","line","curElem","viewElementGroupLineMargin","originalLineCount","modifiedLineCount","result","a","b","viewElements","HeaderViewElement","origFullRange","modifiedFullRange","origRange","modifiedRange","origLineNumber","UnchangedLineViewElement","DeletedLineViewElement","modifiedLineNumber","AddedLineViewElement","originalRange","ViewElementGroup","range","lines","diff","originalLineNumber","_element","_model","_languageService","actionBarContainer","e","originalOptions","modifiedOptions","container","originalModel","modifiedModel","originalModelOpts","modifiedModelOpts","lineHeight","viewItem","row","header","diffIndex","diffsLength","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","cell","isSelectedObs","isSelected","item","width","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","rowClassName","lineNumbersExtraClassName","spacerClassName","spacerIcon","spacer","spacerCodicon","lineContent","html","ariaLabel","options","tabSize","languageIdCodec","fontInfo","lineTokens","isBasicASCII","containsRTL","AccessibleDiffViewerModelFromEditors","editors","InlineDiffDeletedCodeMargin","_visibility","_getViewZoneId","_marginDomNode","_modifiedEditor","_diff","_editor","_viewLineCounts","_originalTextModel","_contextMenuService","_clipboardService","currentLineNumberOffset","useShadowDOM","showContextMenu","x","y","actions","isDeletion","originalText","top","height","pad","marginDomNode","offset","lineNumberOffset","newTop","acc","ttPolicy","renderLines","source","decorations","domNode","hasCharChanges","sb","maxCharsPerLine","renderedLineCount","viewLineCounts","lineIndex","lineBreakData","actualDecorations","lastBreakOffset","breakOffset","viewLineTokens","renderOriginalLine","trustedhtml","minWidthInPx","LineSource","mightContainNonBasicASCII","mightContainRTL","RenderOptions","editor","modifiedEditorOptions","layoutInfo","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","viewLineIdx","output","DiffEditorViewZones","_targetWindow","_editors","_diffModel","_options","_diffEditorWidget","_canIgnoreViewZoneUpdateEvent","_origViewZonesToIgnore","_modViewZonesToIgnore","state","updateImmediately","_args","args","originalModelTokenizationCompleted","m","alignments","diffModel","innerHunkAlignment","computeRangeAlignment","alignmentsSyncedMovedText","syncedMovedText","mappings","createFakeLinesDiv","alignmentViewZonesDisposables","_b","_c","_d","alignmentsVal","origViewZones","modViewZones","modifiedTopPaddingVal","originalTopPaddingVal","renderSideBySide","deletedCodeLineBreaksComputer","lineBreakDataIdx","modLineHeight","renderOptions","allowsTrueInlineDiffRendering","deletedCodeDomNode","l","_","marginElement","zoneId","count","id","createViewZoneMarginArrow","arrow","ignoreChange","newScrollTopModified","newScrollTopOriginal","deltaOrigToMod","trueTopOriginal","originalEditor","modifiedEditor","originalEditorAlignmentViewZones","modifiedEditorAlignmentViewZones","originalLineHeightOverrides","getAdditionalLineHeights","modifiedLineHeightOverrides","origLineHeight","lastOriginalLineNumber","lastModifiedLineNumber","handleAlignmentsOutsideOfDiffs","untilOriginalLineNumberExclusive","untilModifiedLineNumberExclusive","origNext","modNext","distOrig","distNext","emitAlignment","origLineNumberExclusive","modLineNumberExclusive","forceAlignment","lastOrigLineNumber","lastModLineNumber","first","originalAdditionalHeight","v","p","modifiedAdditionalHeight","maxColumn","viewZonesToIgnore","viewZoneHeights","wrappingZoneHeights","hasWrapping","coordinatesConverter","editorLineHeight","lineCount","w","modelLineNumber","v1","v2","mapping","rangeIsSingleLine","DiffEditorDecorations","widget","movedTextToCompare","renderIndicators","showEmptyDecorations","originalDecorations","modifiedDecorations","useInlineDiff","deletedText","fullRangeOriginal","fullRangeModified","activeMovedText","SashLayout","dimensions","ratio","contentWidth","desiredRatio","midPoint","sashLeft","MINIMUM_EDITOR_WIDTH","DiffEditorSash","_domNode","_dimensions","_enabled","_boundarySashes","_resetSash","_sash","sashes","enabled","DiffEditorEditors","originalEditorElement","modifiedEditorElement","_argCodeEditorWidgetOptions","_createInnerEditor","_keybindingService","ctx","changeSummary","codeEditorWidgetOptions","leftHandSideOptions","rightHandSideOptions","instantiationService","editorWidgetOptions","_reader","changedOptions","clonedOptions","ariaNavigationTip"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}