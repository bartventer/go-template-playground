{"version":3,"file":"monaco-editor-esm-vs-platform-Dgi-XxQ2.js","sources":["../../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","../../../node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","../../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../../../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js","../../../node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","../../../node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry.js","../../../node_modules/monaco-editor/esm/vs/platform/log/common/log.js","../../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/descriptors.js","../../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/extensions.js","../../../node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js","../../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","../../../node_modules/monaco-editor/esm/vs/platform/layout/browser/layoutService.js","../../../node_modules/monaco-editor/esm/vs/platform/dialogs/common/dialogs.js","../../../node_modules/monaco-editor/esm/vs/platform/notification/common/notification.js","../../../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","../../../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js","../../../node_modules/monaco-editor/esm/vs/platform/environment/common/environment.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colorUtils.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/baseColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/miscColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/editorColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/minimapColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/chartsColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/inputColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/listColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/menuColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/quickpickColors.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/searchColors.js","../../../node_modules/monaco-editor/esm/vs/platform/hover/browser/hover.js","../../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybinding.js","../../../node_modules/monaco-editor/esm/vs/platform/opener/common/opener.js","../../../node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility.js","../../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js","../../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingResolver.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/abstractKeybindingService.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/resolvedKeybindingItem.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/baseResolvedKeybinding.js","../../../node_modules/monaco-editor/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding.js","../../../node_modules/monaco-editor/esm/vs/platform/label/common/label.js","../../../node_modules/monaco-editor/esm/vs/platform/progress/common/progress.js","../../../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js","../../../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js","../../../node_modules/monaco-editor/esm/vs/platform/action/common/action.js","../../../node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js","../../../node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","../../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../../../node_modules/monaco-editor/esm/vs/platform/editor/common/editor.js","../../../node_modules/monaco-editor/esm/vs/platform/markers/common/markers.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickInput.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputUtils.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInput.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputBox.js","../../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../../../node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputTree.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputActions.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputController.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputService.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js","../../../node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js","../../../node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibilityService.js","../../../node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","../../../node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../../../node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../../../node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/graph.js","../../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js","../../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiationService.js","../../../node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js","../../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js","../../../node_modules/monaco-editor/esm/vs/platform/accessibilitySignal/browser/accessibilitySignalService.js","../../../node_modules/monaco-editor/esm/vs/platform/log/common/logService.js","../../../node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js","../../../node_modules/monaco-editor/esm/vs/platform/observable/common/platformObservableUtils.js","../../../node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js","../../../node_modules/monaco-editor/esm/vs/platform/dnd/browser/dnd.js","../../../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionList.js","../../../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionWidget.js","../../../node_modules/monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js","../../../node_modules/monaco-editor/esm/vs/platform/history/browser/historyWidgetKeybindingHint.js","../../../node_modules/monaco-editor/esm/vs/platform/files/common/files.js","../../../node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibleViewRegistry.js","../../../node_modules/monaco-editor/esm/vs/platform/severityIcon/browser/severityIcon.js","../../../node_modules/monaco-editor/esm/vs/platform/observable/common/wrapInReloadableClass.js","../../../node_modules/monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js","../../../node_modules/monaco-editor/esm/vs/platform/opener/browser/link.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js","../../../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.metadata && Array.isArray(idOrCommand.metadata.args)) {\n            const constraints = [];\n            for (const arg of idOrCommand.metadata.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command?.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    static { this._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0))); }\n    static { this._keywords = new Map([\n        ['not', 14 /* TokenType.Not */],\n        ['in', 13 /* TokenType.In */],\n        ['false', 12 /* TokenType.False */],\n        ['true', 11 /* TokenType.True */],\n    ]); }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    // Note: this doesn't produce an exact syntax tree but a normalized one\n    // ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n    static { this._parseError = new Error(); }\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr?.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static { this._parser = new Parser({ regexParsingWithErrorRecovery: false }); }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    static { this.INSTANCE = new ContextKeyFalseExpr(); }\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nexport class ContextKeyTrueExpr {\n    static { this.INSTANCE = new ContextKeyTrueExpr(); }\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static { this._info = []; }\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push({ ...metaOrHide, key });\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { combinedDisposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n/**\n * Stores all built-in and extension-provided keybindings (but not ones that user defines themselves)\n */\nclass KeybindingsRegistryImpl {\n    constructor() {\n        this._coreKeybindings = new LinkedList();\n        this._extensionKeybindings = [];\n        this._cachedMergedKeybindings = null;\n    }\n    /**\n     * Take current platform into account and reduce to primary & secondary.\n     */\n    static bindToCurrentPlatform(kb) {\n        if (OS === 1 /* OperatingSystem.Windows */) {\n            if (kb && kb.win) {\n                return kb.win;\n            }\n        }\n        else if (OS === 2 /* OperatingSystem.Macintosh */) {\n            if (kb && kb.mac) {\n                return kb.mac;\n            }\n        }\n        else {\n            if (kb && kb.linux) {\n                return kb.linux;\n            }\n        }\n        return kb;\n    }\n    registerKeybindingRule(rule) {\n        const actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n        const result = new DisposableStore();\n        if (actualKb && actualKb.primary) {\n            const kk = decodeKeybinding(actualKb.primary, OS);\n            if (kk) {\n                result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when));\n            }\n        }\n        if (actualKb && Array.isArray(actualKb.secondary)) {\n            for (let i = 0, len = actualKb.secondary.length; i < len; i++) {\n                const k = actualKb.secondary[i];\n                const kk = decodeKeybinding(k, OS);\n                if (kk) {\n                    result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, -i - 1, rule.when));\n                }\n            }\n        }\n        return result;\n    }\n    registerCommandAndKeybindingRule(desc) {\n        return combinedDisposable(this.registerKeybindingRule(desc), CommandsRegistry.registerCommand(desc));\n    }\n    _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n        const remove = this._coreKeybindings.push({\n            keybinding: keybinding,\n            command: commandId,\n            commandArgs: commandArgs,\n            when: when,\n            weight1: weight1,\n            weight2: weight2,\n            extensionId: null,\n            isBuiltinExtension: false\n        });\n        this._cachedMergedKeybindings = null;\n        return toDisposable(() => {\n            remove();\n            this._cachedMergedKeybindings = null;\n        });\n    }\n    getDefaultKeybindings() {\n        if (!this._cachedMergedKeybindings) {\n            this._cachedMergedKeybindings = Array.from(this._coreKeybindings).concat(this._extensionKeybindings);\n            this._cachedMergedKeybindings.sort(sorter);\n        }\n        return this._cachedMergedKeybindings.slice(0);\n    }\n}\nexport const KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport const Extensions = {\n    EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n    if (a.weight1 !== b.weight1) {\n        return a.weight1 - b.weight1;\n    }\n    if (a.command && b.command) {\n        if (a.command < b.command) {\n            return -1;\n        }\n        if (a.command > b.command) {\n            return 1;\n        }\n    }\n    return a.weight2 - b.weight2;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    static { this._instances = new Map(); }\n    static { this.CommandPalette = new MenuId('CommandPalette'); }\n    static { this.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext'); }\n    static { this.DebugCallStackContext = new MenuId('DebugCallStackContext'); }\n    static { this.DebugConsoleContext = new MenuId('DebugConsoleContext'); }\n    static { this.DebugVariablesContext = new MenuId('DebugVariablesContext'); }\n    static { this.NotebookVariablesContext = new MenuId('NotebookVariablesContext'); }\n    static { this.DebugHoverContext = new MenuId('DebugHoverContext'); }\n    static { this.DebugWatchContext = new MenuId('DebugWatchContext'); }\n    static { this.DebugToolBar = new MenuId('DebugToolBar'); }\n    static { this.DebugToolBarStop = new MenuId('DebugToolBarStop'); }\n    static { this.DebugCallStackToolbar = new MenuId('DebugCallStackToolbar'); }\n    static { this.DebugCreateConfiguration = new MenuId('DebugCreateConfiguration'); }\n    static { this.EditorContext = new MenuId('EditorContext'); }\n    static { this.SimpleEditorContext = new MenuId('SimpleEditorContext'); }\n    static { this.EditorContent = new MenuId('EditorContent'); }\n    static { this.EditorLineNumberContext = new MenuId('EditorLineNumberContext'); }\n    static { this.EditorContextCopy = new MenuId('EditorContextCopy'); }\n    static { this.EditorContextPeek = new MenuId('EditorContextPeek'); }\n    static { this.EditorContextShare = new MenuId('EditorContextShare'); }\n    static { this.EditorTitle = new MenuId('EditorTitle'); }\n    static { this.EditorTitleRun = new MenuId('EditorTitleRun'); }\n    static { this.EditorTitleContext = new MenuId('EditorTitleContext'); }\n    static { this.EditorTitleContextShare = new MenuId('EditorTitleContextShare'); }\n    static { this.EmptyEditorGroup = new MenuId('EmptyEditorGroup'); }\n    static { this.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext'); }\n    static { this.EditorTabsBarContext = new MenuId('EditorTabsBarContext'); }\n    static { this.EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu'); }\n    static { this.EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu'); }\n    static { this.EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu'); }\n    static { this.ExplorerContext = new MenuId('ExplorerContext'); }\n    static { this.ExplorerContextShare = new MenuId('ExplorerContextShare'); }\n    static { this.ExtensionContext = new MenuId('ExtensionContext'); }\n    static { this.GlobalActivity = new MenuId('GlobalActivity'); }\n    static { this.CommandCenter = new MenuId('CommandCenter'); }\n    static { this.CommandCenterCenter = new MenuId('CommandCenterCenter'); }\n    static { this.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu'); }\n    static { this.LayoutControlMenu = new MenuId('LayoutControlMenu'); }\n    static { this.MenubarMainMenu = new MenuId('MenubarMainMenu'); }\n    static { this.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu'); }\n    static { this.MenubarDebugMenu = new MenuId('MenubarDebugMenu'); }\n    static { this.MenubarEditMenu = new MenuId('MenubarEditMenu'); }\n    static { this.MenubarCopy = new MenuId('MenubarCopy'); }\n    static { this.MenubarFileMenu = new MenuId('MenubarFileMenu'); }\n    static { this.MenubarGoMenu = new MenuId('MenubarGoMenu'); }\n    static { this.MenubarHelpMenu = new MenuId('MenubarHelpMenu'); }\n    static { this.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu'); }\n    static { this.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu'); }\n    static { this.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu'); }\n    static { this.PanelPositionMenu = new MenuId('PanelPositionMenu'); }\n    static { this.ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu'); }\n    static { this.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu'); }\n    static { this.MenubarRecentMenu = new MenuId('MenubarRecentMenu'); }\n    static { this.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu'); }\n    static { this.MenubarShare = new MenuId('MenubarShare'); }\n    static { this.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu'); }\n    static { this.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu'); }\n    static { this.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu'); }\n    static { this.MenubarViewMenu = new MenuId('MenubarViewMenu'); }\n    static { this.MenubarHomeMenu = new MenuId('MenubarHomeMenu'); }\n    static { this.OpenEditorsContext = new MenuId('OpenEditorsContext'); }\n    static { this.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare'); }\n    static { this.ProblemsPanelContext = new MenuId('ProblemsPanelContext'); }\n    static { this.SCMInputBox = new MenuId('SCMInputBox'); }\n    static { this.SCMChangesSeparator = new MenuId('SCMChangesSeparator'); }\n    static { this.SCMChangesContext = new MenuId('SCMChangesContext'); }\n    static { this.SCMIncomingChanges = new MenuId('SCMIncomingChanges'); }\n    static { this.SCMIncomingChangesContext = new MenuId('SCMIncomingChangesContext'); }\n    static { this.SCMIncomingChangesSetting = new MenuId('SCMIncomingChangesSetting'); }\n    static { this.SCMOutgoingChanges = new MenuId('SCMOutgoingChanges'); }\n    static { this.SCMOutgoingChangesContext = new MenuId('SCMOutgoingChangesContext'); }\n    static { this.SCMOutgoingChangesSetting = new MenuId('SCMOutgoingChangesSetting'); }\n    static { this.SCMIncomingChangesAllChangesContext = new MenuId('SCMIncomingChangesAllChangesContext'); }\n    static { this.SCMIncomingChangesHistoryItemContext = new MenuId('SCMIncomingChangesHistoryItemContext'); }\n    static { this.SCMOutgoingChangesAllChangesContext = new MenuId('SCMOutgoingChangesAllChangesContext'); }\n    static { this.SCMOutgoingChangesHistoryItemContext = new MenuId('SCMOutgoingChangesHistoryItemContext'); }\n    static { this.SCMChangeContext = new MenuId('SCMChangeContext'); }\n    static { this.SCMResourceContext = new MenuId('SCMResourceContext'); }\n    static { this.SCMResourceContextShare = new MenuId('SCMResourceContextShare'); }\n    static { this.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext'); }\n    static { this.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext'); }\n    static { this.SCMSourceControl = new MenuId('SCMSourceControl'); }\n    static { this.SCMSourceControlInline = new MenuId('SCMSourceControlInline'); }\n    static { this.SCMSourceControlTitle = new MenuId('SCMSourceControlTitle'); }\n    static { this.SCMHistoryTitle = new MenuId('SCMHistoryTitle'); }\n    static { this.SCMTitle = new MenuId('SCMTitle'); }\n    static { this.SearchContext = new MenuId('SearchContext'); }\n    static { this.SearchActionMenu = new MenuId('SearchActionContext'); }\n    static { this.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu'); }\n    static { this.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu'); }\n    static { this.StickyScrollContext = new MenuId('StickyScrollContext'); }\n    static { this.TestItem = new MenuId('TestItem'); }\n    static { this.TestItemGutter = new MenuId('TestItemGutter'); }\n    static { this.TestProfilesContext = new MenuId('TestProfilesContext'); }\n    static { this.TestMessageContext = new MenuId('TestMessageContext'); }\n    static { this.TestMessageContent = new MenuId('TestMessageContent'); }\n    static { this.TestPeekElement = new MenuId('TestPeekElement'); }\n    static { this.TestPeekTitle = new MenuId('TestPeekTitle'); }\n    static { this.TestCallStack = new MenuId('TestCallStack'); }\n    static { this.TouchBarContext = new MenuId('TouchBarContext'); }\n    static { this.TitleBarContext = new MenuId('TitleBarContext'); }\n    static { this.TitleBarTitleContext = new MenuId('TitleBarTitleContext'); }\n    static { this.TunnelContext = new MenuId('TunnelContext'); }\n    static { this.TunnelPrivacy = new MenuId('TunnelPrivacy'); }\n    static { this.TunnelProtocol = new MenuId('TunnelProtocol'); }\n    static { this.TunnelPortInline = new MenuId('TunnelInline'); }\n    static { this.TunnelTitle = new MenuId('TunnelTitle'); }\n    static { this.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline'); }\n    static { this.TunnelOriginInline = new MenuId('TunnelOriginInline'); }\n    static { this.ViewItemContext = new MenuId('ViewItemContext'); }\n    static { this.ViewContainerTitle = new MenuId('ViewContainerTitle'); }\n    static { this.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext'); }\n    static { this.ViewTitle = new MenuId('ViewTitle'); }\n    static { this.ViewTitleContext = new MenuId('ViewTitleContext'); }\n    static { this.CommentEditorActions = new MenuId('CommentEditorActions'); }\n    static { this.CommentThreadTitle = new MenuId('CommentThreadTitle'); }\n    static { this.CommentThreadActions = new MenuId('CommentThreadActions'); }\n    static { this.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions'); }\n    static { this.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext'); }\n    static { this.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext'); }\n    static { this.CommentTitle = new MenuId('CommentTitle'); }\n    static { this.CommentActions = new MenuId('CommentActions'); }\n    static { this.CommentsViewThreadActions = new MenuId('CommentsViewThreadActions'); }\n    static { this.InteractiveToolbar = new MenuId('InteractiveToolbar'); }\n    static { this.InteractiveCellTitle = new MenuId('InteractiveCellTitle'); }\n    static { this.InteractiveCellDelete = new MenuId('InteractiveCellDelete'); }\n    static { this.InteractiveCellExecute = new MenuId('InteractiveCellExecute'); }\n    static { this.InteractiveInputExecute = new MenuId('InteractiveInputExecute'); }\n    static { this.InteractiveInputConfig = new MenuId('InteractiveInputConfig'); }\n    static { this.ReplInputExecute = new MenuId('ReplInputExecute'); }\n    static { this.IssueReporter = new MenuId('IssueReporter'); }\n    static { this.NotebookToolbar = new MenuId('NotebookToolbar'); }\n    static { this.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext'); }\n    static { this.NotebookCellTitle = new MenuId('NotebookCellTitle'); }\n    static { this.NotebookCellDelete = new MenuId('NotebookCellDelete'); }\n    static { this.NotebookCellInsert = new MenuId('NotebookCellInsert'); }\n    static { this.NotebookCellBetween = new MenuId('NotebookCellBetween'); }\n    static { this.NotebookCellListTop = new MenuId('NotebookCellTop'); }\n    static { this.NotebookCellExecute = new MenuId('NotebookCellExecute'); }\n    static { this.NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo'); }\n    static { this.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary'); }\n    static { this.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle'); }\n    static { this.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle'); }\n    static { this.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle'); }\n    static { this.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar'); }\n    static { this.NotebookOutlineFilter = new MenuId('NotebookOutlineFilter'); }\n    static { this.NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu'); }\n    static { this.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure'); }\n    static { this.NotebookKernelSource = new MenuId('NotebookKernelSource'); }\n    static { this.BulkEditTitle = new MenuId('BulkEditTitle'); }\n    static { this.BulkEditContext = new MenuId('BulkEditContext'); }\n    static { this.TimelineItemContext = new MenuId('TimelineItemContext'); }\n    static { this.TimelineTitle = new MenuId('TimelineTitle'); }\n    static { this.TimelineTitleContext = new MenuId('TimelineTitleContext'); }\n    static { this.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu'); }\n    static { this.AccountsContext = new MenuId('AccountsContext'); }\n    static { this.SidebarTitle = new MenuId('SidebarTitle'); }\n    static { this.PanelTitle = new MenuId('PanelTitle'); }\n    static { this.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle'); }\n    static { this.AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader'); }\n    static { this.TerminalInstanceContext = new MenuId('TerminalInstanceContext'); }\n    static { this.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext'); }\n    static { this.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext'); }\n    static { this.TerminalTabContext = new MenuId('TerminalTabContext'); }\n    static { this.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext'); }\n    static { this.TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext'); }\n    static { this.WebviewContext = new MenuId('WebviewContext'); }\n    static { this.InlineCompletionsActions = new MenuId('InlineCompletionsActions'); }\n    static { this.InlineEditsActions = new MenuId('InlineEditsActions'); }\n    static { this.InlineEditActions = new MenuId('InlineEditActions'); }\n    static { this.NewFile = new MenuId('NewFile'); }\n    static { this.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar'); }\n    static { this.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar'); }\n    static { this.MergeBaseToolbar = new MenuId('MergeBaseToolbar'); }\n    static { this.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar'); }\n    static { this.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar'); }\n    static { this.InlineEditToolbar = new MenuId('InlineEditToolbar'); }\n    static { this.ChatContext = new MenuId('ChatContext'); }\n    static { this.ChatCodeBlock = new MenuId('ChatCodeblock'); }\n    static { this.ChatCompareBlock = new MenuId('ChatCompareBlock'); }\n    static { this.ChatMessageTitle = new MenuId('ChatMessageTitle'); }\n    static { this.ChatExecute = new MenuId('ChatExecute'); }\n    static { this.ChatExecuteSecondary = new MenuId('ChatExecuteSecondary'); }\n    static { this.ChatInputSide = new MenuId('ChatInputSide'); }\n    static { this.AccessibleView = new MenuId('AccessibleView'); }\n    static { this.MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar'); }\n    static { this.DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar'); }\n    static { this.DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar'); }\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static { this._all = new Map(); }\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return options?.renderShortTitle && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n        this.hideActions = hideActions;\n        this.menuKeybinding = menuKeybinding;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        let runArgs = [];\n        if (this._options?.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if (this._options?.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = []; // not using `DisposableStore` to reduce startup perf cost\n    const action = new ctor();\n    const { f1, menu, keybinding, ...command } = action.desc;\n    if (CommandsRegistry.getCommand(command.id)) {\n        throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n    }\n    // command\n    disposables.push(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        metadata: command.metadata,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n        }\n    }\n    else if (menu) {\n        disposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n    }\n    if (f1) {\n        disposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.push(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.push(KeybindingsRegistry.registerKeybindingRule({\n                ...item,\n                id: command.id,\n                when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n            }));\n        }\n    }\n    else if (keybinding) {\n        disposables.push(KeybindingsRegistry.registerKeybindingRule({\n            ...keybinding,\n            id: command.id,\n            when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n        }));\n    }\n    return {\n        dispose() {\n            dispose(disposables);\n        }\n    };\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Off\"] = 0] = \"Off\";\n    LogLevel[LogLevel[\"Trace\"] = 1] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 2] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 3] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 4] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 5] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n        this.onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n    checkLogLevel(level) {\n        return this.level !== LogLevel.Off && this.level <= level;\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL, useColors = true) {\n        super();\n        this.useColors = useColors;\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            if (this.useColors) {\n                console.log('%cTRACE', 'color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            if (this.useColors) {\n                console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            if (this.useColors) {\n                console.log('%c INFO', 'color: #33f', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            if (this.useColors) {\n                console.log('%c WARN', 'color: #993', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            if (this.useColors) {\n                console.log('%c  ERR', 'color: #f33', message, ...args);\n            }\n            else {\n                console.error(message, ...args);\n            }\n        }\n    }\n}\nexport class MultiplexLogger extends AbstractLogger {\n    constructor(loggers) {\n        super();\n        this.loggers = loggers;\n        if (loggers.length) {\n            this.setLevel(loggers[0].getLevel());\n        }\n    }\n    setLevel(level) {\n        for (const logger of this.loggers) {\n            logger.setLevel(level);\n        }\n        super.setLevel(level);\n    }\n    trace(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.trace(message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.debug(message, ...args);\n        }\n    }\n    info(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.info(message, ...args);\n        }\n    }\n    warn(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.warn(message, ...args);\n        }\n    }\n    error(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.error(message, ...args);\n        }\n    }\n    dispose() {\n        for (const logger of this.loggers) {\n            logger.dispose();\n        }\n        super.dispose();\n    }\n}\nexport function LogLevelToString(logLevel) {\n    switch (logLevel) {\n        case LogLevel.Trace: return 'trace';\n        case LogLevel.Debug: return 'debug';\n        case LogLevel.Info: return 'info';\n        case LogLevel.Warning: return 'warn';\n        case LogLevel.Error: return 'error';\n        case LogLevel.Off: return 'off';\n    }\n}\n// Contexts\nexport const CONTEXT_LOG_LEVEL = new RawContextKey('logLevel', LogLevelToString(LogLevel.Info));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                if (obj === null) {\n                    conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is null`);\n                    return;\n                }\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], Boolean(supportsDelayedInstantiation));\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.registeredConfigurationDefaults = [];\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        this.registeredConfigurationDefaults.push(...configurationDefaults);\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                const configurationDefaultOverridesForKey = this.configurationDefaultsOverrides.get(key)\n                    ?? this.configurationDefaultsOverrides.set(key, { configurationDefaultOverrides: [] }).get(key);\n                const value = overrides[key];\n                configurationDefaultOverridesForKey.configurationDefaultOverrides.push({ value, source });\n                // Configuration defaults for Override Identifiers\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const newDefaultOverride = this.mergeDefaultConfigurationsForOverrideIdentifier(key, value, source, configurationDefaultOverridesForKey.configurationDefaultOverrideValue);\n                    if (!newDefaultOverride) {\n                        continue;\n                    }\n                    configurationDefaultOverridesForKey.configurationDefaultOverrideValue = newDefaultOverride;\n                    this.updateDefaultOverrideProperty(key, newDefaultOverride, source);\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                }\n                // Configuration defaults for Configuration Properties\n                else {\n                    const newDefaultOverride = this.mergeDefaultConfigurationsForConfigurationProperty(key, value, source, configurationDefaultOverridesForKey.configurationDefaultOverrideValue);\n                    if (!newDefaultOverride) {\n                        continue;\n                    }\n                    configurationDefaultOverridesForKey.configurationDefaultOverrideValue = newDefaultOverride;\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    updateDefaultOverrideProperty(key, newDefaultOverride, source) {\n        const property = {\n            type: 'object',\n            default: newDefaultOverride.value,\n            description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", getLanguageTagSettingPlainKey(key)),\n            $ref: resourceLanguageSettingsSchemaId,\n            defaultDefaultValue: newDefaultOverride.value,\n            source,\n            defaultValueSource: source\n        };\n        this.configurationProperties[key] = property;\n        this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n    }\n    mergeDefaultConfigurationsForOverrideIdentifier(overrideIdentifier, configurationValueObject, valueSource, existingDefaultOverride) {\n        const defaultValue = existingDefaultOverride?.value || {};\n        const source = existingDefaultOverride?.source ?? new Map();\n        // This should not happen\n        if (!(source instanceof Map)) {\n            console.error('objectConfigurationSources is not a Map');\n            return undefined;\n        }\n        for (const propertyKey of Object.keys(configurationValueObject)) {\n            const propertyDefaultValue = configurationValueObject[propertyKey];\n            const isObjectSetting = types.isObject(propertyDefaultValue) &&\n                (types.isUndefined(defaultValue[propertyKey]) || types.isObject(defaultValue[propertyKey]));\n            // If the default value is an object, merge the objects and store the source of each keys\n            if (isObjectSetting) {\n                defaultValue[propertyKey] = { ...(defaultValue[propertyKey] ?? {}), ...propertyDefaultValue };\n                // Track the source of each value in the object\n                if (valueSource) {\n                    for (const objectKey in propertyDefaultValue) {\n                        source.set(`${propertyKey}.${objectKey}`, valueSource);\n                    }\n                }\n            }\n            // Primitive values are overridden\n            else {\n                defaultValue[propertyKey] = propertyDefaultValue;\n                if (valueSource) {\n                    source.set(propertyKey, valueSource);\n                }\n                else {\n                    source.delete(propertyKey);\n                }\n            }\n        }\n        return { value: defaultValue, source };\n    }\n    mergeDefaultConfigurationsForConfigurationProperty(propertyKey, value, valuesSource, existingDefaultOverride) {\n        const property = this.configurationProperties[propertyKey];\n        const existingDefaultValue = existingDefaultOverride?.value ?? property?.defaultDefaultValue;\n        let source = valuesSource;\n        const isObjectSetting = types.isObject(value) &&\n            (property !== undefined && property.type === 'object' ||\n                property === undefined && (types.isUndefined(existingDefaultValue) || types.isObject(existingDefaultValue)));\n        // If the default value is an object, merge the objects and store the source of each keys\n        if (isObjectSetting) {\n            source = existingDefaultOverride?.source ?? new Map();\n            // This should not happen\n            if (!(source instanceof Map)) {\n                console.error('defaultValueSource is not a Map');\n                return undefined;\n            }\n            for (const objectKey in value) {\n                if (valuesSource) {\n                    source.set(`${propertyKey}.${objectKey}`, valuesSource);\n                }\n            }\n            value = { ...(types.isObject(existingDefaultValue) ? existingDefaultValue : {}), ...value };\n        }\n        return { value, source };\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if (properties[key].policy?.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes?.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key)?.configurationDefaultOverrideValue;\n        let defaultValue = undefined;\n        let defaultSource = undefined;\n        if (configurationdefaultOverride\n            && (!property.disallowConfigurationDefault || !configurationdefaultOverride.source) // Prevent overriding the default value if the property is disallowed to be overridden by configuration defaults from extensions\n        ) {\n            defaultValue = configurationdefaultOverride.value;\n            defaultSource = configurationdefaultOverride.source;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches?.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (schema.policy?.name && configurationRegistry.getPolicyConfigurations().get(schema.policy?.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, schema.policy?.name, configurationRegistry.getPolicyConfigurations().get(schema.policy?.name));\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILayoutService = createDecorator('layoutService');\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IDialogService = createDecorator('dialogService');\n","import BaseSeverity from '../../../base/common/severity.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var Severity = BaseSeverity;\nexport const INotificationService = createDecorator('notificationService');\nexport class NoOpNotification {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nexport class UndoRedoGroup {\n    static { this._ID = 0; }\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n    static { this.None = new UndoRedoGroup(); }\n}\nexport class UndoRedoSource {\n    static { this._ID = 0; }\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n    static { this.None = new UndoRedoSource(); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport * as nls from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\nconst DEBUG = false;\nfunction getResourceLabel(resource) {\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\n}\nlet stackElementCounter = 0;\nclass ResourceStackElement {\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 0 /* UndoRedoElementType.Resource */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this.resourceLabels = [this.resourceLabel];\n        this.strResources = [this.strResource];\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.isValid = true;\n    }\n    setValid(isValid) {\n        this.isValid = isValid;\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceReasonPair {\n    constructor(resourceLabel, reason) {\n        this.resourceLabel = resourceLabel;\n        this.reason = reason;\n    }\n}\nclass RemovedResources {\n    constructor() {\n        this.elements = new Map();\n    }\n    createMessage() {\n        const externalRemoval = [];\n        const noParallelUniverses = [];\n        for (const [, element] of this.elements) {\n            const dest = (element.reason === 0 /* RemovedResourceReason.ExternalRemoval */\n                ? externalRemoval\n                : noParallelUniverses);\n            dest.push(element.resourceLabel);\n        }\n        const messages = [];\n        if (externalRemoval.length > 0) {\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\n        }\n        if (noParallelUniverses.length > 0) {\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\n        }\n        return messages.join('\\n');\n    }\n    get size() {\n        return this.elements.size;\n    }\n    has(strResource) {\n        return this.elements.has(strResource);\n    }\n    set(strResource, value) {\n        this.elements.set(strResource, value);\n    }\n    delete(strResource) {\n        return this.elements.delete(strResource);\n    }\n}\nclass WorkspaceStackElement {\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabels = resourceLabels;\n        this.strResources = strResources;\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.removedResources = null;\n        this.invalidatedResources = null;\n    }\n    canSplit() {\n        return (typeof this.actual.split === 'function');\n    }\n    removeResource(resourceLabel, strResource, reason) {\n        if (!this.removedResources) {\n            this.removedResources = new RemovedResources();\n        }\n        if (!this.removedResources.has(strResource)) {\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\n        }\n    }\n    setValid(resourceLabel, strResource, isValid) {\n        if (isValid) {\n            if (this.invalidatedResources) {\n                this.invalidatedResources.delete(strResource);\n                if (this.invalidatedResources.size === 0) {\n                    this.invalidatedResources = null;\n                }\n            }\n        }\n        else {\n            if (!this.invalidatedResources) {\n                this.invalidatedResources = new RemovedResources();\n            }\n            if (!this.invalidatedResources.has(strResource)) {\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* RemovedResourceReason.ExternalRemoval */));\n            }\n        }\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceEditStack {\n    constructor(resourceLabel, strResource) {\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this._past = [];\n        this._future = [];\n        this.locked = false;\n        this.versionId = 1;\n    }\n    dispose() {\n        for (const element of this._past) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        for (const element of this._future) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        this.versionId++;\n    }\n    toString() {\n        const result = [];\n        result.push(`* ${this.strResource}:`);\n        for (let i = 0; i < this._past.length; i++) {\n            result.push(`   * [UNDO] ${this._past[i]}`);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            result.push(`   * [REDO] ${this._future[i]}`);\n        }\n        return result.join('\\n');\n    }\n    flushAllElements() {\n        this._past = [];\n        this._future = [];\n        this.versionId++;\n    }\n    _setElementValidFlag(element, isValid) {\n        if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n            element.setValid(this.resourceLabel, this.strResource, isValid);\n        }\n        else {\n            element.setValid(isValid);\n        }\n    }\n    setElementsValidFlag(isValid, filter) {\n        for (const element of this._past) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n        for (const element of this._future) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n    }\n    pushElement(element) {\n        // remove the future\n        for (const futureElement of this._future) {\n            if (futureElement.type === 1 /* UndoRedoElementType.Workspace */) {\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* RemovedResourceReason.NoParallelUniverses */);\n            }\n        }\n        this._future = [];\n        this._past.push(element);\n        this.versionId++;\n    }\n    createSnapshot(resource) {\n        const elements = [];\n        for (let i = 0, len = this._past.length; i < len; i++) {\n            elements.push(this._past[i].id);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            elements.push(this._future[i].id);\n        }\n        return new ResourceEditStackSnapshot(resource, elements);\n    }\n    restoreSnapshot(snapshot) {\n        const snapshotLength = snapshot.elements.length;\n        let isOK = true;\n        let snapshotIndex = 0;\n        let removePastAfter = -1;\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\n            const element = this._past[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removePastAfter = 0;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        let removeFutureBefore = -1;\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\n            const element = this._future[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removeFutureBefore = i;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        if (removePastAfter !== -1) {\n            this._past = this._past.slice(0, removePastAfter);\n        }\n        if (removeFutureBefore !== -1) {\n            this._future = this._future.slice(removeFutureBefore + 1);\n        }\n        this.versionId++;\n    }\n    getElements() {\n        const past = [];\n        const future = [];\n        for (const element of this._past) {\n            past.push(element.actual);\n        }\n        for (const element of this._future) {\n            future.push(element.actual);\n        }\n        return { past, future };\n    }\n    getClosestPastElement() {\n        if (this._past.length === 0) {\n            return null;\n        }\n        return this._past[this._past.length - 1];\n    }\n    getSecondClosestPastElement() {\n        if (this._past.length < 2) {\n            return null;\n        }\n        return this._past[this._past.length - 2];\n    }\n    getClosestFutureElement() {\n        if (this._future.length === 0) {\n            return null;\n        }\n        return this._future[this._future.length - 1];\n    }\n    hasPastElements() {\n        return (this._past.length > 0);\n    }\n    hasFutureElements() {\n        return (this._future.length > 0);\n    }\n    splitPastWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._past.length - 1; j >= 0; j--) {\n            if (this._past[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._past[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._past.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    splitFutureWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._future.length - 1; j >= 0; j--) {\n            if (this._future[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._future[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._future.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    moveBackward(element) {\n        this._past.pop();\n        this._future.push(element);\n        this.versionId++;\n    }\n    moveForward(element) {\n        this._future.pop();\n        this._past.push(element);\n        this.versionId++;\n    }\n}\nclass EditStackSnapshot {\n    constructor(editStacks) {\n        this.editStacks = editStacks;\n        this._versionIds = [];\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            this._versionIds[i] = this.editStacks[i].versionId;\n        }\n    }\n    isValid() {\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nconst missingEditStack = new ResourceEditStack('', '');\nmissingEditStack.locked = true;\nlet UndoRedoService = class UndoRedoService {\n    constructor(_dialogService, _notificationService) {\n        this._dialogService = _dialogService;\n        this._notificationService = _notificationService;\n        this._editStacks = new Map();\n        this._uriComparisonKeyComputers = [];\n    }\n    getUriComparisonKey(resource) {\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\n            }\n        }\n        return resource.toString();\n    }\n    _print(label) {\n        console.log(`------------------------------------`);\n        console.log(`AFTER ${label}: `);\n        const str = [];\n        for (const element of this._editStacks) {\n            str.push(element[1].toString());\n        }\n        console.log(str.join('\\n'));\n    }\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\n        if (element.type === 0 /* UndoRedoElementType.Resource */) {\n            const resourceLabel = getResourceLabel(element.resource);\n            const strResource = this.getUriComparisonKey(element.resource);\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\n        }\n        else {\n            const seen = new Set();\n            const resourceLabels = [];\n            const strResources = [];\n            for (const resource of element.resources) {\n                const resourceLabel = getResourceLabel(resource);\n                const strResource = this.getUriComparisonKey(resource);\n                if (seen.has(strResource)) {\n                    continue;\n                }\n                seen.add(strResource);\n                resourceLabels.push(resourceLabel);\n                strResources.push(strResource);\n            }\n            if (resourceLabels.length === 1) {\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n            else {\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n        }\n        if (DEBUG) {\n            this._print('pushElement');\n        }\n    }\n    _pushElement(element) {\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\n            const resourceLabel = element.resourceLabels[i];\n            const strResource = element.strResources[i];\n            let editStack;\n            if (this._editStacks.has(strResource)) {\n                editStack = this._editStacks.get(strResource);\n            }\n            else {\n                editStack = new ResourceEditStack(resourceLabel, strResource);\n                this._editStacks.set(strResource, editStack);\n            }\n            editStack.pushElement(element);\n        }\n    }\n    getLastElement(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            if (editStack.hasFutureElements()) {\n                return null;\n            }\n            const closestPastElement = editStack.getClosestPastElement();\n            return closestPastElement ? closestPastElement.actual : null;\n        }\n        return null;\n    }\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    removeElements(resource) {\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.dispose();\n            this._editStacks.delete(strResource);\n        }\n        if (DEBUG) {\n            this._print('removeElements');\n        }\n    }\n    setElementsValidFlag(resource, isValid, filter) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.setElementsValidFlag(isValid, filter);\n        }\n        if (DEBUG) {\n            this._print('setElementsValidFlag');\n        }\n    }\n    createSnapshot(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.createSnapshot(resource);\n        }\n        return new ResourceEditStackSnapshot(resource, []);\n    }\n    restoreSnapshot(snapshot) {\n        const strResource = this.getUriComparisonKey(snapshot.resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.restoreSnapshot(snapshot);\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\n                // the edit stack is now empty, just remove it entirely\n                editStack.dispose();\n                this._editStacks.delete(strResource);\n            }\n        }\n        if (DEBUG) {\n            this._print('restoreSnapshot');\n        }\n    }\n    getElements(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.getElements();\n        }\n        return { past: [], future: [] };\n    }\n    _findClosestUndoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canUndo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasPastElements();\n        }\n        return false;\n    }\n    _onError(err, element) {\n        onUnexpectedError(err);\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\n        for (const strResource of element.strResources) {\n            this.removeElements(strResource);\n        }\n        this._notificationService.error(err);\n    }\n    _acquireLocks(editStackSnapshot) {\n        // first, check if all locks can be acquired\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                throw new Error('Cannot acquire edit stack lock');\n            }\n        }\n        // can acquire all locks\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.locked = true;\n        }\n        return () => {\n            // release all locks\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.locked = false;\n            }\n        };\n    }\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\n        let result;\n        try {\n            result = invoke();\n        }\n        catch (err) {\n            releaseLocks();\n            cleanup.dispose();\n            return this._onError(err, element);\n        }\n        if (result) {\n            // result is Promise<void>\n            return result.then(() => {\n                releaseLocks();\n                cleanup.dispose();\n                return continuation();\n            }, (err) => {\n                releaseLocks();\n                cleanup.dispose();\n                return this._onError(err, element);\n            });\n        }\n        else {\n            // result is void\n            releaseLocks();\n            cleanup.dispose();\n            return continuation();\n        }\n    }\n    async _invokeWorkspacePrepare(element) {\n        if (typeof element.actual.prepareUndoRedo === 'undefined') {\n            return Disposable.None;\n        }\n        const result = element.actual.prepareUndoRedo();\n        if (typeof result === 'undefined') {\n            return Disposable.None;\n        }\n        return result;\n    }\n    _invokeResourcePrepare(element, callback) {\n        if (element.actual.type !== 1 /* UndoRedoElementType.Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\n            // no preparation needed\n            return callback(Disposable.None);\n        }\n        const r = element.actual.prepareUndoRedo();\n        if (!r) {\n            // nothing to clean up\n            return callback(Disposable.None);\n        }\n        if (isDisposable(r)) {\n            return callback(r);\n        }\n        return r.then((disposable) => {\n            return callback(disposable);\n        });\n    }\n    _getAffectedEditStacks(element) {\n        const affectedEditStacks = [];\n        for (const strResource of element.strResources) {\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\n        }\n        return new EditStackSnapshot(affectedEditStacks);\n    }\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitPastWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last past element in all the impacted resources!\n        const cannotUndoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestPastElement() !== element) {\n                cannotUndoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotUndoDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceUndo(strResource, element, undoConfirmed) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\n    }\n    _isPartOfUndoGroup(element) {\n        if (!element.groupId) {\n            return false;\n        }\n        // check that there is at least another element with the same groupId ready to be undone\n        for (const [, editStack] of this._editStacks) {\n            const pastElement = editStack.getClosestPastElement();\n            if (!pastElement) {\n                continue;\n            }\n            if (pastElement === element) {\n                const secondPastElement = editStack.getSecondClosestPastElement();\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\n                    // there is another element with the same group id in the same stack!\n                    return true;\n                }\n            }\n            if (pastElement.groupId === element.groupId) {\n                // there is another element with the same group id in another stack!\n                return true;\n            }\n        }\n        return false;\n    }\n    async _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\n        if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\n            // this element can be split\n            let UndoChoice;\n            (function (UndoChoice) {\n                UndoChoice[UndoChoice[\"All\"] = 0] = \"All\";\n                UndoChoice[UndoChoice[\"This\"] = 1] = \"This\";\n                UndoChoice[UndoChoice[\"Cancel\"] = 2] = \"Cancel\";\n            })(UndoChoice || (UndoChoice = {}));\n            const { result } = await this._dialogService.prompt({\n                type: Severity.Info,\n                message: nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label),\n                buttons: [\n                    {\n                        label: nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1, && denotes a mnemonic'] }, \"&&Undo in {0} Files\", editStackSnapshot.editStacks.length),\n                        run: () => UndoChoice.All\n                    },\n                    {\n                        label: nls.localize({ key: 'nok', comment: ['&& denotes a mnemonic'] }, \"Undo this &&File\"),\n                        run: () => UndoChoice.This\n                    }\n                ],\n                cancelButton: {\n                    run: () => UndoChoice.Cancel\n                }\n            });\n            if (result === UndoChoice.Cancel) {\n                // choice: cancel\n                return;\n            }\n            if (result === UndoChoice.This) {\n                // choice: undo this file\n                this._splitPastWorkspaceElement(element, null);\n                return this._undo(strResource, 0, true);\n            }\n            // choice: undo in all files\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\n            const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\n            if (verificationError1) {\n                return verificationError1.returnValue;\n            }\n            undoConfirmed = true;\n        }\n        // prepare\n        let cleanup;\n        try {\n            cleanup = await this._invokeWorkspacePrepare(element);\n        }\n        catch (err) {\n            return this._onError(err, element);\n        }\n        // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n        const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n        if (verificationError2) {\n            cleanup.dispose();\n            return verificationError2.returnValue;\n        }\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.moveBackward(element);\n        }\n        return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n    }\n    _resourceUndo(editStack, element, undoConfirmed) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveBackward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _findClosestUndoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueUndoInGroup(groupId, undoConfirmed) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._undo(matchedStrResource, 0, undoConfirmed);\n        }\n    }\n    undo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._undo(resourceOrSource, 0, false);\n        }\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\n    }\n    _undo(strResource, sourceId = 0, undoConfirmed) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestPastElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure undoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be undone before this one\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\n            }\n        }\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\n        if (shouldPromptForConfirmation && !undoConfirmed) {\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceUndo(strResource, element, undoConfirmed);\n            }\n            else {\n                return this._resourceUndo(editStack, element, undoConfirmed);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('undo');\n            }\n        }\n    }\n    async _confirmAndContinueUndo(strResource, sourceId, element) {\n        const result = await this._dialogService.confirm({\n            message: nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label),\n            primaryButton: nls.localize({ key: 'confirmDifferentSource.yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n            cancelButton: nls.localize('confirmDifferentSource.no', \"No\")\n        });\n        if (!result.confirmed) {\n            return;\n        }\n        return this._undo(strResource, sourceId, true);\n    }\n    _findClosestRedoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canRedo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasFutureElements();\n        }\n        return false;\n    }\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitFutureWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._redo(strResource));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last future element in all the impacted resources!\n        const cannotRedoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestFutureElement() !== element) {\n                cannotRedoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotRedoDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceRedo(strResource, element) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\n    }\n    async _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\n        // prepare\n        let cleanup;\n        try {\n            cleanup = await this._invokeWorkspacePrepare(element);\n        }\n        catch (err) {\n            return this._onError(err, element);\n        }\n        // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n        const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n        if (verificationError) {\n            cleanup.dispose();\n            return verificationError.returnValue;\n        }\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.moveForward(element);\n        }\n        return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\n    }\n    _resourceRedo(editStack, element) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveForward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _findClosestRedoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueRedoInGroup(groupId) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._redo(matchedStrResource);\n        }\n    }\n    redo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._redo(resourceOrSource);\n        }\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\n    }\n    _redo(strResource) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestFutureElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure redoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be redone before this one\n                return this._redo(matchedStrResource);\n            }\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceRedo(strResource, element);\n            }\n            else {\n                return this._resourceRedo(editStack, element);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('redo');\n            }\n        }\n    }\n};\nUndoRedoService = __decorate([\n    __param(0, IDialogService),\n    __param(1, INotificationService)\n], UndoRedoService);\nexport { UndoRedoService };\nclass WorkspaceVerificationError {\n    constructor(returnValue) {\n        this.returnValue = returnValue;\n    }\n}\nregisterSingleton(IUndoRedoService, UndoRedoService, 1 /* InstantiationType.Delayed */);\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IEnvironmentService = createDecorator('environmentService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport * as nls from '../../../nls.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\nexport function isColorDefaults(value) {\n    return value !== null && typeof value === 'object' && 'light' in value && 'dark' in value;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nexport const DEFAULT_COLOR_CONFIG_VALUE = 'default';\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (needsTransparency) {\n            propertySchema.pattern = '^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$';\n            propertySchema.patternErrorMessage = nls.localize('transparecyRequired', 'This color must be transparent or it will obscure content');\n        }\n        this.colorSchema.properties[id] = {\n            description,\n            oneOf: [\n                propertySchema,\n                { type: 'string', const: DEFAULT_COLOR_CONFIG_VALUE, description: nls.localize('useDefault', 'Use the default color.') }\n            ]\n        };\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc?.defaults) {\n            const colorValue = isColorDefaults(colorDesc.defaults) ? colorDesc.defaults[theme.type] : colorDesc.defaults;\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return resolveColorValue(transform.value, theme)?.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return resolveColorValue(transform.value, theme)?.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return resolveColorValue(transform.value, theme)?.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return resolveColorValue(transform.value, theme)?.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nexport function lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', null, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text link\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\n// ------ text preformat\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#000000', hcLight: '#FFFFFF' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textPreformatBackground = registerColor('textPreformat.background', { light: '#0000001A', dark: '#FFFFFF1A', hcDark: '#FFFFFF', hcLight: '#09345f' }, nls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n// ------ text block quote\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#f2f2f2', dark: '#222222', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n// ------ text code block\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n// ----- sash\nexport const sashHoverBorder = registerColor('sash.hoverBorder', focusBorder, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n// ----- badge\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n// ----- scrollbar\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n// ----- progress bar\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lessProminent, darken, lighten } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { scrollbarShadow, badgeBackground } from './miscColors.js';\n// ----- editor\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', editorBackground, nls.localize('editorStickyScrollBackground', \"Background color of sticky scroll in the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Background color of sticky scroll on hover in the editor\"));\nexport const editorStickyScrollBorder = registerColor('editorStickyScroll.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorStickyScrollBorder', \"Border color of sticky scroll in the editor\"));\nexport const editorStickyScrollShadow = registerColor('editorStickyScroll.shadow', scrollbarShadow, nls.localize('editorStickyScrollShadow', \" Shadow color of sticky scroll in the editor\"));\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', foreground, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', null, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\nexport const editorErrorBackground = registerColor('editorError.background', null, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', null, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', null, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n// ----- editor selection\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n// ----- editor find\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchForeground = registerColor('editor.findMatchForeground', null, nls.localize('editorFindMatchForeground', \"Text color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchHighlightForeground = registerColor('editor.findMatchHighlightForeground', null, nls.localize('findMatchHighlightForeground', \"Foreground color of the other search matches.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n// ----- editor hover\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', editorWidgetBackground, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', editorWidgetForeground, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', editorWidgetBorder, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n// ----- editor inlay hint\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n// ----- editor lightbulb\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\nexport const editorLightBulbAiForeground = registerColor('editorLightBulbAi.foreground', editorLightBulbForeground, nls.localize('editorLightBulbAiForeground', \"The color used for the lightbulb AI icon.\"));\n// ----- editor snippet\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', null, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', null, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n// ----- diff editor\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', null, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', null, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', null, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', null, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground', 'sideBar.background', nls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground', 'foreground', nls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground', { dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n// ----- widget\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\n// ----- toolbar\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n// ----- breadcumbs\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', transparent(foreground, 0.8), nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', editorBackground, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', editorWidgetBackground, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n// ----- merge\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', transparent(mergeCurrentHeaderBackground, contentTransparency), nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', transparent(mergeIncomingHeaderBackground, contentTransparency), nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', transparent(mergeCommonHeaderBackground, contentTransparency), nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', '#A0A0A0CC', nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n// ----- problems\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', editorErrorForeground, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', editorWarningForeground, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', editorInfoForeground, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { editorInfoForeground, editorWarningForeground, editorWarningBorder, editorInfoBorder } from './editorColors.js';\nimport { scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground } from './miscColors.js';\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapInfo = registerColor('minimap.infoHighlight', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapBackground = registerColor('minimap.background', null, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', Color.fromHex('#000f'), nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', transparent(scrollbarSliderBackground, 0.5), nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', transparent(scrollbarSliderHoverBackground, 0.5), nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', transparent(scrollbarSliderActiveBackground, 0.5), nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nimport { foreground } from './baseColors.js';\nimport { editorErrorForeground, editorInfoForeground, editorWarningForeground } from './editorColors.js';\nimport { minimapFindMatch } from './minimapColors.js';\nexport const chartsForeground = registerColor('charts.foreground', foreground, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', transparent(foreground, .5), nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', editorErrorForeground, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', editorInfoForeground, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', editorWarningForeground, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', minimapFindMatch, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lighten, darken } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground } from './editorColors.js';\n// ----- input\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', foreground, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n// ----- input validation\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n// ----- select\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\n// ------ button\nexport const buttonForeground = registerColor('button.foreground', Color.white, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', transparent(buttonForeground, .4), nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', contrastBorder, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n// ------ radio\nexport const radioActiveForeground = registerColor('radio.activeForeground', inputActiveOptionForeground, nls.localize('radioActiveForeground', \"Foreground color of active radio option.\"));\nexport const radioActiveBackground = registerColor('radio.activeBackground', inputActiveOptionBackground, nls.localize('radioBackground', \"Background color of active radio option.\"));\nexport const radioActiveBorder = registerColor('radio.activeBorder', inputActiveOptionBorder, nls.localize('radioActiveBorder', \"Border color of the active radio option.\"));\nexport const radioInactiveForeground = registerColor('radio.inactiveForeground', null, nls.localize('radioInactiveForeground', \"Foreground color of inactive radio option.\"));\nexport const radioInactiveBackground = registerColor('radio.inactiveBackground', null, nls.localize('radioInactiveBackground', \"Background color of inactive radio option.\"));\nexport const radioInactiveBorder = registerColor('radio.inactiveBorder', { light: transparent(radioActiveForeground, .2), dark: transparent(radioActiveForeground, .2), hcDark: transparent(radioActiveForeground, .4), hcLight: transparent(radioActiveForeground, .2) }, nls.localize('radioInactiveBorder', \"Border color of the inactive radio option.\"));\nexport const radioInactiveHoverBackground = registerColor('radio.inactiveHoverBackground', inputActiveOptionHoverBackground, nls.localize('radioHoverBackground', \"Background color of inactive active radio option when hovering.\"));\n// ------ checkbox\nexport const checkboxBackground = registerColor('checkbox.background', selectBackground, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', editorWidgetBackground, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', selectForeground, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', selectBorder, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', iconForeground, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n// ------ keybinding label\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, darken, lighten, transparent, ifDefinedThenElse } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground, editorFindMatchHighlightBorder, editorFindMatchHighlight, widgetShadow, editorWidgetForeground } from './editorColors.js';\nexport const listFocusBackground = registerColor('list.focusBackground', null, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', null, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', null, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', null, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', null, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', null, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', null, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', null, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', null, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropOverBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items over other items when using the mouse.\"));\nexport const listDropBetweenBackground = registerColor('list.dropBetweenBackground', { dark: iconForeground, light: iconForeground, hcDark: null, hcLight: null }, nls.localize('listDropBetweenBackground', \"List/Tree drag and drop border color when moving items between items when using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', widgetShadow, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized.\"));\n// ------ tree\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', transparent(treeIndentGuidesStroke, 0.4), nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\n// ------ table\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\n// ------ action list\nexport const editorActionListBackground = registerColor('editorActionList.background', editorWidgetBackground, nls.localize('editorActionListBackground', \"Action List background color.\"));\nexport const editorActionListForeground = registerColor('editorActionList.foreground', editorWidgetForeground, nls.localize('editorActionListForeground', \"Action List foreground color.\"));\nexport const editorActionListFocusForeground = registerColor('editorActionList.focusForeground', listActiveSelectionForeground, nls.localize('editorActionListFocusForeground', \"Action List foreground color for the focused item.\"));\nexport const editorActionListFocusBackground = registerColor('editorActionList.focusBackground', listActiveSelectionBackground, nls.localize('editorActionListFocusBackground', \"Action List background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { selectForeground, selectBackground } from './inputColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground } from './listColors.js';\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', selectForeground, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', selectBackground, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', listActiveSelectionForeground, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', listActiveSelectionBackground, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\nexport const quickInputBackground = registerColor('quickInput.background', editorWidgetBackground, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', editorWidgetForeground, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', null, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', listActiveSelectionForeground, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', listActiveSelectionIconForeground, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground } from './baseColors.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from './editorColors.js';\nexport const searchResultsInfoForeground = registerColor('search.resultsInfoForeground', { light: foreground, dark: transparent(foreground, 0.65), hcDark: foreground, hcLight: foreground }, nls.localize('search.resultsInfoForeground', \"Color of the text in the search viewlet's completion message.\"));\n// ----- search editor (Distinct from normal editor find match to allow for better differentiation)\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { addStandardDisposableListener, isHTMLElement } from '../../../base/browser/dom.js';\nexport const IHoverService = createDecorator('hoverService');\nlet WorkbenchHoverDelegate = class WorkbenchHoverDelegate extends Disposable {\n    get delay() {\n        if (this.isInstantlyHovering()) {\n            return 0; // show instantly when a hover was recently shown\n        }\n        return this._delay;\n    }\n    constructor(placement, instantHover, overrideOptions = {}, configurationService, hoverService) {\n        super();\n        this.placement = placement;\n        this.instantHover = instantHover;\n        this.overrideOptions = overrideOptions;\n        this.configurationService = configurationService;\n        this.hoverService = hoverService;\n        this.lastHoverHideTime = 0;\n        this.timeLimit = 200;\n        this.hoverDisposables = this._register(new DisposableStore());\n        this._delay = this.configurationService.getValue('workbench.hover.delay');\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('workbench.hover.delay')) {\n                this._delay = this.configurationService.getValue('workbench.hover.delay');\n            }\n        }));\n    }\n    showHover(options, focus) {\n        const overrideOptions = typeof this.overrideOptions === 'function' ? this.overrideOptions(options, focus) : this.overrideOptions;\n        // close hover on escape\n        this.hoverDisposables.clear();\n        const targets = isHTMLElement(options.target) ? [options.target] : options.target.targetElements;\n        for (const target of targets) {\n            this.hoverDisposables.add(addStandardDisposableListener(target, 'keydown', (e) => {\n                if (e.equals(9 /* KeyCode.Escape */)) {\n                    this.hoverService.hideHover();\n                }\n            }));\n        }\n        const id = isHTMLElement(options.content) ? undefined : options.content.toString();\n        return this.hoverService.showHover({\n            ...options,\n            ...overrideOptions,\n            persistence: {\n                hideOnKeyDown: true,\n                ...overrideOptions.persistence\n            },\n            id,\n            appearance: {\n                ...options.appearance,\n                compact: true,\n                skipFadeInAnimation: this.isInstantlyHovering(),\n                ...overrideOptions.appearance\n            }\n        }, focus);\n    }\n    isInstantlyHovering() {\n        return this.instantHover && Date.now() - this.lastHoverHideTime < this.timeLimit;\n    }\n    onDidHideHover() {\n        this.hoverDisposables.clear();\n        if (this.instantHover) {\n            this.lastHoverHideTime = Date.now();\n        }\n    }\n};\nWorkbenchHoverDelegate = __decorate([\n    __param(3, IConfigurationService),\n    __param(4, IHoverService)\n], WorkbenchHoverDelegate);\nexport { WorkbenchHoverDelegate };\n// TODO@benibenj remove this, only temp fix for contextviews\nexport const nativeHoverDelegate = {\n    showHover: function () {\n        throw new Error('Native hover function not implemented.');\n    },\n    delay: 0,\n    showNativeHover: true\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IKeybindingService = createDecorator('keybindingService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IOpenerService = createDecorator('openerService');\n/**\n * file:///some/file.js#73\n * file:///some/file.js#L73\n * file:///some/file.js#73,84\n * file:///some/file.js#L73,84\n * file:///some/file.js#73-83\n * file:///some/file.js#L73-L83\n * file:///some/file.js#73,84-83,52\n * file:///some/file.js#L73,84-L83,52\n */\nexport function extractSelection(uri) {\n    let selection = undefined;\n    const match = /^L?(\\d+)(?:,(\\d+))?(-L?(\\d+)(?:,(\\d+))?)?/.exec(uri.fragment);\n    if (match) {\n        selection = {\n            startLineNumber: parseInt(match[1]),\n            startColumn: match[2] ? parseInt(match[2]) : 1,\n            endLineNumber: match[4] ? parseInt(match[4]) : undefined,\n            endColumn: match[4] ? (match[5] ? parseInt(match[5]) : 1) : undefined\n        };\n        uri = uri.with({ fragment: '' });\n    }\n    return { selection, uri };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilityService = createDecorator('accessibilityService');\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey('accessibilityModeEnabled', false);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { getWindow } from '../../../base/browser/dom.js';\nlet ContextViewHandler = class ContextViewHandler extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.contextView = this._register(new ContextView(this.layoutService.mainContainer, 1 /* ContextViewDOMPosition.ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayoutContainer(() => this.layout()));\n    }\n    // ContextView\n    showContextView(delegate, container, shadowRoot) {\n        let domPosition;\n        if (container) {\n            if (container === this.layoutService.getContainer(getWindow(container))) {\n                domPosition = 1 /* ContextViewDOMPosition.ABSOLUTE */;\n            }\n            else if (shadowRoot) {\n                domPosition = 3 /* ContextViewDOMPosition.FIXED_SHADOW */;\n            }\n            else {\n                domPosition = 2 /* ContextViewDOMPosition.FIXED */;\n            }\n        }\n        else {\n            domPosition = 1 /* ContextViewDOMPosition.ABSOLUTE */;\n        }\n        this.contextView.setContainer(container ?? this.layoutService.activeContainer, domPosition);\n        this.contextView.show(delegate);\n        const openContextView = {\n            close: () => {\n                if (this.openContextView === openContextView) {\n                    this.hideContextView();\n                }\n            }\n        };\n        this.openContextView = openContextView;\n        return openContextView;\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n        this.openContextView = undefined;\n    }\n};\nContextViewHandler = __decorate([\n    __param(0, ILayoutService)\n], ContextViewHandler);\nexport { ContextViewHandler };\nexport class ContextViewService extends ContextViewHandler {\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nfunction freeze(data) {\n    return Object.isFrozen(data) ? data : objects.deepFreeze(data);\n}\nexport class ConfigurationModel {\n    static createEmptyModel(logService) {\n        return new ConfigurationModel({}, [], [], undefined, logService);\n    }\n    constructor(_contents, _keys, _overrides, raw, logService) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.raw = raw;\n        this.logService = logService;\n        this.overrideConfigurations = new Map();\n    }\n    get rawConfiguration() {\n        if (!this._rawConfiguration) {\n            if (this.raw?.length) {\n                const rawConfigurationModels = this.raw.map(raw => {\n                    if (raw instanceof ConfigurationModel) {\n                        return raw;\n                    }\n                    const parser = new ConfigurationModelParser('', this.logService);\n                    parser.parseRaw(raw);\n                    return parser.configurationModel;\n                });\n                this._rawConfiguration = rawConfigurationModels.reduce((previous, current) => current === previous ? current : previous.merge(current), rawConfigurationModels[0]);\n            }\n            else {\n                // raw is same as current\n                this._rawConfiguration = this;\n            }\n        }\n        return this._rawConfiguration;\n    }\n    get contents() {\n        return this._contents;\n    }\n    get overrides() {\n        return this._overrides;\n    }\n    get keys() {\n        return this._keys;\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    inspect(section, overrideIdentifier) {\n        const that = this;\n        return {\n            get value() {\n                return freeze(that.rawConfiguration.getValue(section));\n            },\n            get override() {\n                return overrideIdentifier ? freeze(that.rawConfiguration.getOverrideValue(section, overrideIdentifier)) : undefined;\n            },\n            get merged() {\n                return freeze(overrideIdentifier ? that.rawConfiguration.override(overrideIdentifier).getValue(section) : that.rawConfiguration.getValue(section));\n            },\n            get overrides() {\n                const overrides = [];\n                for (const { contents, identifiers, keys } of that.rawConfiguration.overrides) {\n                    const value = new ConfigurationModel(contents, keys, [], undefined, that.logService).getValue(section);\n                    if (value !== undefined) {\n                        overrides.push({ identifiers, value });\n                    }\n                }\n                return overrides.length ? freeze(overrides) : undefined;\n            }\n        };\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        const raws = this.raw?.length ? [...this.raw] : [this];\n        for (const other of others) {\n            raws.push(...(other.raw?.length ? other.raw : [other]));\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides, raws.every(raw => raw instanceof ConfigurationModel) ? undefined : raws, this.logService);\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides, undefined, this.logService);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (override.identifiers.length === 1 && override.identifiers[0] === identifier) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    setValue(key, value) {\n        this.updateValue(key, value, false);\n    }\n    removeValue(key) {\n        const index = this.keys.indexOf(key);\n        if (index === -1) {\n            return;\n        }\n        this.keys.splice(index, 1);\n        removeFromValueTree(this.contents, key);\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.splice(this.overrides.findIndex(o => arrays.equals(o.identifiers, overrideIdentifiersFromKey(key))), 1);\n        }\n    }\n    updateValue(key, value, add) {\n        addToValueTree(this.contents, key, value, e => this.logService.error(e));\n        add = add || this.keys.indexOf(key) === -1;\n        if (add) {\n            this.keys.push(key);\n        }\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            const identifiers = overrideIdentifiersFromKey(key);\n            const override = {\n                identifiers,\n                keys: Object.keys(this.contents[key]),\n                contents: toValuesTree(this.contents[key], message => this.logService.error(message)),\n            };\n            const index = this.overrides.findIndex(o => arrays.equals(o.identifiers, identifiers));\n            if (index !== -1) {\n                this.overrides[index] = override;\n            }\n            else {\n                this.overrides.push(override);\n            }\n        }\n    }\n}\nexport class ConfigurationModelParser {\n    constructor(_name, logService) {\n        this._name = _name;\n        this.logService = logService;\n        this._raw = null;\n        this._configurationModel = null;\n        this._restrictedConfigurations = [];\n    }\n    get configurationModel() {\n        return this._configurationModel || ConfigurationModel.createEmptyModel(this.logService);\n    }\n    parseRaw(raw, options) {\n        this._raw = raw;\n        const { contents, keys, overrides, restricted, hasExcludedProperties } = this.doParseRaw(raw, options);\n        this._configurationModel = new ConfigurationModel(contents, keys, overrides, hasExcludedProperties ? [raw] : undefined /* raw has not changed */, this.logService);\n        this._restrictedConfigurations = restricted || [];\n    }\n    doParseRaw(raw, options) {\n        const configurationProperties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const filtered = this.filter(raw, configurationProperties, true, options);\n        raw = filtered.raw;\n        const contents = toValuesTree(raw, message => this.logService.error(`Conflict in settings file ${this._name}: ${message}`));\n        const keys = Object.keys(raw);\n        const overrides = this.toOverrides(raw, message => this.logService.error(`Conflict in settings file ${this._name}: ${message}`));\n        return { contents, keys, overrides, restricted: filtered.restricted, hasExcludedProperties: filtered.hasExcludedProperties };\n    }\n    filter(properties, configurationProperties, filterOverriddenProperties, options) {\n        let hasExcludedProperties = false;\n        if (!options?.scopes && !options?.skipRestricted && !options?.exclude?.length) {\n            return { raw: properties, restricted: [], hasExcludedProperties };\n        }\n        const raw = {};\n        const restricted = [];\n        for (const key in properties) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n                const result = this.filter(properties[key], configurationProperties, false, options);\n                raw[key] = result.raw;\n                hasExcludedProperties = hasExcludedProperties || result.hasExcludedProperties;\n                restricted.push(...result.restricted);\n            }\n            else {\n                const propertySchema = configurationProperties[key];\n                const scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : 3 /* ConfigurationScope.WINDOW */ : undefined;\n                if (propertySchema?.restricted) {\n                    restricted.push(key);\n                }\n                if (!options.exclude?.includes(key) /* Check exclude */\n                    && (options.include?.includes(key) /* Check include */\n                        || ((scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) /* Check scopes */\n                            && !(options.skipRestricted && propertySchema?.restricted)))) /* Check restricted */ {\n                    raw[key] = properties[key];\n                }\n                else {\n                    hasExcludedProperties = true;\n                }\n            }\n        }\n        return { raw, restricted, hasExcludedProperties };\n    }\n    toOverrides(raw, conflictReporter) {\n        const overrides = [];\n        for (const key of Object.keys(raw)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                const overrideRaw = {};\n                for (const keyInOverrideRaw in raw[key]) {\n                    overrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n                }\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(overrideRaw),\n                    contents: toValuesTree(overrideRaw, conflictReporter)\n                });\n            }\n        }\n        return overrides;\n    }\n}\nclass ConfigurationInspectValue {\n    constructor(key, overrides, _value, overrideIdentifiers, defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, localUserConfiguration, remoteUserConfiguration, workspaceConfiguration, folderConfigurationModel, memoryConfigurationModel) {\n        this.key = key;\n        this.overrides = overrides;\n        this._value = _value;\n        this.overrideIdentifiers = overrideIdentifiers;\n        this.defaultConfiguration = defaultConfiguration;\n        this.policyConfiguration = policyConfiguration;\n        this.applicationConfiguration = applicationConfiguration;\n        this.userConfiguration = userConfiguration;\n        this.localUserConfiguration = localUserConfiguration;\n        this.remoteUserConfiguration = remoteUserConfiguration;\n        this.workspaceConfiguration = workspaceConfiguration;\n        this.folderConfigurationModel = folderConfigurationModel;\n        this.memoryConfigurationModel = memoryConfigurationModel;\n    }\n    toInspectValue(inspectValue) {\n        return inspectValue?.value !== undefined || inspectValue?.override !== undefined || inspectValue?.overrides !== undefined ? inspectValue : undefined;\n    }\n    get userInspectValue() {\n        if (!this._userInspectValue) {\n            this._userInspectValue = this.userConfiguration.inspect(this.key, this.overrides.overrideIdentifier);\n        }\n        return this._userInspectValue;\n    }\n    get user() {\n        return this.toInspectValue(this.userInspectValue);\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration, _workspaceConfiguration, _folderConfigurations, _memoryConfiguration, _memoryConfigurationByResource, logService) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this.logService = logService;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = ConfigurationModel.createEmptyModel(this.logService);\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const overrideIdentifiers = new Set();\n        for (const override of consolidateConfigurationModel.overrides) {\n            for (const overrideIdentifier of override.identifiers) {\n                if (consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined) {\n                    overrideIdentifiers.add(overrideIdentifier);\n                }\n            }\n        }\n        return new ConfigurationInspectValue(key, overrides, consolidateConfigurationModel.getValue(key), overrideIdentifiers.size ? [...overrideIdentifiers] : undefined, this._defaultConfiguration, this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration, this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration, this.userConfiguration, this.localUserConfiguration, this.remoteUserConfiguration, workspace ? this._workspaceConfiguration : undefined, folderConfigurationModel ? folderConfigurationModel : undefined, memoryConfigurationModel);\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data, logService) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults, logService);\n        const policyConfiguration = this.parseConfigurationModel(data.policy, logService);\n        const applicationConfiguration = this.parseConfigurationModel(data.application, logService);\n        const userConfiguration = this.parseConfigurationModel(data.user, logService);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace, logService);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1], logService));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, ConfigurationModel.createEmptyModel(logService), workspaceConfiguration, folders, ConfigurationModel.createEmptyModel(logService), new ResourceMap(), logService);\n    }\n    static parseConfigurationModel(model, logService) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides, undefined, logService);\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace, logService) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this.logService = logService;\n        this._marker = '\\n';\n        this._markerCode1 = this._marker.charCodeAt(0);\n        this._markerCode2 = '.'.charCodeAt(0);\n        this.affectedKeys = new Set();\n        this._previousConfiguration = undefined;\n        for (const key of change.keys) {\n            this.affectedKeys.add(key);\n        }\n        for (const [, keys] of change.overrides) {\n            for (const key of keys) {\n                this.affectedKeys.add(key);\n            }\n        }\n        // Example: '\\nfoo.bar\\nabc.def\\n'\n        this._affectsConfigStr = this._marker;\n        for (const key of this.affectedKeys) {\n            this._affectsConfigStr += key + this._marker;\n        }\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data, this.logService);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        // we have one large string with all keys that have changed. we pad (marker) the section\n        // and check that either find it padded or before a segment character\n        const needle = this._marker + section;\n        const idx = this._affectsConfigStr.indexOf(needle);\n        if (idx < 0) {\n            // NOT: (marker + section)\n            return false;\n        }\n        const pos = idx + needle.length;\n        if (pos >= this._affectsConfigStr.length) {\n            return false;\n        }\n        const code = this._affectsConfigStr.charCodeAt(pos);\n        if (code !== this._markerCode1 && code !== this._markerCode2) {\n            // NOT: section + (marker | segment)\n            return false;\n        }\n        if (overrides) {\n            const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n            const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n            return !objects.equals(value1, value2);\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { implies, expressionsAreEqualWithConstantSubstitution } from '../../contextkey/common/contextkey.js';\n// util definitions to make working with the above types easier within this module:\nexport const NoMatchingKb = { kind: 0 /* ResultKind.NoMatchingKb */ };\nconst MoreChordsNeeded = { kind: 1 /* ResultKind.MoreChordsNeeded */ };\nfunction KbFound(commandId, commandArgs, isBubble) {\n    return { kind: 2 /* ResultKind.KbFound */, commandId, commandArgs, isBubble };\n}\n//#endregion\n/**\n * Stores mappings from keybindings to commands and from commands to keybindings.\n * Given a sequence of chords, `resolve`s which keybinding it matches\n */\nexport class KeybindingResolver {\n    constructor(\n    /** built-in and extension-provided keybindings */\n    defaultKeybindings, \n    /** user's keybindings */\n    overrides, log) {\n        this._log = log;\n        this._defaultKeybindings = defaultKeybindings;\n        this._defaultBoundCommands = new Map();\n        for (const defaultKeybinding of defaultKeybindings) {\n            const command = defaultKeybinding.command;\n            if (command && command.charAt(0) !== '-') {\n                this._defaultBoundCommands.set(command, true);\n            }\n        }\n        this._map = new Map();\n        this._lookupMap = new Map();\n        this._keybindings = KeybindingResolver.handleRemovals([].concat(defaultKeybindings).concat(overrides));\n        for (let i = 0, len = this._keybindings.length; i < len; i++) {\n            const k = this._keybindings[i];\n            if (k.chords.length === 0) {\n                // unbound\n                continue;\n            }\n            // substitute with constants that are registered after startup - https://github.com/microsoft/vscode/issues/174218#issuecomment-1437972127\n            const when = k.when?.substituteConstants();\n            if (when && when.type === 0 /* ContextKeyExprType.False */) {\n                // when condition is false\n                continue;\n            }\n            this._addKeyPress(k.chords[0], k);\n        }\n    }\n    static _isTargetedForRemoval(defaultKb, keypress, when) {\n        if (keypress) {\n            for (let i = 0; i < keypress.length; i++) {\n                if (keypress[i] !== defaultKb.chords[i]) {\n                    return false;\n                }\n            }\n        }\n        // `true` means always, as does `undefined`\n        // so we will treat `true` === `undefined`\n        if (when && when.type !== 1 /* ContextKeyExprType.True */) {\n            if (!defaultKb.when) {\n                return false;\n            }\n            if (!expressionsAreEqualWithConstantSubstitution(when, defaultKb.when)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Looks for rules containing \"-commandId\" and removes them.\n     */\n    static handleRemovals(rules) {\n        // Do a first pass and construct a hash-map for removals\n        const removals = new Map();\n        for (let i = 0, len = rules.length; i < len; i++) {\n            const rule = rules[i];\n            if (rule.command && rule.command.charAt(0) === '-') {\n                const command = rule.command.substring(1);\n                if (!removals.has(command)) {\n                    removals.set(command, [rule]);\n                }\n                else {\n                    removals.get(command).push(rule);\n                }\n            }\n        }\n        if (removals.size === 0) {\n            // There are no removals\n            return rules;\n        }\n        // Do a second pass and keep only non-removed keybindings\n        const result = [];\n        for (let i = 0, len = rules.length; i < len; i++) {\n            const rule = rules[i];\n            if (!rule.command || rule.command.length === 0) {\n                result.push(rule);\n                continue;\n            }\n            if (rule.command.charAt(0) === '-') {\n                continue;\n            }\n            const commandRemovals = removals.get(rule.command);\n            if (!commandRemovals || !rule.isDefault) {\n                result.push(rule);\n                continue;\n            }\n            let isRemoved = false;\n            for (const commandRemoval of commandRemovals) {\n                const when = commandRemoval.when;\n                if (this._isTargetedForRemoval(rule, commandRemoval.chords, when)) {\n                    isRemoved = true;\n                    break;\n                }\n            }\n            if (!isRemoved) {\n                result.push(rule);\n                continue;\n            }\n        }\n        return result;\n    }\n    _addKeyPress(keypress, item) {\n        const conflicts = this._map.get(keypress);\n        if (typeof conflicts === 'undefined') {\n            // There is no conflict so far\n            this._map.set(keypress, [item]);\n            this._addToLookupMap(item);\n            return;\n        }\n        for (let i = conflicts.length - 1; i >= 0; i--) {\n            const conflict = conflicts[i];\n            if (conflict.command === item.command) {\n                continue;\n            }\n            // Test if the shorter keybinding is a prefix of the longer one.\n            // If the shorter keybinding is a prefix, it effectively will shadow the longer one and is considered a conflict.\n            let isShorterKbPrefix = true;\n            for (let i = 1; i < conflict.chords.length && i < item.chords.length; i++) {\n                if (conflict.chords[i] !== item.chords[i]) {\n                    // The ith step does not conflict\n                    isShorterKbPrefix = false;\n                    break;\n                }\n            }\n            if (!isShorterKbPrefix) {\n                continue;\n            }\n            if (KeybindingResolver.whenIsEntirelyIncluded(conflict.when, item.when)) {\n                // `item` completely overwrites `conflict`\n                // Remove conflict from the lookupMap\n                this._removeFromLookupMap(conflict);\n            }\n        }\n        conflicts.push(item);\n        this._addToLookupMap(item);\n    }\n    _addToLookupMap(item) {\n        if (!item.command) {\n            return;\n        }\n        let arr = this._lookupMap.get(item.command);\n        if (typeof arr === 'undefined') {\n            arr = [item];\n            this._lookupMap.set(item.command, arr);\n        }\n        else {\n            arr.push(item);\n        }\n    }\n    _removeFromLookupMap(item) {\n        if (!item.command) {\n            return;\n        }\n        const arr = this._lookupMap.get(item.command);\n        if (typeof arr === 'undefined') {\n            return;\n        }\n        for (let i = 0, len = arr.length; i < len; i++) {\n            if (arr[i] === item) {\n                arr.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * Returns true if it is provable `a` implies `b`.\n     */\n    static whenIsEntirelyIncluded(a, b) {\n        if (!b || b.type === 1 /* ContextKeyExprType.True */) {\n            return true;\n        }\n        if (!a || a.type === 1 /* ContextKeyExprType.True */) {\n            return false;\n        }\n        return implies(a, b);\n    }\n    getKeybindings() {\n        return this._keybindings;\n    }\n    lookupPrimaryKeybinding(commandId, context) {\n        const items = this._lookupMap.get(commandId);\n        if (typeof items === 'undefined' || items.length === 0) {\n            return null;\n        }\n        if (items.length === 1) {\n            return items[0];\n        }\n        for (let i = items.length - 1; i >= 0; i--) {\n            const item = items[i];\n            if (context.contextMatchesRules(item.when)) {\n                return item;\n            }\n        }\n        return items[items.length - 1];\n    }\n    /**\n     * Looks up a keybinding trigged as a result of pressing a sequence of chords - `[...currentChords, keypress]`\n     *\n     * Example: resolving 3 chords pressed sequentially - `cmd+k cmd+p cmd+i`:\n     * \t`currentChords = [ 'cmd+k' , 'cmd+p' ]` and `keypress = `cmd+i` - last pressed chord\n     */\n    resolve(context, currentChords, keypress) {\n        const pressedChords = [...currentChords, keypress];\n        this._log(`| Resolving ${pressedChords}`);\n        const kbCandidates = this._map.get(pressedChords[0]);\n        if (kbCandidates === undefined) {\n            // No bindings with such 0-th chord\n            this._log(`\\\\ No keybinding entries.`);\n            return NoMatchingKb;\n        }\n        let lookupMap = null;\n        if (pressedChords.length < 2) {\n            lookupMap = kbCandidates;\n        }\n        else {\n            // Fetch all chord bindings for `currentChords`\n            lookupMap = [];\n            for (let i = 0, len = kbCandidates.length; i < len; i++) {\n                const candidate = kbCandidates[i];\n                if (pressedChords.length > candidate.chords.length) { // # of pressed chords can't be less than # of chords in a keybinding to invoke\n                    continue;\n                }\n                let prefixMatches = true;\n                for (let i = 1; i < pressedChords.length; i++) {\n                    if (candidate.chords[i] !== pressedChords[i]) {\n                        prefixMatches = false;\n                        break;\n                    }\n                }\n                if (prefixMatches) {\n                    lookupMap.push(candidate);\n                }\n            }\n        }\n        // check there's a keybinding with a matching when clause\n        const result = this._findCommand(context, lookupMap);\n        if (!result) {\n            this._log(`\\\\ From ${lookupMap.length} keybinding entries, no when clauses matched the context.`);\n            return NoMatchingKb;\n        }\n        // check we got all chords necessary to be sure a particular keybinding needs to be invoked\n        if (pressedChords.length < result.chords.length) {\n            // The chord sequence is not complete\n            this._log(`\\\\ From ${lookupMap.length} keybinding entries, awaiting ${result.chords.length - pressedChords.length} more chord(s), when: ${printWhenExplanation(result.when)}, source: ${printSourceExplanation(result)}.`);\n            return MoreChordsNeeded;\n        }\n        this._log(`\\\\ From ${lookupMap.length} keybinding entries, matched ${result.command}, when: ${printWhenExplanation(result.when)}, source: ${printSourceExplanation(result)}.`);\n        return KbFound(result.command, result.commandArgs, result.bubble);\n    }\n    _findCommand(context, matches) {\n        for (let i = matches.length - 1; i >= 0; i--) {\n            const k = matches[i];\n            if (!KeybindingResolver._contextMatchesRules(context, k.when)) {\n                continue;\n            }\n            return k;\n        }\n        return null;\n    }\n    static _contextMatchesRules(context, rules) {\n        if (!rules) {\n            return true;\n        }\n        return rules.evaluate(context);\n    }\n}\nfunction printWhenExplanation(when) {\n    if (!when) {\n        return `no when condition`;\n    }\n    return `${when.serialize()}`;\n}\nfunction printSourceExplanation(kb) {\n    return (kb.extensionId\n        ? (kb.isBuiltinExtension ? `built-in extension ${kb.extensionId}` : `user extension ${kb.extensionId}`)\n        : (kb.isDefault ? `built-in` : `user`));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IntervalTimer, TimeoutTimer } from '../../../base/common/async.js';\nimport { illegalState } from '../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { IME } from '../../../base/common/ime.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as nls from '../../../nls.js';\nimport { NoMatchingKb } from './keybindingResolver.js';\nconst HIGH_FREQ_COMMANDS = /^(cursor|delete|undo|redo|tab|editor\\.action\\.clipboard)/;\nexport class AbstractKeybindingService extends Disposable {\n    get onDidUpdateKeybindings() {\n        return this._onDidUpdateKeybindings ? this._onDidUpdateKeybindings.event : Event.None; // Sinon stubbing walks properties on prototype\n    }\n    get inChordMode() {\n        return this._currentChords.length > 0;\n    }\n    constructor(_contextKeyService, _commandService, _telemetryService, _notificationService, _logService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._commandService = _commandService;\n        this._telemetryService = _telemetryService;\n        this._notificationService = _notificationService;\n        this._logService = _logService;\n        this._onDidUpdateKeybindings = this._register(new Emitter());\n        this._currentChords = [];\n        this._currentChordChecker = new IntervalTimer();\n        this._currentChordStatusMessage = null;\n        this._ignoreSingleModifiers = KeybindingModifierSet.EMPTY;\n        this._currentSingleModifier = null;\n        this._currentSingleModifierClearTimeout = new TimeoutTimer();\n        this._currentlyDispatchingCommandId = null;\n        this._logging = false;\n    }\n    dispose() {\n        super.dispose();\n    }\n    _log(str) {\n        if (this._logging) {\n            this._logService.info(`[KeybindingService]: ${str}`);\n        }\n    }\n    getKeybindings() {\n        return this._getResolver().getKeybindings();\n    }\n    lookupKeybinding(commandId, context) {\n        const result = this._getResolver().lookupPrimaryKeybinding(commandId, context || this._contextKeyService);\n        if (!result) {\n            return undefined;\n        }\n        return result.resolvedKeybinding;\n    }\n    dispatchEvent(e, target) {\n        return this._dispatch(e, target);\n    }\n    // TODO@ulugbekna: update namings to align with `_doDispatch`\n    // TODO@ulugbekna: this fn doesn't seem to take into account single-modifier keybindings, eg `shift shift`\n    softDispatch(e, target) {\n        this._log(`/ Soft dispatching keyboard event`);\n        const keybinding = this.resolveKeyboardEvent(e);\n        if (keybinding.hasMultipleChords()) {\n            console.warn('keyboard event should not be mapped to multiple chords');\n            return NoMatchingKb;\n        }\n        const [firstChord,] = keybinding.getDispatchChords();\n        if (firstChord === null) {\n            // cannot be dispatched, probably only modifier keys\n            this._log(`\\\\ Keyboard event cannot be dispatched`);\n            return NoMatchingKb;\n        }\n        const contextValue = this._contextKeyService.getContext(target);\n        const currentChords = this._currentChords.map((({ keypress }) => keypress));\n        return this._getResolver().resolve(contextValue, currentChords, firstChord);\n    }\n    _scheduleLeaveChordMode() {\n        const chordLastInteractedTime = Date.now();\n        this._currentChordChecker.cancelAndSet(() => {\n            if (!this._documentHasFocus()) {\n                // Focus has been lost => leave chord mode\n                this._leaveChordMode();\n                return;\n            }\n            if (Date.now() - chordLastInteractedTime > 5000) {\n                // 5 seconds elapsed => leave chord mode\n                this._leaveChordMode();\n            }\n        }, 500);\n    }\n    _expectAnotherChord(firstChord, keypressLabel) {\n        this._currentChords.push({ keypress: firstChord, label: keypressLabel });\n        switch (this._currentChords.length) {\n            case 0:\n                throw illegalState('impossible');\n            case 1:\n                // TODO@ulugbekna: revise this message and the one below (at least, fix terminology)\n                this._currentChordStatusMessage = this._notificationService.status(nls.localize('first.chord', \"({0}) was pressed. Waiting for second key of chord...\", keypressLabel));\n                break;\n            default: {\n                const fullKeypressLabel = this._currentChords.map(({ label }) => label).join(', ');\n                this._currentChordStatusMessage = this._notificationService.status(nls.localize('next.chord', \"({0}) was pressed. Waiting for next key of chord...\", fullKeypressLabel));\n            }\n        }\n        this._scheduleLeaveChordMode();\n        if (IME.enabled) {\n            IME.disable();\n        }\n    }\n    _leaveChordMode() {\n        if (this._currentChordStatusMessage) {\n            this._currentChordStatusMessage.dispose();\n            this._currentChordStatusMessage = null;\n        }\n        this._currentChordChecker.cancel();\n        this._currentChords = [];\n        IME.enable();\n    }\n    _dispatch(e, target) {\n        return this._doDispatch(this.resolveKeyboardEvent(e), target, /*isSingleModiferChord*/ false);\n    }\n    _singleModifierDispatch(e, target) {\n        const keybinding = this.resolveKeyboardEvent(e);\n        const [singleModifier,] = keybinding.getSingleModifierDispatchChords();\n        if (singleModifier) {\n            if (this._ignoreSingleModifiers.has(singleModifier)) {\n                this._log(`+ Ignoring single modifier ${singleModifier} due to it being pressed together with other keys.`);\n                this._ignoreSingleModifiers = KeybindingModifierSet.EMPTY;\n                this._currentSingleModifierClearTimeout.cancel();\n                this._currentSingleModifier = null;\n                return false;\n            }\n            this._ignoreSingleModifiers = KeybindingModifierSet.EMPTY;\n            if (this._currentSingleModifier === null) {\n                // we have a valid `singleModifier`, store it for the next keyup, but clear it in 300ms\n                this._log(`+ Storing single modifier for possible chord ${singleModifier}.`);\n                this._currentSingleModifier = singleModifier;\n                this._currentSingleModifierClearTimeout.cancelAndSet(() => {\n                    this._log(`+ Clearing single modifier due to 300ms elapsed.`);\n                    this._currentSingleModifier = null;\n                }, 300);\n                return false;\n            }\n            if (singleModifier === this._currentSingleModifier) {\n                // bingo!\n                this._log(`/ Dispatching single modifier chord ${singleModifier} ${singleModifier}`);\n                this._currentSingleModifierClearTimeout.cancel();\n                this._currentSingleModifier = null;\n                return this._doDispatch(keybinding, target, /*isSingleModiferChord*/ true);\n            }\n            this._log(`+ Clearing single modifier due to modifier mismatch: ${this._currentSingleModifier} ${singleModifier}`);\n            this._currentSingleModifierClearTimeout.cancel();\n            this._currentSingleModifier = null;\n            return false;\n        }\n        // When pressing a modifier and holding it pressed with any other modifier or key combination,\n        // the pressed modifiers should no longer be considered for single modifier dispatch.\n        const [firstChord,] = keybinding.getChords();\n        this._ignoreSingleModifiers = new KeybindingModifierSet(firstChord);\n        if (this._currentSingleModifier !== null) {\n            this._log(`+ Clearing single modifier due to other key up.`);\n        }\n        this._currentSingleModifierClearTimeout.cancel();\n        this._currentSingleModifier = null;\n        return false;\n    }\n    _doDispatch(userKeypress, target, isSingleModiferChord = false) {\n        let shouldPreventDefault = false;\n        if (userKeypress.hasMultipleChords()) { // warn - because user can press a single chord at a time\n            console.warn('Unexpected keyboard event mapped to multiple chords');\n            return false;\n        }\n        let userPressedChord = null;\n        let currentChords = null;\n        if (isSingleModiferChord) {\n            // The keybinding is the second keypress of a single modifier chord, e.g. \"shift shift\".\n            // A single modifier can only occur when the same modifier is pressed in short sequence,\n            // hence we disregard `_currentChord` and use the same modifier instead.\n            const [dispatchKeyname,] = userKeypress.getSingleModifierDispatchChords();\n            userPressedChord = dispatchKeyname;\n            currentChords = dispatchKeyname ? [dispatchKeyname] : []; // TODO@ulugbekna: in the `else` case we assign an empty array - make sure `resolve` can handle an empty array well\n        }\n        else {\n            [userPressedChord,] = userKeypress.getDispatchChords();\n            currentChords = this._currentChords.map(({ keypress }) => keypress);\n        }\n        if (userPressedChord === null) {\n            this._log(`\\\\ Keyboard event cannot be dispatched in keydown phase.`);\n            // cannot be dispatched, probably only modifier keys\n            return shouldPreventDefault;\n        }\n        const contextValue = this._contextKeyService.getContext(target);\n        const keypressLabel = userKeypress.getLabel();\n        const resolveResult = this._getResolver().resolve(contextValue, currentChords, userPressedChord);\n        switch (resolveResult.kind) {\n            case 0 /* ResultKind.NoMatchingKb */: {\n                this._logService.trace('KeybindingService#dispatch', keypressLabel, `[ No matching keybinding ]`);\n                if (this.inChordMode) {\n                    const currentChordsLabel = this._currentChords.map(({ label }) => label).join(', ');\n                    this._log(`+ Leaving multi-chord mode: Nothing bound to \"${currentChordsLabel}, ${keypressLabel}\".`);\n                    this._notificationService.status(nls.localize('missing.chord', \"The key combination ({0}, {1}) is not a command.\", currentChordsLabel, keypressLabel), { hideAfter: 10 * 1000 /* 10s */ });\n                    this._leaveChordMode();\n                    shouldPreventDefault = true;\n                }\n                return shouldPreventDefault;\n            }\n            case 1 /* ResultKind.MoreChordsNeeded */: {\n                this._logService.trace('KeybindingService#dispatch', keypressLabel, `[ Several keybindings match - more chords needed ]`);\n                shouldPreventDefault = true;\n                this._expectAnotherChord(userPressedChord, keypressLabel);\n                this._log(this._currentChords.length === 1 ? `+ Entering multi-chord mode...` : `+ Continuing multi-chord mode...`);\n                return shouldPreventDefault;\n            }\n            case 2 /* ResultKind.KbFound */: {\n                this._logService.trace('KeybindingService#dispatch', keypressLabel, `[ Will dispatch command ${resolveResult.commandId} ]`);\n                if (resolveResult.commandId === null || resolveResult.commandId === '') {\n                    if (this.inChordMode) {\n                        const currentChordsLabel = this._currentChords.map(({ label }) => label).join(', ');\n                        this._log(`+ Leaving chord mode: Nothing bound to \"${currentChordsLabel}, ${keypressLabel}\".`);\n                        this._notificationService.status(nls.localize('missing.chord', \"The key combination ({0}, {1}) is not a command.\", currentChordsLabel, keypressLabel), { hideAfter: 10 * 1000 /* 10s */ });\n                        this._leaveChordMode();\n                        shouldPreventDefault = true;\n                    }\n                }\n                else {\n                    if (this.inChordMode) {\n                        this._leaveChordMode();\n                    }\n                    if (!resolveResult.isBubble) {\n                        shouldPreventDefault = true;\n                    }\n                    this._log(`+ Invoking command ${resolveResult.commandId}.`);\n                    this._currentlyDispatchingCommandId = resolveResult.commandId;\n                    try {\n                        if (typeof resolveResult.commandArgs === 'undefined') {\n                            this._commandService.executeCommand(resolveResult.commandId).then(undefined, err => this._notificationService.warn(err));\n                        }\n                        else {\n                            this._commandService.executeCommand(resolveResult.commandId, resolveResult.commandArgs).then(undefined, err => this._notificationService.warn(err));\n                        }\n                    }\n                    finally {\n                        this._currentlyDispatchingCommandId = null;\n                    }\n                    if (!HIGH_FREQ_COMMANDS.test(resolveResult.commandId)) {\n                        this._telemetryService.publicLog2('workbenchActionExecuted', { id: resolveResult.commandId, from: 'keybinding', detail: userKeypress.getUserSettingsLabel() ?? undefined });\n                    }\n                }\n                return shouldPreventDefault;\n            }\n        }\n    }\n    mightProducePrintableCharacter(event) {\n        if (event.ctrlKey || event.metaKey) {\n            // ignore ctrl/cmd-combination but not shift/alt-combinatios\n            return false;\n        }\n        // weak check for certain ranges. this is properly implemented in a subclass\n        // with access to the KeyboardMapperFactory.\n        if ((event.keyCode >= 31 /* KeyCode.KeyA */ && event.keyCode <= 56 /* KeyCode.KeyZ */)\n            || (event.keyCode >= 21 /* KeyCode.Digit0 */ && event.keyCode <= 30 /* KeyCode.Digit9 */)) {\n            return true;\n        }\n        return false;\n    }\n}\nclass KeybindingModifierSet {\n    static { this.EMPTY = new KeybindingModifierSet(null); }\n    constructor(source) {\n        this._ctrlKey = source ? source.ctrlKey : false;\n        this._shiftKey = source ? source.shiftKey : false;\n        this._altKey = source ? source.altKey : false;\n        this._metaKey = source ? source.metaKey : false;\n    }\n    has(modifier) {\n        switch (modifier) {\n            case 'ctrl': return this._ctrlKey;\n            case 'shift': return this._shiftKey;\n            case 'alt': return this._altKey;\n            case 'meta': return this._metaKey;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ResolvedKeybindingItem {\n    constructor(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\n        this._resolvedKeybindingItemBrand = undefined;\n        this.resolvedKeybinding = resolvedKeybinding;\n        this.chords = resolvedKeybinding ? toEmptyArrayIfContainsNull(resolvedKeybinding.getDispatchChords()) : [];\n        if (resolvedKeybinding && this.chords.length === 0) {\n            // handle possible single modifier chord keybindings\n            this.chords = toEmptyArrayIfContainsNull(resolvedKeybinding.getSingleModifierDispatchChords());\n        }\n        this.bubble = (command ? command.charCodeAt(0) === 94 /* CharCode.Caret */ : false);\n        this.command = this.bubble ? command.substr(1) : command;\n        this.commandArgs = commandArgs;\n        this.when = when;\n        this.isDefault = isDefault;\n        this.extensionId = extensionId;\n        this.isBuiltinExtension = isBuiltinExtension;\n    }\n}\nexport function toEmptyArrayIfContainsNull(arr) {\n    const result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const element = arr[i];\n        if (!element) {\n            return [];\n        }\n        result.push(element);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { AriaLabelProvider, ElectronAcceleratorLabelProvider, UILabelProvider, UserSettingsLabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { ResolvedKeybinding, ResolvedChord } from '../../../base/common/keybindings.js';\nexport class BaseResolvedKeybinding extends ResolvedKeybinding {\n    constructor(os, chords) {\n        super();\n        if (chords.length === 0) {\n            throw illegalArgument(`chords`);\n        }\n        this._os = os;\n        this._chords = chords;\n    }\n    getLabel() {\n        return UILabelProvider.toLabel(this._os, this._chords, (keybinding) => this._getLabel(keybinding));\n    }\n    getAriaLabel() {\n        return AriaLabelProvider.toLabel(this._os, this._chords, (keybinding) => this._getAriaLabel(keybinding));\n    }\n    getElectronAccelerator() {\n        if (this._chords.length > 1) {\n            // [Electron Accelerators] Electron cannot handle chords\n            return null;\n        }\n        if (this._chords[0].isDuplicateModifierCase()) {\n            // [Electron Accelerators] Electron cannot handle modifier only keybindings\n            // e.g. \"shift shift\"\n            return null;\n        }\n        return ElectronAcceleratorLabelProvider.toLabel(this._os, this._chords, (keybinding) => this._getElectronAccelerator(keybinding));\n    }\n    getUserSettingsLabel() {\n        return UserSettingsLabelProvider.toLabel(this._os, this._chords, (keybinding) => this._getUserSettingsLabel(keybinding));\n    }\n    hasMultipleChords() {\n        return (this._chords.length > 1);\n    }\n    getChords() {\n        return this._chords.map((keybinding) => this._getChord(keybinding));\n    }\n    _getChord(keybinding) {\n        return new ResolvedChord(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\n    }\n    getDispatchChords() {\n        return this._chords.map((keybinding) => this._getChordDispatch(keybinding));\n    }\n    getSingleModifierDispatchChords() {\n        return this._chords.map((keybinding) => this._getSingleModifierChordDispatch(keybinding));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyCodeUtils, IMMUTABLE_CODE_TO_KEY_CODE } from '../../../base/common/keyCodes.js';\nimport { KeyCodeChord } from '../../../base/common/keybindings.js';\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\nimport { toEmptyArrayIfContainsNull } from './resolvedKeybindingItem.js';\n/**\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\n */\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding {\n    constructor(chords, os) {\n        super(os, chords);\n    }\n    _keyCodeToUILabel(keyCode) {\n        if (this._os === 2 /* OperatingSystem.Macintosh */) {\n            switch (keyCode) {\n                case 15 /* KeyCode.LeftArrow */:\n                    return '←';\n                case 16 /* KeyCode.UpArrow */:\n                    return '↑';\n                case 17 /* KeyCode.RightArrow */:\n                    return '→';\n                case 18 /* KeyCode.DownArrow */:\n                    return '↓';\n            }\n        }\n        return KeyCodeUtils.toString(keyCode);\n    }\n    _getLabel(chord) {\n        if (chord.isDuplicateModifierCase()) {\n            return '';\n        }\n        return this._keyCodeToUILabel(chord.keyCode);\n    }\n    _getAriaLabel(chord) {\n        if (chord.isDuplicateModifierCase()) {\n            return '';\n        }\n        return KeyCodeUtils.toString(chord.keyCode);\n    }\n    _getElectronAccelerator(chord) {\n        return KeyCodeUtils.toElectronAccelerator(chord.keyCode);\n    }\n    _getUserSettingsLabel(chord) {\n        if (chord.isDuplicateModifierCase()) {\n            return '';\n        }\n        const result = KeyCodeUtils.toUserSettingsUS(chord.keyCode);\n        return (result ? result.toLowerCase() : result);\n    }\n    _getChordDispatch(chord) {\n        return USLayoutResolvedKeybinding.getDispatchStr(chord);\n    }\n    static getDispatchStr(chord) {\n        if (chord.isModifierKey()) {\n            return null;\n        }\n        let result = '';\n        if (chord.ctrlKey) {\n            result += 'ctrl+';\n        }\n        if (chord.shiftKey) {\n            result += 'shift+';\n        }\n        if (chord.altKey) {\n            result += 'alt+';\n        }\n        if (chord.metaKey) {\n            result += 'meta+';\n        }\n        result += KeyCodeUtils.toString(chord.keyCode);\n        return result;\n    }\n    _getSingleModifierChordDispatch(keybinding) {\n        if (keybinding.keyCode === 5 /* KeyCode.Ctrl */ && !keybinding.shiftKey && !keybinding.altKey && !keybinding.metaKey) {\n            return 'ctrl';\n        }\n        if (keybinding.keyCode === 4 /* KeyCode.Shift */ && !keybinding.ctrlKey && !keybinding.altKey && !keybinding.metaKey) {\n            return 'shift';\n        }\n        if (keybinding.keyCode === 6 /* KeyCode.Alt */ && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.metaKey) {\n            return 'alt';\n        }\n        if (keybinding.keyCode === 57 /* KeyCode.Meta */ && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.altKey) {\n            return 'meta';\n        }\n        return null;\n    }\n    /**\n     * *NOTE*: Check return value for `KeyCode.Unknown`.\n     */\n    static _scanCodeToKeyCode(scanCode) {\n        const immutableKeyCode = IMMUTABLE_CODE_TO_KEY_CODE[scanCode];\n        if (immutableKeyCode !== -1 /* KeyCode.DependsOnKbLayout */) {\n            return immutableKeyCode;\n        }\n        switch (scanCode) {\n            case 10 /* ScanCode.KeyA */: return 31 /* KeyCode.KeyA */;\n            case 11 /* ScanCode.KeyB */: return 32 /* KeyCode.KeyB */;\n            case 12 /* ScanCode.KeyC */: return 33 /* KeyCode.KeyC */;\n            case 13 /* ScanCode.KeyD */: return 34 /* KeyCode.KeyD */;\n            case 14 /* ScanCode.KeyE */: return 35 /* KeyCode.KeyE */;\n            case 15 /* ScanCode.KeyF */: return 36 /* KeyCode.KeyF */;\n            case 16 /* ScanCode.KeyG */: return 37 /* KeyCode.KeyG */;\n            case 17 /* ScanCode.KeyH */: return 38 /* KeyCode.KeyH */;\n            case 18 /* ScanCode.KeyI */: return 39 /* KeyCode.KeyI */;\n            case 19 /* ScanCode.KeyJ */: return 40 /* KeyCode.KeyJ */;\n            case 20 /* ScanCode.KeyK */: return 41 /* KeyCode.KeyK */;\n            case 21 /* ScanCode.KeyL */: return 42 /* KeyCode.KeyL */;\n            case 22 /* ScanCode.KeyM */: return 43 /* KeyCode.KeyM */;\n            case 23 /* ScanCode.KeyN */: return 44 /* KeyCode.KeyN */;\n            case 24 /* ScanCode.KeyO */: return 45 /* KeyCode.KeyO */;\n            case 25 /* ScanCode.KeyP */: return 46 /* KeyCode.KeyP */;\n            case 26 /* ScanCode.KeyQ */: return 47 /* KeyCode.KeyQ */;\n            case 27 /* ScanCode.KeyR */: return 48 /* KeyCode.KeyR */;\n            case 28 /* ScanCode.KeyS */: return 49 /* KeyCode.KeyS */;\n            case 29 /* ScanCode.KeyT */: return 50 /* KeyCode.KeyT */;\n            case 30 /* ScanCode.KeyU */: return 51 /* KeyCode.KeyU */;\n            case 31 /* ScanCode.KeyV */: return 52 /* KeyCode.KeyV */;\n            case 32 /* ScanCode.KeyW */: return 53 /* KeyCode.KeyW */;\n            case 33 /* ScanCode.KeyX */: return 54 /* KeyCode.KeyX */;\n            case 34 /* ScanCode.KeyY */: return 55 /* KeyCode.KeyY */;\n            case 35 /* ScanCode.KeyZ */: return 56 /* KeyCode.KeyZ */;\n            case 36 /* ScanCode.Digit1 */: return 22 /* KeyCode.Digit1 */;\n            case 37 /* ScanCode.Digit2 */: return 23 /* KeyCode.Digit2 */;\n            case 38 /* ScanCode.Digit3 */: return 24 /* KeyCode.Digit3 */;\n            case 39 /* ScanCode.Digit4 */: return 25 /* KeyCode.Digit4 */;\n            case 40 /* ScanCode.Digit5 */: return 26 /* KeyCode.Digit5 */;\n            case 41 /* ScanCode.Digit6 */: return 27 /* KeyCode.Digit6 */;\n            case 42 /* ScanCode.Digit7 */: return 28 /* KeyCode.Digit7 */;\n            case 43 /* ScanCode.Digit8 */: return 29 /* KeyCode.Digit8 */;\n            case 44 /* ScanCode.Digit9 */: return 30 /* KeyCode.Digit9 */;\n            case 45 /* ScanCode.Digit0 */: return 21 /* KeyCode.Digit0 */;\n            case 51 /* ScanCode.Minus */: return 88 /* KeyCode.Minus */;\n            case 52 /* ScanCode.Equal */: return 86 /* KeyCode.Equal */;\n            case 53 /* ScanCode.BracketLeft */: return 92 /* KeyCode.BracketLeft */;\n            case 54 /* ScanCode.BracketRight */: return 94 /* KeyCode.BracketRight */;\n            case 55 /* ScanCode.Backslash */: return 93 /* KeyCode.Backslash */;\n            case 56 /* ScanCode.IntlHash */: return 0 /* KeyCode.Unknown */; // missing\n            case 57 /* ScanCode.Semicolon */: return 85 /* KeyCode.Semicolon */;\n            case 58 /* ScanCode.Quote */: return 95 /* KeyCode.Quote */;\n            case 59 /* ScanCode.Backquote */: return 91 /* KeyCode.Backquote */;\n            case 60 /* ScanCode.Comma */: return 87 /* KeyCode.Comma */;\n            case 61 /* ScanCode.Period */: return 89 /* KeyCode.Period */;\n            case 62 /* ScanCode.Slash */: return 90 /* KeyCode.Slash */;\n            case 106 /* ScanCode.IntlBackslash */: return 97 /* KeyCode.IntlBackslash */;\n        }\n        return 0 /* KeyCode.Unknown */;\n    }\n    static _toKeyCodeChord(chord) {\n        if (!chord) {\n            return null;\n        }\n        if (chord instanceof KeyCodeChord) {\n            return chord;\n        }\n        const keyCode = this._scanCodeToKeyCode(chord.scanCode);\n        if (keyCode === 0 /* KeyCode.Unknown */) {\n            return null;\n        }\n        return new KeyCodeChord(chord.ctrlKey, chord.shiftKey, chord.altKey, chord.metaKey, keyCode);\n    }\n    static resolveKeybinding(keybinding, os) {\n        const chords = toEmptyArrayIfContainsNull(keybinding.chords.map(chord => this._toKeyCodeChord(chord)));\n        if (chords.length > 0) {\n            return [new USLayoutResolvedKeybinding(chords, os)];\n        }\n        return [];\n    }\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILabelService = createDecorator('labelService');\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IProgressService = createDecorator('progressService');\nexport const emptyProgressRunner = Object.freeze({\n    total() { },\n    worked() { },\n    done() { }\n});\nexport class Progress {\n    static { this.None = Object.freeze({ report() { } }); }\n    constructor(callback) {\n        this.callback = callback;\n    }\n    report(item) {\n        this._value = item;\n        this.callback(this._value);\n    }\n}\nexport const IEditorProgressService = createDecorator('editorProgressService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { basename } from '../../../base/common/path.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof singleFolderIdentifier?.id === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function isEmptyWorkspaceIdentifier(obj) {\n    const emptyWorkspaceIdentifier = obj;\n    return typeof emptyWorkspaceIdentifier?.id === 'string'\n        && !isSingleFolderWorkspaceIdentifier(obj)\n        && !isWorkspaceIdentifier(obj);\n}\nexport const EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE = { id: 'ext-dev' };\nexport const UNKNOWN_EMPTY_WINDOW_WORKSPACE = { id: 'empty-window' };\nexport function toWorkspaceIdentifier(arg0, isExtensionDevelopment) {\n    // Empty workspace\n    if (typeof arg0 === 'string' || typeof arg0 === 'undefined') {\n        // With a backupPath, the basename is the empty workspace identifier\n        if (typeof arg0 === 'string') {\n            return {\n                id: basename(arg0)\n            };\n        }\n        // Extension development empty windows have backups disabled\n        // so we return a constant workspace identifier for extension\n        // authors to allow to restore their workspace state even then.\n        if (isExtensionDevelopment) {\n            return EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE;\n        }\n        return UNKNOWN_EMPTY_WINDOW_WORKSPACE;\n    }\n    // Multi root\n    const workspace = arg0;\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty window\n    return {\n        id: workspace.id\n    };\n}\nexport function isWorkspaceIdentifier(obj) {\n    const workspaceIdentifier = obj;\n    return typeof workspaceIdentifier?.id === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, \n    /**\n     * Provides access to the original metadata for this workspace\n     * folder. This can be different from the metadata provided in\n     * this class:\n     * - raw paths can be relative\n     * - raw paths are not normalized\n     */\n    raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const STANDALONE_EDITOR_WORKSPACE_ID = '4064f6ec-cb38-4ad0-af64-ee6467e63c82';\nexport function isStandaloneEditorWorkspace(workspace) {\n    return workspace.id === STANDALONE_EDITOR_WORKSPACE_ID;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceTrustManagementService = createDecorator('workspaceTrustManagementService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isLocalizedString(thing) {\n    return thing\n        && typeof thing === 'object'\n        && typeof thing.original === 'string'\n        && typeof thing.value === 'string';\n}\nexport function isICommandActionToggleInfo(thing) {\n    return thing ? thing.condition !== undefined : false;\n}\n","import { Emitter, Event, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n    const keysRaw = storage.get(TARGET_KEY);\n    if (keysRaw) {\n        try {\n            return JSON.parse(keysRaw);\n        }\n        catch (error) {\n            // Fail gracefully\n        }\n    }\n    return Object.create(null);\n}\nexport class AbstractStorageService extends Disposable {\n    static { this.DEFAULT_FLUSH_INTERVAL = 60 * 1000; } // every minute\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    onDidChangeValue(scope, key, disposable) {\n        return Event.filter(this._onDidChangeValue.event, e => e.scope === scope && (key === undefined || e.key === key), disposable);\n    }\n    emitDidChangeValue(scope, event) {\n        const { key, external } = event;\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key], external });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        return this.getStorage(scope)?.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        return this.getStorage(scope)?.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        return this.getStorage(scope)?.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target, external = false) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope, external);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            this.getStorage(scope)?.set(key, value, external);\n        });\n    }\n    remove(key, scope, external = false) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            this.getStorage(scope)?.delete(key, external);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target, external = false) {\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                this.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                this.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const storage = this.getStorage(scope);\n        return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n}\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this._register(this.workspaceStorage.onDidChangeStorage(e => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, e)));\n        this._register(this.profileStorage.onDidChangeStorage(e => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, e)));\n        this._register(this.applicationStorage.onDidChangeStorage(e => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, e)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n","import { keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropOverBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, listDropBetweenBackground, radioActiveBackground, radioActiveForeground, radioInactiveBackground, radioInactiveForeground, radioInactiveBorder, radioInactiveHoverBackground, radioActiveBorder } from '../common/colorRegistry.js';\nimport { Color } from '../../../base/common/color.js';\nfunction overrideStyles(override, styles) {\n    const result = { ...styles };\n    for (const key in override) {\n        const val = override[key];\n        result[key] = val !== undefined ? asCssVariable(val) : undefined;\n    }\n    return result;\n}\nexport const defaultKeybindingLabelStyles = {\n    keybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n    keybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n    keybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n    keybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n    keybindingLabelShadow: asCssVariable(widgetShadow)\n};\nexport const defaultButtonStyles = {\n    buttonForeground: asCssVariable(buttonForeground),\n    buttonSeparator: asCssVariable(buttonSeparator),\n    buttonBackground: asCssVariable(buttonBackground),\n    buttonHoverBackground: asCssVariable(buttonHoverBackground),\n    buttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n    buttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n    buttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n    buttonBorder: asCssVariable(buttonBorder),\n};\nexport const defaultProgressBarStyles = {\n    progressBarBackground: asCssVariable(progressBarBackground)\n};\nexport const defaultToggleStyles = {\n    inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n    inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n    inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\nexport const defaultRadioStyles = {\n    activeForeground: asCssVariable(radioActiveForeground),\n    activeBackground: asCssVariable(radioActiveBackground),\n    activeBorder: asCssVariable(radioActiveBorder),\n    inactiveForeground: asCssVariable(radioInactiveForeground),\n    inactiveBackground: asCssVariable(radioInactiveBackground),\n    inactiveBorder: asCssVariable(radioInactiveBorder),\n    inactiveHoverBackground: asCssVariable(radioInactiveHoverBackground),\n};\nexport const defaultCheckboxStyles = {\n    checkboxBackground: asCssVariable(checkboxBackground),\n    checkboxBorder: asCssVariable(checkboxBorder),\n    checkboxForeground: asCssVariable(checkboxForeground)\n};\nexport const defaultDialogStyles = {\n    dialogBackground: asCssVariable(editorWidgetBackground),\n    dialogForeground: asCssVariable(editorWidgetForeground),\n    dialogShadow: asCssVariable(widgetShadow),\n    dialogBorder: asCssVariable(contrastBorder),\n    errorIconForeground: asCssVariable(problemsErrorIconForeground),\n    warningIconForeground: asCssVariable(problemsWarningIconForeground),\n    infoIconForeground: asCssVariable(problemsInfoIconForeground),\n    textLinkForeground: asCssVariable(textLinkForeground)\n};\nexport const defaultInputBoxStyles = {\n    inputBackground: asCssVariable(inputBackground),\n    inputForeground: asCssVariable(inputForeground),\n    inputBorder: asCssVariable(inputBorder),\n    inputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n    inputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n    inputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n    inputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n    inputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n    inputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n    inputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n    inputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n    inputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\nexport const defaultFindWidgetStyles = {\n    listFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n    listFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n    listFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n    listFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n    inputBoxStyles: defaultInputBoxStyles,\n    toggleStyles: defaultToggleStyles\n};\nexport const defaultCountBadgeStyles = {\n    badgeBackground: asCssVariable(badgeBackground),\n    badgeForeground: asCssVariable(badgeForeground),\n    badgeBorder: asCssVariable(contrastBorder)\n};\nexport const defaultBreadcrumbsWidgetStyles = {\n    breadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n    breadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n    breadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\nexport const defaultListStyles = {\n    listBackground: undefined,\n    listInactiveFocusForeground: undefined,\n    listFocusBackground: asCssVariable(listFocusBackground),\n    listFocusForeground: asCssVariable(listFocusForeground),\n    listFocusOutline: asCssVariable(listFocusOutline),\n    listActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n    listFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n    listFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n    listInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n    listInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n    listInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n    listInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listDropOverBackground: asCssVariable(listDropOverBackground),\n    listDropBetweenBackground: asCssVariable(listDropBetweenBackground),\n    listSelectionOutline: asCssVariable(activeContrastBorder),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    treeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n    treeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n    treeStickyScrollBackground: undefined,\n    treeStickyScrollBorder: undefined,\n    treeStickyScrollShadow: asCssVariable(scrollbarShadow),\n    tableColumnsBorder: asCssVariable(tableColumnsBorder),\n    tableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\nexport function getListStyles(override) {\n    return overrideStyles(override, defaultListStyles);\n}\nexport const defaultSelectBoxStyles = {\n    selectBackground: asCssVariable(selectBackground),\n    selectListBackground: asCssVariable(selectListBackground),\n    selectForeground: asCssVariable(selectForeground),\n    decoratorRightForeground: asCssVariable(pickerGroupForeground),\n    selectBorder: asCssVariable(selectBorder),\n    focusBorder: asCssVariable(focusBorder),\n    listFocusBackground: asCssVariable(quickInputListFocusBackground),\n    listInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n    listFocusForeground: asCssVariable(quickInputListFocusForeground),\n    listFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    selectListBorder: asCssVariable(editorWidgetBorder),\n    listBackground: undefined,\n    listActiveSelectionBackground: undefined,\n    listActiveSelectionForeground: undefined,\n    listActiveSelectionIconForeground: undefined,\n    listFocusAndSelectionBackground: undefined,\n    listDropOverBackground: undefined,\n    listDropBetweenBackground: undefined,\n    listInactiveSelectionBackground: undefined,\n    listInactiveSelectionForeground: undefined,\n    listInactiveFocusBackground: undefined,\n    listInactiveFocusOutline: undefined,\n    listSelectionOutline: undefined,\n    listFocusAndSelectionForeground: undefined,\n    listFocusAndSelectionOutline: undefined,\n    listInactiveFocusForeground: undefined,\n    tableColumnsBorder: undefined,\n    tableOddRowsBackgroundColor: undefined,\n    treeIndentGuidesStroke: undefined,\n    treeInactiveIndentGuidesStroke: undefined,\n    treeStickyScrollBackground: undefined,\n    treeStickyScrollBorder: undefined,\n    treeStickyScrollShadow: undefined\n};\nexport const defaultMenuStyles = {\n    shadowColor: asCssVariable(widgetShadow),\n    borderColor: asCssVariable(menuBorder),\n    foregroundColor: asCssVariable(menuForeground),\n    backgroundColor: asCssVariable(menuBackground),\n    selectionForegroundColor: asCssVariable(menuSelectionForeground),\n    selectionBackgroundColor: asCssVariable(menuSelectionBackground),\n    selectionBorderColor: asCssVariable(menuSelectionBorder),\n    separatorColor: asCssVariable(menuSeparatorBackground),\n    scrollbarShadow: asCssVariable(scrollbarShadow),\n    scrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n    scrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n    scrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, optionsOrTarget, targetOrPrimaryGroup, primaryGroupOrUndefined) {\n    let target;\n    let primaryGroup;\n    let groups;\n    if (Array.isArray(menu)) {\n        groups = menu;\n        target = optionsOrTarget;\n        primaryGroup = targetOrPrimaryGroup;\n    }\n    else {\n        const options = optionsOrTarget;\n        groups = menu.getActions(options);\n        target = targetOrPrimaryGroup;\n        primaryGroup = primaryGroupOrUndefined;\n    }\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, optionsOrTarget, targetOrPrimaryGroup, primaryGroupOrShouldInlineSubmenu, shouldInlineSubmenuOrUseSeparatorsInPrimaryActions, useSeparatorsInPrimaryActionsOrUndefined) {\n    let target;\n    let primaryGroup;\n    let shouldInlineSubmenu;\n    let useSeparatorsInPrimaryActions;\n    let groups;\n    if (Array.isArray(menu)) {\n        groups = menu;\n        target = optionsOrTarget;\n        primaryGroup = targetOrPrimaryGroup;\n        shouldInlineSubmenu = primaryGroupOrShouldInlineSubmenu;\n        useSeparatorsInPrimaryActions = shouldInlineSubmenuOrUseSeparatorsInPrimaryActions;\n    }\n    else {\n        const options = optionsOrTarget;\n        groups = menu.getActions(options);\n        target = targetOrPrimaryGroup;\n        primaryGroup = primaryGroupOrShouldInlineSubmenu;\n        shouldInlineSubmenu = shouldInlineSubmenuOrUseSeparatorsInPrimaryActions;\n        useSeparatorsInPrimaryActions = useSeparatorsInPrimaryActionsOrUndefined;\n    }\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, _options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: _options?.draggable, keybinding: _options?.keybinding, hoverDelegate: _options?.hoverDelegate });\n        this._options = _options;\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._accessibilityService = _accessibilityService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    async onClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        try {\n            await this.actionRunner.run(this._commandAction, this._context);\n        }\n        catch (err) {\n            this._notificationService.error(err);\n        }\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        if (this._menuItemAction.alt) {\n            let isMouseOver = false;\n            const updateAltState = () => {\n                const wantsAltCommand = !!this._menuItemAction.alt?.enabled &&\n                    (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey ||\n                    (this._altKey.keyStatus.shiftKey && isMouseOver));\n                if (wantsAltCommand !== this._wantsAltCommand) {\n                    this._wantsAltCommand = wantsAltCommand;\n                    this.updateLabel();\n                    this.updateTooltip();\n                    this.updateClass();\n                }\n            };\n            this._register(this._altKey.event(updateAltState));\n            this._register(addDisposableListener(container, 'mouseleave', _ => {\n                isMouseOver = false;\n                updateAltState();\n            }));\n            this._register(addDisposableListener(container, 'mouseenter', _ => {\n                isMouseOver = true;\n                updateAltState();\n            }));\n            updateAltState();\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && this._menuItemAction.alt?.enabled) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url\n            label.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light));\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.style.backgroundImage = '';\n                label.classList.remove('icon');\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService),\n    __param(7, IAccessibilityService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nexport class TextOnlyMenuEntryActionViewItem extends MenuEntryActionViewItem {\n    render(container) {\n        this.options.label = true;\n        this.options.icon = false;\n        super.render(container);\n        container.classList.add('text-only');\n        container.classList.toggle('use-comma', this._options?.useComma ?? false);\n    }\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const kb2 = TextOnlyMenuEntryActionViewItem._symbolPrintEnter(kb);\n            if (this._options?.conversational) {\n                this.label.textContent = localize({ key: 'content2', comment: ['A label with keybindg like \"ESC to dismiss\"'] }, '{1} to {0}', this._action.label, kb2);\n            }\n            else {\n                this.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, kb2);\n            }\n        }\n    }\n    static _symbolPrintEnter(kb) {\n        return kb.getLabel()\n            ?.replace(/\\benter\\b/gi, '\\u23CE')\n            .replace(/\\bEscape\\b/gi, 'Esc');\n    }\n}\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        const dropdownOptions = {\n            ...options,\n            menuAsChild: options?.menuAsChild ?? false,\n            classNames: options?.classNames ?? (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n            keybindingProvider: options?.keybindingProvider ?? (action => _keybindingService.lookupKeybinding(action.id))\n        };\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = options?.persistLastActionId ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = {\n            keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n            ...options,\n            menuAsChild: options?.menuAsChild ?? true,\n            classNames: options?.classNames ?? ['codicon', 'codicon-chevron-down'],\n            actionRunner: options?.actionRunner ?? new ActionRunner(),\n        };\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._register(this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        }));\n    }\n    update(lastAction) {\n        if (this._options?.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            async runAction(action, context) {\n                await action.run(undefined);\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        let defaultActionKeybinding;\n        if (this._options?.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                this._defaultAction.element?.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, { ...options, persistLastActionId: true });\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, getWindow, isAncestor, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.focusToReturn = null;\n        this.lastContainer = null;\n        this.block = null;\n        this.blockDisposable = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = getActiveElement();\n        let menu;\n        const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                this.lastContainer = container;\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    this.blockDisposable?.dispose();\n                    this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                }, defaultMenuStyles);\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                const targetWindow = getWindow(container);\n                menuDisposables.add(addDisposableListener(targetWindow, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(targetWindow, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(targetWindow, e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu?.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                delegate.onHide?.(!!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                this.blockDisposable?.dispose();\n                this.blockDisposable = null;\n                if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n                    this.focusToReturn?.focus();\n                }\n                this.lastContainer = null;\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e, logTelemetry) {\n        if (logTelemetry) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        }\n        this.contextViewService.hideContextView(false);\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createAndFillInContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nlet ContextMenuService = class ContextMenuService extends Disposable {\n    get contextMenuHandler() {\n        if (!this._contextMenuHandler) {\n            this._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n        }\n        return this._contextMenuHandler;\n    }\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super();\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.contextViewService = contextViewService;\n        this.keybindingService = keybindingService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._contextMenuHandler = undefined;\n        this._onDidShowContextMenu = this._store.add(new Emitter());\n        this.onDidShowContextMenu = this._onDidShowContextMenu.event;\n        this._onDidHideContextMenu = this._store.add(new Emitter());\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        delegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n        this.contextMenuHandler.showContextMenu({\n            ...delegate,\n            onHide: (didCancel) => {\n                delegate.onHide?.(didCancel);\n                this._onDidHideContextMenu.fire();\n            }\n        });\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], ContextMenuService);\nexport { ContextMenuService };\nexport var ContextMenuMenuDelegate;\n(function (ContextMenuMenuDelegate) {\n    function is(thing) {\n        return thing && thing.menuId instanceof MenuId;\n    }\n    function transform(delegate, menuService, globalContextKeyService) {\n        if (!is(delegate)) {\n            return delegate;\n        }\n        const { menuId, menuActionOptions, contextKeyService } = delegate;\n        return {\n            ...delegate,\n            getActions: () => {\n                const target = [];\n                if (menuId) {\n                    const menu = menuService.getMenuActions(menuId, contextKeyService ?? globalContextKeyService, menuActionOptions);\n                    createAndFillInContextMenuActions(menu, target);\n                }\n                if (!delegate.getActions) {\n                    return target;\n                }\n                else {\n                    return Separator.join(delegate.getActions(), target);\n                }\n            }\n        };\n    }\n    ContextMenuMenuDelegate.transform = transform;\n})(ContextMenuMenuDelegate || (ContextMenuMenuDelegate = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var EditorOpenSource;\n(function (EditorOpenSource) {\n    /**\n     * Default: the editor is opening via a programmatic call\n     * to the editor service API.\n     */\n    EditorOpenSource[EditorOpenSource[\"API\"] = 0] = \"API\";\n    /**\n     * Indicates that a user action triggered the opening, e.g.\n     * via mouse or keyboard use.\n     */\n    EditorOpenSource[EditorOpenSource[\"USER\"] = 1] = \"USER\";\n})(EditorOpenSource || (EditorOpenSource = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n(function (MarkerSeverity) {\n    function compare(a, b) {\n        return b - a;\n    }\n    MarkerSeverity.compare = compare;\n    const _displayStrings = Object.create(null);\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n    function toString(a) {\n        return _displayStrings[a] || '';\n    }\n    MarkerSeverity.toString = toString;\n    function fromSeverity(severity) {\n        switch (severity) {\n            case Severity.Error: return MarkerSeverity.Error;\n            case Severity.Warning: return MarkerSeverity.Warning;\n            case Severity.Info: return MarkerSeverity.Info;\n            case Severity.Ignore: return MarkerSeverity.Hint;\n        }\n    }\n    MarkerSeverity.fromSeverity = fromSeverity;\n    function toSeverity(severity) {\n        switch (severity) {\n            case MarkerSeverity.Error: return Severity.Error;\n            case MarkerSeverity.Warning: return Severity.Warning;\n            case MarkerSeverity.Info: return Severity.Info;\n            case MarkerSeverity.Hint: return Severity.Ignore;\n        }\n    }\n    MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var IMarkerData;\n(function (IMarkerData) {\n    const emptyString = '';\n    function makeKey(markerData) {\n        return makeKeyOptionalMessage(markerData, true);\n    }\n    IMarkerData.makeKey = makeKey;\n    function makeKeyOptionalMessage(markerData, useMessage) {\n        const result = [emptyString];\n        if (markerData.source) {\n            result.push(markerData.source.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.code) {\n            if (typeof markerData.code === 'string') {\n                result.push(markerData.code.replace('¦', '\\\\¦'));\n            }\n            else {\n                result.push(markerData.code.value.replace('¦', '\\\\¦'));\n            }\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.severity !== undefined && markerData.severity !== null) {\n            result.push(MarkerSeverity.toString(markerData.severity));\n        }\n        else {\n            result.push(emptyString);\n        }\n        // Modifed to not include the message as part of the marker key to work around\n        // https://github.com/microsoft/vscode/issues/77475\n        if (markerData.message && useMessage) {\n            result.push(markerData.message.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n            result.push(markerData.startLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n            result.push(markerData.startColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n            result.push(markerData.endLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n            result.push(markerData.endColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        result.push(emptyString);\n        return result.join('¦');\n    }\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\nexport const IMarkerService = createDecorator('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport var DefaultQuickAccessFilterValue;\n(function (DefaultQuickAccessFilterValue) {\n    /**\n     * Keep the value as it is given to quick access.\n     */\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"PRESERVE\"] = 0] = \"PRESERVE\";\n    /**\n     * Use the value that was used last time something was accepted from the picker.\n     */\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"LAST\"] = 1] = \"LAST\";\n})(DefaultQuickAccessFilterValue || (DefaultQuickAccessFilterValue = {}));\nexport const Extensions = {\n    Quickaccess: 'workbench.contributions.quickaccess'\n};\nexport class QuickAccessRegistry {\n    constructor() {\n        this.providers = [];\n        this.defaultProvider = undefined;\n    }\n    registerQuickAccessProvider(provider) {\n        // Extract the default provider when no prefix is present\n        if (provider.prefix.length === 0) {\n            this.defaultProvider = provider;\n        }\n        else {\n            this.providers.push(provider);\n        }\n        // sort the providers by decreasing prefix length, such that longer\n        // prefixes take priority: 'ext' vs 'ext install' - the latter should win\n        this.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\n        return toDisposable(() => {\n            this.providers.splice(this.providers.indexOf(provider), 1);\n            if (this.defaultProvider === provider) {\n                this.defaultProvider = undefined;\n            }\n        });\n    }\n    getQuickAccessProviders() {\n        return coalesce([this.defaultProvider, ...this.providers]);\n    }\n    getQuickAccessProvider(prefix) {\n        const result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\n        return result || this.defaultProvider;\n    }\n}\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const NO_KEY_MODS = { ctrlCmd: false, alt: false };\nexport var QuickInputHideReason;\n(function (QuickInputHideReason) {\n    /**\n     * Focus moved away from the quick input.\n     */\n    QuickInputHideReason[QuickInputHideReason[\"Blur\"] = 1] = \"Blur\";\n    /**\n     * An explicit user gesture, e.g. pressing Escape key.\n     */\n    QuickInputHideReason[QuickInputHideReason[\"Gesture\"] = 2] = \"Gesture\";\n    /**\n     * Anything else.\n     */\n    QuickInputHideReason[QuickInputHideReason[\"Other\"] = 3] = \"Other\";\n})(QuickInputHideReason || (QuickInputHideReason = {}));\n/**\n * Represents the activation behavior for items in a quick input. This means which item will be\n * \"active\" (aka focused).\n */\nexport var ItemActivation;\n(function (ItemActivation) {\n    /**\n     * No item will be active.\n     */\n    ItemActivation[ItemActivation[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * First item will be active.\n     */\n    ItemActivation[ItemActivation[\"FIRST\"] = 1] = \"FIRST\";\n    /**\n     * Second item will be active.\n     */\n    ItemActivation[ItemActivation[\"SECOND\"] = 2] = \"SECOND\";\n    /**\n     * Last item will be active.\n     */\n    ItemActivation[ItemActivation[\"LAST\"] = 3] = \"LAST\";\n})(ItemActivation || (ItemActivation = {}));\n/**\n * Represents the focus options for a quick pick.\n */\nexport var QuickPickFocus;\n(function (QuickPickFocus) {\n    /**\n     * Focus the first item in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"First\"] = 1] = \"First\";\n    /**\n     * Focus the second item in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"Second\"] = 2] = \"Second\";\n    /**\n     * Focus the last item in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"Last\"] = 3] = \"Last\";\n    /**\n     * Focus the next item in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"Next\"] = 4] = \"Next\";\n    /**\n     * Focus the previous item in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"Previous\"] = 5] = \"Previous\";\n    /**\n     * Focus the next page in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"NextPage\"] = 6] = \"NextPage\";\n    /**\n     * Focus the previous page in the list.\n     */\n    QuickPickFocus[QuickPickFocus[\"PreviousPage\"] = 7] = \"PreviousPage\";\n    /**\n     * Focus the first item under the next separator.\n     */\n    QuickPickFocus[QuickPickFocus[\"NextSeparator\"] = 8] = \"NextSeparator\";\n    /**\n     * Focus the first item under the current separator.\n     */\n    QuickPickFocus[QuickPickFocus[\"PreviousSeparator\"] = 9] = \"PreviousSeparator\";\n})(QuickPickFocus || (QuickPickFocus = {}));\nexport var QuickInputButtonLocation;\n(function (QuickInputButtonLocation) {\n    /**\n     * In the title bar.\n     */\n    QuickInputButtonLocation[QuickInputButtonLocation[\"Title\"] = 1] = \"Title\";\n    /**\n     * To the right of the input box.\n     */\n    QuickInputButtonLocation[QuickInputButtonLocation[\"Inline\"] = 2] = \"Inline\";\n})(QuickInputButtonLocation || (QuickInputButtonLocation = {}));\nexport class QuickPickItemScorerAccessor {\n    constructor(options) {\n        this.options = options;\n    }\n}\nexport const quickPickItemScorerAccessor = new QuickPickItemScorerAccessor();\n//#endregion\nexport const IQuickInputService = createDecorator('quickInputService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { DefaultQuickAccessFilterValue, Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet QuickAccessController = class QuickAccessController extends Disposable {\n    constructor(quickInputService, instantiationService) {\n        super();\n        this.quickInputService = quickInputService;\n        this.instantiationService = instantiationService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n        this.mapProviderToDescriptor = new Map();\n        this.lastAcceptedPickerValues = new Map();\n        this.visibleQuickAccess = undefined;\n    }\n    show(value = '', options) {\n        this.doShowOrPick(value, false, options);\n    }\n    doShowOrPick(value, pick, options) {\n        // Find provider for the value to show\n        const [provider, descriptor] = this.getOrInstantiateProvider(value, options?.enabledProviderPrefixes);\n        // Return early if quick access is already showing on that same prefix\n        const visibleQuickAccess = this.visibleQuickAccess;\n        const visibleDescriptor = visibleQuickAccess?.descriptor;\n        if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n            // Apply value only if it is more specific than the prefix\n            // from the provider and we are not instructed to preserve\n            if (value !== descriptor.prefix && !options?.preserveValue) {\n                visibleQuickAccess.picker.value = value;\n            }\n            // Always adjust selection\n            this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n            return;\n        }\n        // Rewrite the filter value based on certain rules unless disabled\n        if (descriptor && !options?.preserveValue) {\n            let newValue = undefined;\n            // If we have a visible provider with a value, take it's filter value but\n            // rewrite to new provider prefix in case they differ\n            if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n                const newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n                if (newValueCandidateWithoutPrefix) {\n                    newValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\n                }\n            }\n            // Otherwise, take a default value as instructed\n            if (!newValue) {\n                const defaultFilterValue = provider?.defaultFilterValue;\n                if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n                    newValue = this.lastAcceptedPickerValues.get(descriptor);\n                }\n                else if (typeof defaultFilterValue === 'string') {\n                    newValue = `${descriptor.prefix}${defaultFilterValue}`;\n                }\n            }\n            if (typeof newValue === 'string') {\n                value = newValue;\n            }\n        }\n        // Store the existing selection if there was one.\n        const visibleSelection = visibleQuickAccess?.picker?.valueSelection;\n        const visibleValue = visibleQuickAccess?.picker?.value;\n        // Create a picker for the provider to use with the initial value\n        // and adjust the filtering to exclude the prefix from filtering\n        const disposables = new DisposableStore();\n        const picker = disposables.add(this.quickInputService.createQuickPick({ useSeparators: true }));\n        picker.value = value;\n        this.adjustValueSelection(picker, descriptor, options);\n        picker.placeholder = options?.placeholder ?? descriptor?.placeholder;\n        picker.quickNavigate = options?.quickNavigateConfiguration;\n        picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n        if (typeof options?.itemActivation === 'number' || options?.quickNavigateConfiguration) {\n            picker.itemActivation = options?.itemActivation ?? ItemActivation.SECOND /* quick nav is always second */;\n        }\n        picker.contextKey = descriptor?.contextKey;\n        picker.filterValue = (value) => value.substring(descriptor ? descriptor.prefix.length : 0);\n        // Pick mode: setup a promise that can be resolved\n        // with the selected items and prevent execution\n        let pickPromise = undefined;\n        if (pick) {\n            pickPromise = new DeferredPromise();\n            disposables.add(Event.once(picker.onWillAccept)(e => {\n                e.veto();\n                picker.hide();\n            }));\n        }\n        // Register listeners\n        disposables.add(this.registerPickerListeners(picker, provider, descriptor, value, options));\n        // Ask provider to fill the picker as needed if we have one\n        // and pass over a cancellation token that will indicate when\n        // the picker is hiding without a pick being made.\n        const cts = disposables.add(new CancellationTokenSource());\n        if (provider) {\n            disposables.add(provider.provide(picker, cts.token, options?.providerOptions));\n        }\n        // Finally, trigger disposal and cancellation when the picker\n        // hides depending on items selected or not.\n        Event.once(picker.onDidHide)(() => {\n            if (picker.selectedItems.length === 0) {\n                cts.cancel();\n            }\n            // Start to dispose once picker hides\n            disposables.dispose();\n            // Resolve pick promise with selected items\n            pickPromise?.complete(picker.selectedItems.slice(0));\n        });\n        // Finally, show the picker. This is important because a provider\n        // may not call this and then our disposables would leak that rely\n        // on the onDidHide event.\n        picker.show();\n        // If the previous picker had a selection and the value is unchanged, we should set that in the new picker.\n        if (visibleSelection && visibleValue === value) {\n            picker.valueSelection = visibleSelection;\n        }\n        // Pick mode: return with promise\n        if (pick) {\n            return pickPromise?.p;\n        }\n    }\n    adjustValueSelection(picker, descriptor, options) {\n        let valueSelection;\n        // Preserve: just always put the cursor at the end\n        if (options?.preserveValue) {\n            valueSelection = [picker.value.length, picker.value.length];\n        }\n        // Otherwise: select the value up until the prefix\n        else {\n            valueSelection = [descriptor?.prefix.length ?? 0, picker.value.length];\n        }\n        picker.valueSelection = valueSelection;\n    }\n    registerPickerListeners(picker, provider, descriptor, value, options) {\n        const disposables = new DisposableStore();\n        // Remember as last visible picker and clean up once picker get's disposed\n        const visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\n        disposables.add(toDisposable(() => {\n            if (visibleQuickAccess === this.visibleQuickAccess) {\n                this.visibleQuickAccess = undefined;\n            }\n        }));\n        // Whenever the value changes, check if the provider has\n        // changed and if so - re-create the picker from the beginning\n        disposables.add(picker.onDidChangeValue(value => {\n            const [providerForValue] = this.getOrInstantiateProvider(value, options?.enabledProviderPrefixes);\n            if (providerForValue !== provider) {\n                this.show(value, {\n                    enabledProviderPrefixes: options?.enabledProviderPrefixes,\n                    // do not rewrite value from user typing!\n                    preserveValue: true,\n                    // persist the value of the providerOptions from the original showing\n                    providerOptions: options?.providerOptions\n                });\n            }\n            else {\n                visibleQuickAccess.value = value; // remember the value in our visible one\n            }\n        }));\n        // Remember picker input for future use when accepting\n        if (descriptor) {\n            disposables.add(picker.onDidAccept(() => {\n                this.lastAcceptedPickerValues.set(descriptor, picker.value);\n            }));\n        }\n        return disposables;\n    }\n    getOrInstantiateProvider(value, enabledProviderPrefixes) {\n        const providerDescriptor = this.registry.getQuickAccessProvider(value);\n        if (!providerDescriptor || enabledProviderPrefixes && !enabledProviderPrefixes?.includes(providerDescriptor.prefix)) {\n            return [undefined, undefined];\n        }\n        let provider = this.mapProviderToDescriptor.get(providerDescriptor);\n        if (!provider) {\n            provider = this.instantiationService.createInstance(providerDescriptor.ctor);\n            this.mapProviderToDescriptor.set(providerDescriptor, provider);\n        }\n        return [provider, providerDescriptor];\n    }\n};\nQuickAccessController = __decorate([\n    __param(0, IQuickInputService),\n    __param(1, IInstantiationService)\n], QuickAccessController);\nexport { QuickAccessController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { Event } from '../../../base/common/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Gesture, EventType as GestureEventType } from '../../../base/browser/touch.js';\nimport { renderLabelWithIcons } from '../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { IdGenerator } from '../../../base/common/idGenerator.js';\nimport { parseLinkedText } from '../../../base/common/linkedText.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls.js';\nconst iconPathToClass = {};\nconst iconClassGenerator = new IdGenerator('quick-input-button-icon-');\nfunction getIconClass(iconPath) {\n    if (!iconPath) {\n        return undefined;\n    }\n    let iconClass;\n    const key = iconPath.dark.toString();\n    if (iconPathToClass[key]) {\n        iconClass = iconPathToClass[key];\n    }\n    else {\n        iconClass = iconClassGenerator.nextId();\n        dom.createCSSRule(`.${iconClass}, .hc-light .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.light || iconPath.dark)}`);\n        dom.createCSSRule(`.vs-dark .${iconClass}, .hc-black .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.dark)}`);\n        iconPathToClass[key] = iconClass;\n    }\n    return iconClass;\n}\nexport function quickInputButtonToAction(button, id, run) {\n    let cssClasses = button.iconClass || getIconClass(button.iconPath);\n    if (button.alwaysVisible) {\n        cssClasses = cssClasses ? `${cssClasses} always-visible` : 'always-visible';\n    }\n    return {\n        id,\n        label: '',\n        tooltip: button.tooltip || '',\n        class: cssClasses,\n        enabled: true,\n        run\n    };\n}\nexport function renderQuickInputDescription(description, container, actionHandler) {\n    dom.reset(container);\n    const parsed = parseLinkedText(description);\n    let tabIndex = 0;\n    for (const node of parsed.nodes) {\n        if (typeof node === 'string') {\n            container.append(...renderLabelWithIcons(node));\n        }\n        else {\n            let title = node.title;\n            if (!title && node.href.startsWith('command:')) {\n                title = localize('executeCommand', \"Click to execute command '{0}'\", node.href.substring('command:'.length));\n            }\n            else if (!title) {\n                title = node.href;\n            }\n            const anchor = dom.$('a', { href: node.href, title, tabIndex: tabIndex++ }, node.label);\n            anchor.style.textDecoration = 'underline';\n            const handleOpen = (e) => {\n                if (dom.isEventLike(e)) {\n                    dom.EventHelper.stop(e, true);\n                }\n                actionHandler.callback(node.href);\n            };\n            const onClick = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.CLICK)).event;\n            const onKeydown = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.KEY_DOWN)).event;\n            const onSpaceOrEnter = Event.chain(onKeydown, $ => $.filter(e => {\n                const event = new StandardKeyboardEvent(e);\n                return event.equals(10 /* KeyCode.Space */) || event.equals(3 /* KeyCode.Enter */);\n            }));\n            actionHandler.disposables.add(Gesture.addTarget(anchor));\n            const onTap = actionHandler.disposables.add(new DomEmitter(anchor, GestureEventType.Tap)).event;\n            Event.any(onClick, onTap, onSpaceOrEnter)(handleOpen, null, actionHandler.disposables);\n            container.appendChild(anchor);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Toggle } from '../../../base/browser/ui/toggle/toggle.js';\nimport { equals } from '../../../base/common/arrays.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Emitter, EventBufferer } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputButtonLocation, QuickInputHideReason, QuickPickFocus } from '../common/quickInput.js';\nimport { quickInputButtonToAction, renderQuickInputDescription } from './quickInputUtils.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../hover/browser/hover.js';\nimport { ContextKeyExpr, RawContextKey } from '../../contextkey/common/contextkey.js';\nexport const inQuickInputContextKeyValue = 'inQuickInput';\nexport const InQuickInputContextKey = new RawContextKey(inQuickInputContextKeyValue, false, localize('inQuickInput', \"Whether keyboard focus is inside the quick input control\"));\nexport const inQuickInputContext = ContextKeyExpr.has(inQuickInputContextKeyValue);\nexport const quickInputTypeContextKeyValue = 'quickInputType';\nexport const QuickInputTypeContextKey = new RawContextKey(quickInputTypeContextKeyValue, undefined, localize('quickInputType', \"The type of the currently visible quick input\"));\nexport const endOfQuickInputBoxContextKeyValue = 'cursorAtEndOfQuickInputBox';\nexport const EndOfQuickInputBoxContextKey = new RawContextKey(endOfQuickInputBoxContextKeyValue, false, localize('cursorAtEndOfQuickInputBox', \"Whether the cursor in the quick input is at the end of the input box\"));\nexport const endOfQuickInputBoxContext = ContextKeyExpr.has(endOfQuickInputBoxContextKeyValue);\nexport const backButton = {\n    iconClass: ThemeIcon.asClassName(Codicon.quickInputBack),\n    tooltip: localize('quickInput.back', \"Back\"),\n    handle: -1 // TODO\n};\nclass QuickInput extends Disposable {\n    static { this.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\"); }\n    constructor(ui) {\n        super();\n        this.ui = ui;\n        this._widgetUpdated = false;\n        this.visible = false;\n        this._enabled = true;\n        this._busy = false;\n        this._ignoreFocusOut = false;\n        this._leftButtons = [];\n        this._rightButtons = [];\n        this._inlineButtons = [];\n        this.buttonsUpdated = false;\n        this._toggles = [];\n        this.togglesUpdated = false;\n        this.noValidationMessage = QuickInput.noPromptMessage;\n        this._severity = Severity.Ignore;\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.onDidHideEmitter = this._register(new Emitter());\n        this.onWillHideEmitter = this._register(new Emitter());\n        this.onDisposeEmitter = this._register(new Emitter());\n        this.visibleDisposables = this._register(new DisposableStore());\n        this.onDidHide = this.onDidHideEmitter.event;\n    }\n    get title() {\n        return this._title;\n    }\n    set title(title) {\n        this._title = title;\n        this.update();\n    }\n    get description() {\n        return this._description;\n    }\n    set description(description) {\n        this._description = description;\n        this.update();\n    }\n    get step() {\n        return this._steps;\n    }\n    set step(step) {\n        this._steps = step;\n        this.update();\n    }\n    get totalSteps() {\n        return this._totalSteps;\n    }\n    set totalSteps(totalSteps) {\n        this._totalSteps = totalSteps;\n        this.update();\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        this.update();\n    }\n    get contextKey() {\n        return this._contextKey;\n    }\n    set contextKey(contextKey) {\n        this._contextKey = contextKey;\n        this.update();\n    }\n    get busy() {\n        return this._busy;\n    }\n    set busy(busy) {\n        this._busy = busy;\n        this.update();\n    }\n    get ignoreFocusOut() {\n        return this._ignoreFocusOut;\n    }\n    set ignoreFocusOut(ignoreFocusOut) {\n        const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n        this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n        if (shouldUpdate) {\n            this.update();\n        }\n    }\n    get titleButtons() {\n        return this._leftButtons.length\n            ? [...this._leftButtons, this._rightButtons]\n            : this._rightButtons;\n    }\n    get buttons() {\n        return [\n            ...this._leftButtons,\n            ...this._rightButtons,\n            ...this._inlineButtons\n        ];\n    }\n    set buttons(buttons) {\n        this._leftButtons = buttons.filter(b => b === backButton);\n        this._rightButtons = buttons.filter(b => b !== backButton && b.location !== QuickInputButtonLocation.Inline);\n        this._inlineButtons = buttons.filter(b => b.location === QuickInputButtonLocation.Inline);\n        this.buttonsUpdated = true;\n        this.update();\n    }\n    get toggles() {\n        return this._toggles;\n    }\n    set toggles(toggles) {\n        this._toggles = toggles ?? [];\n        this.togglesUpdated = true;\n        this.update();\n    }\n    get validationMessage() {\n        return this._validationMessage;\n    }\n    set validationMessage(validationMessage) {\n        this._validationMessage = validationMessage;\n        this.update();\n    }\n    get severity() {\n        return this._severity;\n    }\n    set severity(severity) {\n        this._severity = severity;\n        this.update();\n    }\n    show() {\n        if (this.visible) {\n            return;\n        }\n        this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n            if (this.buttons.indexOf(button) !== -1) {\n                this.onDidTriggerButtonEmitter.fire(button);\n            }\n        }));\n        this.ui.show(this);\n        // update properties in the controller that get reset in the ui.show() call\n        this.visible = true;\n        // This ensures the message/prompt gets rendered\n        this._lastValidationMessage = undefined;\n        // This ensures the input box has the right severity applied\n        this._lastSeverity = undefined;\n        if (this.buttons.length) {\n            // if there are buttons, the ui.show() clears them out of the UI so we should\n            // rerender them.\n            this.buttonsUpdated = true;\n        }\n        if (this.toggles.length) {\n            // if there are toggles, the ui.show() clears them out of the UI so we should\n            // rerender them.\n            this.togglesUpdated = true;\n        }\n        this.update();\n    }\n    hide() {\n        if (!this.visible) {\n            return;\n        }\n        this.ui.hide();\n    }\n    didHide(reason = QuickInputHideReason.Other) {\n        this.visible = false;\n        this.visibleDisposables.clear();\n        this.onDidHideEmitter.fire({ reason });\n    }\n    willHide(reason = QuickInputHideReason.Other) {\n        this.onWillHideEmitter.fire({ reason });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        const title = this.getTitle();\n        if (title && this.ui.title.textContent !== title) {\n            this.ui.title.textContent = title;\n        }\n        else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n            this.ui.title.innerText = '\\u00a0';\n        }\n        const description = this.getDescription();\n        if (this.ui.description1.textContent !== description) {\n            this.ui.description1.textContent = description;\n        }\n        if (this.ui.description2.textContent !== description) {\n            this.ui.description2.textContent = description;\n        }\n        if (this._widgetUpdated) {\n            this._widgetUpdated = false;\n            if (this._widget) {\n                dom.reset(this.ui.widget, this._widget);\n            }\n            else {\n                dom.reset(this.ui.widget);\n            }\n        }\n        if (this.busy && !this.busyDelay) {\n            this.busyDelay = new TimeoutTimer();\n            this.busyDelay.setIfNotSet(() => {\n                if (this.visible) {\n                    this.ui.progressBar.infinite();\n                }\n            }, 800);\n        }\n        if (!this.busy && this.busyDelay) {\n            this.ui.progressBar.stop();\n            this.busyDelay.cancel();\n            this.busyDelay = undefined;\n        }\n        if (this.buttonsUpdated) {\n            this.buttonsUpdated = false;\n            this.ui.leftActionBar.clear();\n            const leftButtons = this._leftButtons\n                .map((button, index) => quickInputButtonToAction(button, `id-${index}`, async () => this.onDidTriggerButtonEmitter.fire(button)));\n            this.ui.leftActionBar.push(leftButtons, { icon: true, label: false });\n            this.ui.rightActionBar.clear();\n            const rightButtons = this._rightButtons\n                .map((button, index) => quickInputButtonToAction(button, `id-${index}`, async () => this.onDidTriggerButtonEmitter.fire(button)));\n            this.ui.rightActionBar.push(rightButtons, { icon: true, label: false });\n            this.ui.inlineActionBar.clear();\n            const inlineButtons = this._inlineButtons\n                .map((button, index) => quickInputButtonToAction(button, `id-${index}`, async () => this.onDidTriggerButtonEmitter.fire(button)));\n            this.ui.inlineActionBar.push(inlineButtons, { icon: true, label: false });\n        }\n        if (this.togglesUpdated) {\n            this.togglesUpdated = false;\n            // HACK: Filter out toggles here that are not concrete Toggle objects. This is to workaround\n            // a layering issue as quick input's interface is in common but Toggle is in browser and\n            // it requires a HTMLElement on its interface\n            const concreteToggles = this.toggles?.filter(opts => opts instanceof Toggle) ?? [];\n            this.ui.inputBox.toggles = concreteToggles;\n        }\n        this.ui.ignoreFocusOut = this.ignoreFocusOut;\n        this.ui.setEnabled(this.enabled);\n        this.ui.setContextKey(this.contextKey);\n        const validationMessage = this.validationMessage || this.noValidationMessage;\n        if (this._lastValidationMessage !== validationMessage) {\n            this._lastValidationMessage = validationMessage;\n            dom.reset(this.ui.message);\n            renderQuickInputDescription(validationMessage, this.ui.message, {\n                callback: (content) => {\n                    this.ui.linkOpenerDelegate(content);\n                },\n                disposables: this.visibleDisposables,\n            });\n        }\n        if (this._lastSeverity !== this.severity) {\n            this._lastSeverity = this.severity;\n            this.showMessageDecoration(this.severity);\n        }\n    }\n    getTitle() {\n        if (this.title && this.step) {\n            return `${this.title} (${this.getSteps()})`;\n        }\n        if (this.title) {\n            return this.title;\n        }\n        if (this.step) {\n            return this.getSteps();\n        }\n        return '';\n    }\n    getDescription() {\n        return this.description || '';\n    }\n    getSteps() {\n        if (this.step && this.totalSteps) {\n            return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n        }\n        if (this.step) {\n            return String(this.step);\n        }\n        return '';\n    }\n    showMessageDecoration(severity) {\n        this.ui.inputBox.showDecoration(severity);\n        if (severity !== Severity.Ignore) {\n            const styles = this.ui.inputBox.stylesForType(severity);\n            this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n            this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n            this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n            this.ui.message.style.marginBottom = '-2px';\n        }\n        else {\n            this.ui.message.style.color = '';\n            this.ui.message.style.backgroundColor = '';\n            this.ui.message.style.border = '';\n            this.ui.message.style.marginBottom = '';\n        }\n    }\n    dispose() {\n        this.hide();\n        this.onDisposeEmitter.fire();\n        super.dispose();\n    }\n}\nexport class QuickPick extends QuickInput {\n    constructor() {\n        super(...arguments);\n        this._value = '';\n        this.onDidChangeValueEmitter = this._register(new Emitter());\n        this.onWillAcceptEmitter = this._register(new Emitter());\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this._items = [];\n        this.itemsUpdated = false;\n        this._canSelectMany = false;\n        this._canAcceptInBackground = false;\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._matchOnLabelMode = 'fuzzy';\n        this._sortByLabel = true;\n        this._keepScrollPosition = false;\n        this._itemActivation = ItemActivation.FIRST;\n        this._activeItems = [];\n        this.activeItemsUpdated = false;\n        this.activeItemsToConfirm = [];\n        this.onDidChangeActiveEmitter = this._register(new Emitter());\n        this._selectedItems = [];\n        this.selectedItemsUpdated = false;\n        this.selectedItemsToConfirm = [];\n        this.onDidChangeSelectionEmitter = this._register(new Emitter());\n        this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n        this.onDidTriggerSeparatorButtonEmitter = this._register(new Emitter());\n        this.valueSelectionUpdated = true;\n        this._ok = 'default';\n        this._customButton = false;\n        this._focusEventBufferer = new EventBufferer();\n        this.type = \"quickPick\" /* QuickInputType.QuickPick */;\n        this.filterValue = (value) => value;\n        this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n        this.onWillAccept = this.onWillAcceptEmitter.event;\n        this.onDidAccept = this.onDidAcceptEmitter.event;\n        this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n        this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n        this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n        this.onDidTriggerSeparatorButton = this.onDidTriggerSeparatorButtonEmitter.event;\n    }\n    static { this.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\"); }\n    get quickNavigate() {\n        return this._quickNavigate;\n    }\n    set quickNavigate(quickNavigate) {\n        this._quickNavigate = quickNavigate;\n        this.update();\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.doSetValue(value);\n    }\n    doSetValue(value, skipUpdate) {\n        if (this._value !== value) {\n            this._value = value;\n            if (!skipUpdate) {\n                this.update();\n            }\n            if (this.visible) {\n                const didFilter = this.ui.list.filter(this.filterValue(this._value));\n                if (didFilter) {\n                    this.trySelectFirst();\n                }\n            }\n            this.onDidChangeValueEmitter.fire(this._value);\n        }\n    }\n    set ariaLabel(ariaLabel) {\n        this._ariaLabel = ariaLabel;\n        this.update();\n    }\n    get ariaLabel() {\n        return this._ariaLabel;\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.update();\n    }\n    get items() {\n        return this._items;\n    }\n    get scrollTop() {\n        return this.ui.list.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.ui.list.scrollTop = scrollTop;\n    }\n    set items(items) {\n        this._items = items;\n        this.itemsUpdated = true;\n        this.update();\n    }\n    get canSelectMany() {\n        return this._canSelectMany;\n    }\n    set canSelectMany(canSelectMany) {\n        this._canSelectMany = canSelectMany;\n        this.update();\n    }\n    get canAcceptInBackground() {\n        return this._canAcceptInBackground;\n    }\n    set canAcceptInBackground(canAcceptInBackground) {\n        this._canAcceptInBackground = canAcceptInBackground;\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(matchOnDescription) {\n        this._matchOnDescription = matchOnDescription;\n        this.update();\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(matchOnDetail) {\n        this._matchOnDetail = matchOnDetail;\n        this.update();\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(matchOnLabel) {\n        this._matchOnLabel = matchOnLabel;\n        this.update();\n    }\n    get matchOnLabelMode() {\n        return this._matchOnLabelMode;\n    }\n    set matchOnLabelMode(matchOnLabelMode) {\n        this._matchOnLabelMode = matchOnLabelMode;\n        this.update();\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(sortByLabel) {\n        this._sortByLabel = sortByLabel;\n        this.update();\n    }\n    get keepScrollPosition() {\n        return this._keepScrollPosition;\n    }\n    set keepScrollPosition(keepScrollPosition) {\n        this._keepScrollPosition = keepScrollPosition;\n    }\n    get itemActivation() {\n        return this._itemActivation;\n    }\n    set itemActivation(itemActivation) {\n        this._itemActivation = itemActivation;\n    }\n    get activeItems() {\n        return this._activeItems;\n    }\n    set activeItems(activeItems) {\n        this._activeItems = activeItems;\n        this.activeItemsUpdated = true;\n        this.update();\n    }\n    get selectedItems() {\n        return this._selectedItems;\n    }\n    set selectedItems(selectedItems) {\n        this._selectedItems = selectedItems;\n        this.selectedItemsUpdated = true;\n        this.update();\n    }\n    get keyMods() {\n        if (this._quickNavigate) {\n            // Disable keyMods when quick navigate is enabled\n            // because in this model the interaction is purely\n            // keyboard driven and Ctrl/Alt are typically\n            // pressed and hold during this interaction.\n            return NO_KEY_MODS;\n        }\n        return this.ui.keyMods;\n    }\n    get valueSelection() {\n        const selection = this.ui.inputBox.getSelection();\n        if (!selection) {\n            return undefined;\n        }\n        return [selection.start, selection.end];\n    }\n    set valueSelection(valueSelection) {\n        this._valueSelection = valueSelection;\n        this.valueSelectionUpdated = true;\n        this.update();\n    }\n    get customButton() {\n        return this._customButton;\n    }\n    set customButton(showCustomButton) {\n        this._customButton = showCustomButton;\n        this.update();\n    }\n    get customLabel() {\n        return this._customButtonLabel;\n    }\n    set customLabel(label) {\n        this._customButtonLabel = label;\n        this.update();\n    }\n    get customHover() {\n        return this._customButtonHover;\n    }\n    set customHover(hover) {\n        this._customButtonHover = hover;\n        this.update();\n    }\n    get ok() {\n        return this._ok;\n    }\n    set ok(showOkButton) {\n        this._ok = showOkButton;\n        this.update();\n    }\n    get hideInput() {\n        return !!this._hideInput;\n    }\n    set hideInput(hideInput) {\n        this._hideInput = hideInput;\n        this.update();\n    }\n    trySelectFirst() {\n        if (!this.canSelectMany) {\n            this.ui.list.focus(QuickPickFocus.First);\n        }\n    }\n    show() {\n        if (!this.visible) {\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n                this.doSetValue(value, true /* skip update since this originates from the UI */);\n            }));\n            this.visibleDisposables.add(this.ui.onDidAccept(() => {\n                if (this.canSelectMany) {\n                    // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n                    // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n                    // `.selectedItems` is up to date.\n                    if (!this.ui.list.getCheckedElements().length) {\n                        this._selectedItems = [];\n                        this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    }\n                }\n                else if (this.activeItems[0]) {\n                    // For single-select, we set `selectedItems` to the item that was accepted.\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                }\n                this.handleAccept(false);\n            }));\n            this.visibleDisposables.add(this.ui.onDidCustom(() => {\n                this.onDidCustomEmitter.fire();\n            }));\n            this.visibleDisposables.add(this._focusEventBufferer.wrapEvent(this.ui.list.onDidChangeFocus, \n            // Only fire the last event\n            (_, e) => e)(focusedItems => {\n                if (this.activeItemsUpdated) {\n                    return; // Expect another event.\n                }\n                if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._activeItems = focusedItems;\n                this.onDidChangeActiveEmitter.fire(focusedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\n                if (this.canSelectMany) {\n                    if (selectedItems.length) {\n                        this.ui.list.setSelectedElements([]);\n                    }\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = selectedItems;\n                this.onDidChangeSelectionEmitter.fire(selectedItems);\n                if (selectedItems.length) {\n                    this.handleAccept(dom.isMouseEvent(event) && event.button === 1 /* mouse middle click */);\n                }\n            }));\n            this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n                if (!this.canSelectMany || !this.visible) {\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = checkedItems;\n                this.onDidChangeSelectionEmitter.fire(checkedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n            this.visibleDisposables.add(this.ui.list.onSeparatorButtonTriggered(event => this.onDidTriggerSeparatorButtonEmitter.fire(event)));\n            this.visibleDisposables.add(this.registerQuickNavigation());\n            this.valueSelectionUpdated = true;\n        }\n        super.show(); // TODO: Why have show() bubble up while update() trickles down?\n    }\n    handleAccept(inBackground) {\n        // Figure out veto via `onWillAccept` event\n        let veto = false;\n        this.onWillAcceptEmitter.fire({ veto: () => veto = true });\n        // Continue with `onDidAccept` if no veto\n        if (!veto) {\n            this.onDidAcceptEmitter.fire({ inBackground });\n        }\n    }\n    registerQuickNavigation() {\n        return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n            if (this.canSelectMany || !this._quickNavigate) {\n                return;\n            }\n            const keyboardEvent = new StandardKeyboardEvent(e);\n            const keyCode = keyboardEvent.keyCode;\n            // Select element when keys are pressed that signal it\n            const quickNavKeys = this._quickNavigate.keybindings;\n            const wasTriggerKeyPressed = quickNavKeys.some(k => {\n                const chords = k.getChords();\n                if (chords.length > 1) {\n                    return false;\n                }\n                if (chords[0].shiftKey && keyCode === 4 /* KeyCode.Shift */) {\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n                    }\n                    return true;\n                }\n                if (chords[0].altKey && keyCode === 6 /* KeyCode.Alt */) {\n                    return true;\n                }\n                if (chords[0].ctrlKey && keyCode === 5 /* KeyCode.Ctrl */) {\n                    return true;\n                }\n                if (chords[0].metaKey && keyCode === 57 /* KeyCode.Meta */) {\n                    return true;\n                }\n                return false;\n            });\n            if (wasTriggerKeyPressed) {\n                if (this.activeItems[0]) {\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    this.handleAccept(false);\n                }\n                // Unset quick navigate after press. It is only valid once\n                // and should not result in any behaviour change afterwards\n                // if the picker remains open because there was no active item\n                this._quickNavigate = undefined;\n            }\n        });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        // store the scrollTop before it is reset\n        const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n        const hasDescription = !!this.description;\n        const visibilities = {\n            title: !!this.title || !!this.step || !!this.titleButtons.length,\n            description: hasDescription,\n            checkAll: this.canSelectMany && !this._hideCheckAll,\n            checkBox: this.canSelectMany,\n            inputBox: !this._hideInput,\n            progressBar: !this._hideInput || hasDescription,\n            visibleCount: true,\n            count: this.canSelectMany && !this._hideCountBadge,\n            ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n            list: true,\n            message: !!this.validationMessage,\n            customButton: this.customButton\n        };\n        this.ui.setVisibilities(visibilities);\n        super.update();\n        if (this.ui.inputBox.value !== this.value) {\n            this.ui.inputBox.value = this.value;\n        }\n        if (this.valueSelectionUpdated) {\n            this.valueSelectionUpdated = false;\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n        }\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n            this.ui.inputBox.placeholder = (this.placeholder || '');\n        }\n        let ariaLabel = this.ariaLabel;\n        // Only set aria label to the input box placeholder if we actually have an input box.\n        if (!ariaLabel && visibilities.inputBox) {\n            ariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n            // If we have a title, include it in the aria label.\n            if (this.title) {\n                ariaLabel += ` - ${this.title}`;\n            }\n        }\n        if (this.ui.list.ariaLabel !== ariaLabel) {\n            this.ui.list.ariaLabel = ariaLabel ?? null;\n        }\n        this.ui.list.matchOnDescription = this.matchOnDescription;\n        this.ui.list.matchOnDetail = this.matchOnDetail;\n        this.ui.list.matchOnLabel = this.matchOnLabel;\n        this.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n        this.ui.list.sortByLabel = this.sortByLabel;\n        if (this.itemsUpdated) {\n            this.itemsUpdated = false;\n            this._focusEventBufferer.bufferEvents(() => {\n                this.ui.list.setElements(this.items);\n                // We want focus to exist in the list if there are items so that space can be used to toggle\n                this.ui.list.shouldLoop = !this.canSelectMany;\n                this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n                switch (this._itemActivation) {\n                    case ItemActivation.NONE:\n                        this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                        break;\n                    case ItemActivation.SECOND:\n                        this.ui.list.focus(QuickPickFocus.Second);\n                        this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                        break;\n                    case ItemActivation.LAST:\n                        this.ui.list.focus(QuickPickFocus.Last);\n                        this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                        break;\n                    default:\n                        this.trySelectFirst();\n                        break;\n                }\n            });\n        }\n        if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n            if (this.canSelectMany) {\n                this.ui.list.clearFocus();\n            }\n            else {\n                this.trySelectFirst();\n            }\n        }\n        if (this.activeItemsUpdated) {\n            this.activeItemsUpdated = false;\n            this.activeItemsToConfirm = this._activeItems;\n            this.ui.list.setFocusedElements(this.activeItems);\n            if (this.activeItemsToConfirm === this._activeItems) {\n                this.activeItemsToConfirm = null;\n            }\n        }\n        if (this.selectedItemsUpdated) {\n            this.selectedItemsUpdated = false;\n            this.selectedItemsToConfirm = this._selectedItems;\n            if (this.canSelectMany) {\n                this.ui.list.setCheckedElements(this.selectedItems);\n            }\n            else {\n                this.ui.list.setSelectedElements(this.selectedItems);\n            }\n            if (this.selectedItemsToConfirm === this._selectedItems) {\n                this.selectedItemsToConfirm = null;\n            }\n        }\n        this.ui.customButton.label = this.customLabel || '';\n        this.ui.customButton.element.title = this.customHover || '';\n        if (!visibilities.inputBox) {\n            // we need to move focus into the tree to detect keybindings\n            // properly when the input box is not visible (quick nav)\n            this.ui.list.domFocus();\n            // Focus the first element in the list if multiselect is enabled\n            if (this.canSelectMany) {\n                this.ui.list.focus(QuickPickFocus.First);\n            }\n        }\n        // Set the scroll position to what it was before updating the items\n        if (this.keepScrollPosition) {\n            this.scrollTop = scrollTopBefore;\n        }\n    }\n    focus(focus) {\n        this.ui.list.focus(focus);\n        // To allow things like space to check/uncheck items\n        if (this.canSelectMany) {\n            this.ui.list.domFocus();\n        }\n    }\n    accept(inBackground) {\n        if (inBackground && !this._canAcceptInBackground) {\n            return; // needs to be enabled\n        }\n        if (this.activeItems[0]) {\n            this._selectedItems = [this.activeItems[0]];\n            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n            this.handleAccept(inBackground ?? false);\n        }\n    }\n}\nexport class InputBox extends QuickInput {\n    constructor() {\n        super(...arguments);\n        this._value = '';\n        this.valueSelectionUpdated = true;\n        this._password = false;\n        this.onDidValueChangeEmitter = this._register(new Emitter());\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.type = \"inputBox\" /* QuickInputType.InputBox */;\n        this.onDidChangeValue = this.onDidValueChangeEmitter.event;\n        this.onDidAccept = this.onDidAcceptEmitter.event;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value || '';\n        this.update();\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.update();\n    }\n    get password() {\n        return this._password;\n    }\n    set password(password) {\n        this._password = password;\n        this.update();\n    }\n    show() {\n        if (!this.visible) {\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n                if (value === this.value) {\n                    return;\n                }\n                this._value = value;\n                this.onDidValueChangeEmitter.fire(value);\n            }));\n            this.visibleDisposables.add(this.ui.onDidAccept(() => this.onDidAcceptEmitter.fire()));\n            this.valueSelectionUpdated = true;\n        }\n        super.show();\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        this.ui.container.classList.remove('hidden-input');\n        const visibilities = {\n            title: !!this.title || !!this.step || !!this.titleButtons.length,\n            description: !!this.description || !!this.step,\n            inputBox: true,\n            message: true,\n            progressBar: true\n        };\n        this.ui.setVisibilities(visibilities);\n        super.update();\n        if (this.ui.inputBox.value !== this.value) {\n            this.ui.inputBox.value = this.value;\n        }\n        if (this.valueSelectionUpdated) {\n            this.valueSelectionUpdated = false;\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n        }\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n            this.ui.inputBox.placeholder = (this.placeholder || '');\n        }\n        if (this.ui.inputBox.password !== this.password) {\n            this.ui.inputBox.password = this.password;\n        }\n    }\n}\nlet QuickInputHoverDelegate = class QuickInputHoverDelegate extends WorkbenchHoverDelegate {\n    constructor(configurationService, hoverService) {\n        super('element', false, (options) => this.getOverrideOptions(options), configurationService, hoverService);\n    }\n    getOverrideOptions(options) {\n        // Only show the hover hint if the content is of a decent size\n        const showHoverHint = (dom.isHTMLElement(options.content)\n            ? options.content.textContent ?? ''\n            : typeof options.content === 'string'\n                ? options.content\n                : options.content.value).includes('\\n');\n        return {\n            persistence: {\n                hideOnKeyDown: false,\n            },\n            appearance: {\n                showHoverHint,\n                skipFadeInAnimation: true,\n            },\n        };\n    }\n};\nQuickInputHoverDelegate = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, IHoverService)\n], QuickInputHoverDelegate);\nexport { QuickInputHoverDelegate };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport './media/quickInput.css';\nconst $ = dom.$;\nexport class QuickInputBox extends Disposable {\n    constructor(parent, inputBoxStyles, toggleStyles) {\n        super();\n        this.parent = parent;\n        this.onKeyDown = (handler) => {\n            return dom.addStandardDisposableListener(this.findInput.inputBox.inputElement, dom.EventType.KEY_DOWN, handler);\n        };\n        this.onDidChange = (handler) => {\n            return this.findInput.onDidChange(handler);\n        };\n        this.container = dom.append(this.parent, $('.quick-input-box'));\n        this.findInput = this._register(new FindInput(this.container, undefined, { label: '', inputBoxStyles, toggleStyles }));\n        const input = this.findInput.inputBox.inputElement;\n        input.role = 'combobox';\n        input.ariaHasPopup = 'menu';\n        input.ariaAutoComplete = 'list';\n        input.ariaExpanded = 'true';\n    }\n    get value() {\n        return this.findInput.getValue();\n    }\n    set value(value) {\n        this.findInput.setValue(value);\n    }\n    select(range = null) {\n        this.findInput.inputBox.select(range);\n    }\n    getSelection() {\n        return this.findInput.inputBox.getSelection();\n    }\n    isSelectionAtEnd() {\n        return this.findInput.inputBox.isSelectionAtEnd();\n    }\n    get placeholder() {\n        return this.findInput.inputBox.inputElement.getAttribute('placeholder') || '';\n    }\n    set placeholder(placeholder) {\n        this.findInput.inputBox.setPlaceHolder(placeholder);\n    }\n    get password() {\n        return this.findInput.inputBox.inputElement.type === 'password';\n    }\n    set password(password) {\n        this.findInput.inputBox.inputElement.type = password ? 'password' : 'text';\n    }\n    set enabled(enabled) {\n        // We can't disable the input box because it is still used for\n        // navigating the list. Instead, we disable the list and the OK\n        // so that nothing can be selected.\n        // TODO: should this be what we do for all find inputs? Or maybe some _other_ API\n        // on findInput to change it to readonly?\n        this.findInput.inputBox.inputElement.toggleAttribute('readonly', !enabled);\n        // TODO: styles of the quick pick need to be moved to the CSS instead of being in line\n        // so things like this can be done in CSS\n        // this.findInput.inputBox.inputElement.classList.toggle('disabled', !enabled);\n    }\n    set toggles(toggles) {\n        this.findInput.setAdditionalToggles(toggles);\n    }\n    setAttribute(name, value) {\n        this.findInput.inputBox.inputElement.setAttribute(name, value);\n    }\n    showDecoration(decoration) {\n        if (decoration === Severity.Ignore) {\n            this.findInput.clearMessage();\n        }\n        else {\n            this.findInput.showMessage({ type: decoration === Severity.Info ? 1 /* MessageType.INFO */ : decoration === Severity.Warning ? 2 /* MessageType.WARNING */ : 3 /* MessageType.ERROR */, content: '' });\n        }\n    }\n    stylesForType(decoration) {\n        return this.findInput.inputBox.stylesForType(decoration === Severity.Info ? 1 /* MessageType.INFO */ : decoration === Severity.Warning ? 2 /* MessageType.WARNING */ : 3 /* MessageType.ERROR */);\n    }\n    setFocus() {\n        this.findInput.focus();\n    }\n    layout() {\n        this.findInput.inputBox.layout();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createStyleSheet, isActiveElement, isKeyboardEvent } from '../../../base/browser/dom.js';\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\nimport { DefaultStyleController, isSelectionRangeChangeEvent, isSelectionSingleChangeEvent, List, TypeNavigationMode } from '../../../base/browser/ui/list/listWidget.js';\nimport { Table } from '../../../base/browser/ui/table/tableWidget.js';\nimport { TreeFindMode, TreeFindMatchType } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\nimport { CompressibleObjectTree, ObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { combinedDisposable, Disposable, DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { defaultFindWidgetStyles, defaultListStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nexport const IListService = createDecorator('listService');\nexport class ListService {\n    get lastFocusedList() {\n        return this._lastFocusedWidget;\n    }\n    constructor() {\n        this.disposables = new DisposableStore();\n        this.lists = [];\n        this._lastFocusedWidget = undefined;\n        this._hasCreatedStyleController = false;\n    }\n    setLastFocusedList(widget) {\n        if (widget === this._lastFocusedWidget) {\n            return;\n        }\n        this._lastFocusedWidget?.getHTMLElement().classList.remove('last-focused');\n        this._lastFocusedWidget = widget;\n        this._lastFocusedWidget?.getHTMLElement().classList.add('last-focused');\n    }\n    register(widget, extraContextKeys) {\n        if (!this._hasCreatedStyleController) {\n            this._hasCreatedStyleController = true;\n            // create a shared default tree style sheet for performance reasons\n            const styleController = new DefaultStyleController(createStyleSheet(), '');\n            styleController.style(defaultListStyles);\n        }\n        if (this.lists.some(l => l.widget === widget)) {\n            throw new Error('Cannot register the same widget multiple times');\n        }\n        // Keep in our lists list\n        const registeredList = { widget, extraContextKeys };\n        this.lists.push(registeredList);\n        // Check for currently being focused\n        if (isActiveElement(widget.getHTMLElement())) {\n            this.setLastFocusedList(widget);\n        }\n        return combinedDisposable(widget.onDidFocus(() => this.setLastFocusedList(widget)), toDisposable(() => this.lists.splice(this.lists.indexOf(registeredList), 1)), widget.onDidDispose(() => {\n            this.lists = this.lists.filter(l => l !== registeredList);\n            if (this._lastFocusedWidget === widget) {\n                this.setLastFocusedList(undefined);\n            }\n        }));\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nexport const RawWorkbenchListScrollAtBoundaryContextKey = new RawContextKey('listScrollAtBoundary', 'none');\nexport const WorkbenchListScrollAtTopContextKey = ContextKeyExpr.or(RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('top'), RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('both'));\nexport const WorkbenchListScrollAtBottomContextKey = ContextKeyExpr.or(RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('bottom'), RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('both'));\nexport const RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\nexport const WorkbenchTreeStickyScrollFocused = new RawContextKey('treestickyScrollFocused', false);\nexport const WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\nexport const WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey), WorkbenchTreeStickyScrollFocused.negate());\nexport const WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\nexport const WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\nexport const WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\nexport const WorkbenchListSelectionNavigation = new RawContextKey('listSelectionNavigation', false);\nexport const WorkbenchListSupportsFind = new RawContextKey('listSupportsFind', true);\nexport const WorkbenchTreeElementCanCollapse = new RawContextKey('treeElementCanCollapse', false);\nexport const WorkbenchTreeElementHasParent = new RawContextKey('treeElementHasParent', false);\nexport const WorkbenchTreeElementCanExpand = new RawContextKey('treeElementCanExpand', false);\nexport const WorkbenchTreeElementHasChild = new RawContextKey('treeElementHasChild', false);\nexport const WorkbenchTreeFindOpen = new RawContextKey('treeFindOpen', false);\nconst WorkbenchListTypeNavigationModeKey = 'listTypeNavigationMode';\n/**\n * @deprecated in favor of WorkbenchListTypeNavigationModeKey\n */\nconst WorkbenchListAutomaticKeyboardNavigationLegacyKey = 'listAutomaticKeyboardNavigation';\nfunction createScopedContextKeyService(contextKeyService, widget) {\n    const result = contextKeyService.createScoped(widget.getHTMLElement());\n    RawWorkbenchListFocusContextKey.bindTo(result);\n    return result;\n}\nfunction createScrollObserver(contextKeyService, widget) {\n    const listScrollAt = RawWorkbenchListScrollAtBoundaryContextKey.bindTo(contextKeyService);\n    const update = () => {\n        const atTop = widget.scrollTop === 0;\n        // We need a threshold `1` since scrollHeight is rounded.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#determine_if_an_element_has_been_totally_scrolled\n        const atBottom = widget.scrollHeight - widget.renderHeight - widget.scrollTop < 1;\n        if (atTop && atBottom) {\n            listScrollAt.set('both');\n        }\n        else if (atTop) {\n            listScrollAt.set('top');\n        }\n        else if (atBottom) {\n            listScrollAt.set('bottom');\n        }\n        else {\n            listScrollAt.set('none');\n        }\n    };\n    update();\n    return widget.onDidScroll(update);\n}\nconst multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\nconst openModeSettingKey = 'workbench.list.openMode';\nconst horizontalScrollingKey = 'workbench.list.horizontalScrolling';\nconst defaultFindModeSettingKey = 'workbench.list.defaultFindMode';\nconst typeNavigationModeSettingKey = 'workbench.list.typeNavigationMode';\n/** @deprecated in favor of `workbench.list.defaultFindMode` and `workbench.list.typeNavigationMode` */\nconst keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\nconst scrollByPageKey = 'workbench.list.scrollByPage';\nconst defaultFindMatchTypeSettingKey = 'workbench.list.defaultFindMatchType';\nconst treeIndentKey = 'workbench.tree.indent';\nconst treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\nconst listSmoothScrolling = 'workbench.list.smoothScrolling';\nconst mouseWheelScrollSensitivityKey = 'workbench.list.mouseWheelScrollSensitivity';\nconst fastScrollSensitivityKey = 'workbench.list.fastScrollSensitivity';\nconst treeExpandMode = 'workbench.tree.expandMode';\nconst treeStickyScroll = 'workbench.tree.enableStickyScroll';\nconst treeStickyScrollMaxElements = 'workbench.tree.stickyScrollMaxItemCount';\nfunction useAltAsMultipleSelectionModifier(configurationService) {\n    return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\n}\nclass MultipleSelectionController extends Disposable {\n    constructor(configurationService) {\n        super();\n        this.configurationService = configurationService;\n        this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(this.configurationService);\n            }\n        }));\n    }\n    isSelectionSingleChangeEvent(event) {\n        if (this.useAltAsMultipleSelectionModifier) {\n            return event.browserEvent.altKey;\n        }\n        return isSelectionSingleChangeEvent(event);\n    }\n    isSelectionRangeChangeEvent(event) {\n        return isSelectionRangeChangeEvent(event);\n    }\n}\nfunction toWorkbenchListOptions(accessor, options) {\n    const configurationService = accessor.get(IConfigurationService);\n    const keybindingService = accessor.get(IKeybindingService);\n    const disposables = new DisposableStore();\n    const result = {\n        ...options,\n        keyboardNavigationDelegate: { mightProducePrintableCharacter(e) { return keybindingService.mightProducePrintableCharacter(e); } },\n        smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)),\n        mouseWheelScrollSensitivity: configurationService.getValue(mouseWheelScrollSensitivityKey),\n        fastScrollSensitivity: configurationService.getValue(fastScrollSensitivityKey),\n        multipleSelectionController: options.multipleSelectionController ?? disposables.add(new MultipleSelectionController(configurationService)),\n        keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(keybindingService),\n        scrollByPage: Boolean(configurationService.getValue(scrollByPageKey))\n    };\n    return [result, disposables];\n}\nlet WorkbenchList = class WorkbenchList extends List {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, {\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            horizontalScrolling,\n        });\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.disposables.add(createScrollObserver(this.contextKeyService, this));\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        this.updateStyles(options.overrideStyles);\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = { ...options, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                options = { ...options, scrollByPage };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = { ...options, smoothScrolling };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = { ...options, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = { ...options, fastScrollSensitivity };\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, { configurationService, ...options });\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n};\nWorkbenchList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IConfigurationService),\n    __param(8, IInstantiationService)\n], WorkbenchList);\nexport { WorkbenchList };\nlet WorkbenchPagedList = class WorkbenchPagedList extends PagedList {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, {\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            horizontalScrolling,\n        });\n        this.disposables = new DisposableStore();\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.disposables.add(createScrollObserver(this.contextKeyService, this.widget));\n        this.horizontalScrolling = options.horizontalScrolling;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        this.updateStyles(options.overrideStyles);\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = { ...options, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                options = { ...options, scrollByPage };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = { ...options, smoothScrolling };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = { ...options, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = { ...options, fastScrollSensitivity };\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, { configurationService, ...options });\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n    dispose() {\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchPagedList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IConfigurationService),\n    __param(8, IInstantiationService)\n], WorkbenchPagedList);\nexport { WorkbenchPagedList };\nlet WorkbenchTable = class WorkbenchTable extends Table {\n    constructor(user, container, delegate, columns, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, columns, renderers, {\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            horizontalScrolling,\n        });\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.disposables.add(createScrollObserver(this.contextKeyService, this));\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        this.updateStyles(options.overrideStyles);\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = { ...options, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                options = { ...options, scrollByPage };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = { ...options, smoothScrolling };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = { ...options, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = { ...options, fastScrollSensitivity };\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new TableResourceNavigator(this, { configurationService, ...options });\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n    dispose() {\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchTable = __decorate([\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IConfigurationService),\n    __param(9, IInstantiationService)\n], WorkbenchTable);\nexport { WorkbenchTable };\nclass ResourceNavigator extends Disposable {\n    constructor(widget, options) {\n        super();\n        this.widget = widget;\n        this._onDidOpen = this._register(new Emitter());\n        this.onDidOpen = this._onDidOpen.event;\n        this._register(Event.filter(this.widget.onDidChangeSelection, e => isKeyboardEvent(e.browserEvent))(e => this.onSelectionFromKeyboard(e)));\n        this._register(this.widget.onPointer((e) => this.onPointer(e.element, e.browserEvent)));\n        this._register(this.widget.onMouseDblClick((e) => this.onMouseDblClick(e.element, e.browserEvent)));\n        if (typeof options?.openOnSingleClick !== 'boolean' && options?.configurationService) {\n            this.openOnSingleClick = options?.configurationService.getValue(openModeSettingKey) !== 'doubleClick';\n            this._register(options?.configurationService.onDidChangeConfiguration(e => {\n                if (e.affectsConfiguration(openModeSettingKey)) {\n                    this.openOnSingleClick = options?.configurationService.getValue(openModeSettingKey) !== 'doubleClick';\n                }\n            }));\n        }\n        else {\n            this.openOnSingleClick = options?.openOnSingleClick ?? true;\n        }\n    }\n    onSelectionFromKeyboard(event) {\n        if (event.elements.length !== 1) {\n            return;\n        }\n        const selectionKeyboardEvent = event.browserEvent;\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n        const sideBySide = false;\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n    onPointer(element, browserEvent) {\n        if (!this.openOnSingleClick) {\n            return;\n        }\n        const isDoubleClick = browserEvent.detail === 2;\n        if (isDoubleClick) {\n            return;\n        }\n        const isMiddleClick = browserEvent.button === 1;\n        const preserveFocus = true;\n        const pinned = isMiddleClick;\n        const sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    onMouseDblClick(element, browserEvent) {\n        if (!browserEvent) {\n            return;\n        }\n        // copied from AbstractTree\n        const target = browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && browserEvent.offsetX < 16);\n        if (onTwistie) {\n            return;\n        }\n        const preserveFocus = false;\n        const pinned = true;\n        const sideBySide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\n        if (!element) {\n            return;\n        }\n        this._onDidOpen.fire({\n            editorOptions: {\n                preserveFocus,\n                pinned,\n                revealIfVisible: true\n            },\n            sideBySide,\n            element,\n            browserEvent\n        });\n    }\n}\nclass ListResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n        this.widget = widget;\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TableResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TreeResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        return this.widget.getSelection()[0] ?? undefined;\n    }\n}\nfunction createKeyboardNavigationEventFilter(keybindingService) {\n    let inMultiChord = false;\n    return event => {\n        if (event.toKeyCodeChord().isModifierKey()) {\n            return false;\n        }\n        if (inMultiChord) {\n            inMultiChord = false;\n            return false;\n        }\n        const result = keybindingService.softDispatch(event, event.target);\n        if (result.kind === 1 /* ResultKind.MoreChordsNeeded */) {\n            inMultiChord = true;\n            return false;\n        }\n        inMultiChord = false;\n        return result.kind === 0 /* ResultKind.NoMatchingKb */;\n    };\n}\nlet WorkbenchObjectTree = class WorkbenchObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IConfigurationService)\n], WorkbenchObjectTree);\nexport { WorkbenchObjectTree };\nlet WorkbenchCompressibleObjectTree = class WorkbenchCompressibleObjectTree extends CompressibleObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IConfigurationService)\n], WorkbenchCompressibleObjectTree);\nexport { WorkbenchCompressibleObjectTree };\nlet WorkbenchDataTree = class WorkbenchDataTree extends DataTree {\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IConfigurationService)\n], WorkbenchDataTree);\nexport { WorkbenchDataTree };\nlet WorkbenchAsyncDataTree = class WorkbenchAsyncDataTree extends AsyncDataTree {\n    get onDidOpen() { return this.internals.onDidOpen; }\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchAsyncDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IConfigurationService)\n], WorkbenchAsyncDataTree);\nexport { WorkbenchAsyncDataTree };\nlet WorkbenchCompressibleAsyncDataTree = class WorkbenchCompressibleAsyncDataTree extends CompressibleAsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleAsyncDataTree = __decorate([\n    __param(7, IInstantiationService),\n    __param(8, IContextKeyService),\n    __param(9, IListService),\n    __param(10, IConfigurationService)\n], WorkbenchCompressibleAsyncDataTree);\nexport { WorkbenchCompressibleAsyncDataTree };\nfunction getDefaultTreeFindMode(configurationService) {\n    const value = configurationService.getValue(defaultFindModeSettingKey);\n    if (value === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (value === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    const deprecatedValue = configurationService.getValue(keyboardNavigationSettingKey);\n    if (deprecatedValue === 'simple' || deprecatedValue === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (deprecatedValue === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    return undefined;\n}\nfunction getDefaultTreeFindMatchType(configurationService) {\n    const value = configurationService.getValue(defaultFindMatchTypeSettingKey);\n    if (value === 'fuzzy') {\n        return TreeFindMatchType.Fuzzy;\n    }\n    else if (value === 'contiguous') {\n        return TreeFindMatchType.Contiguous;\n    }\n    return undefined;\n}\nfunction workbenchTreeDataPreamble(accessor, options) {\n    const configurationService = accessor.get(IConfigurationService);\n    const contextViewService = accessor.get(IContextViewService);\n    const contextKeyService = accessor.get(IContextKeyService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const getTypeNavigationMode = () => {\n        // give priority to the context key value to specify a value\n        const modeString = contextKeyService.getContextKeyValue(WorkbenchListTypeNavigationModeKey);\n        if (modeString === 'automatic') {\n            return TypeNavigationMode.Automatic;\n        }\n        else if (modeString === 'trigger') {\n            return TypeNavigationMode.Trigger;\n        }\n        // also check the deprecated context key to set the mode to 'trigger'\n        const modeBoolean = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        if (modeBoolean === false) {\n            return TypeNavigationMode.Trigger;\n        }\n        // finally, check the setting\n        const configString = configurationService.getValue(typeNavigationModeSettingKey);\n        if (configString === 'automatic') {\n            return TypeNavigationMode.Automatic;\n        }\n        else if (configString === 'trigger') {\n            return TypeNavigationMode.Trigger;\n        }\n        return undefined;\n    };\n    const horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    const [workbenchListOptions, disposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n    const paddingBottom = options.paddingBottom;\n    const renderIndentGuides = options.renderIndentGuides !== undefined ? options.renderIndentGuides : configurationService.getValue(treeRenderIndentGuidesKey);\n    return {\n        getTypeNavigationMode,\n        disposable,\n        options: {\n            // ...options, // TODO@Joao why is this not splatted here?\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            indent: typeof configurationService.getValue(treeIndentKey) === 'number' ? configurationService.getValue(treeIndentKey) : undefined,\n            renderIndentGuides,\n            smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)),\n            defaultFindMode: getDefaultTreeFindMode(configurationService),\n            defaultFindMatchType: getDefaultTreeFindMatchType(configurationService),\n            horizontalScrolling,\n            scrollByPage: Boolean(configurationService.getValue(scrollByPageKey)),\n            paddingBottom: paddingBottom,\n            hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements,\n            expandOnlyOnTwistieClick: options.expandOnlyOnTwistieClick ?? (configurationService.getValue(treeExpandMode) === 'doubleClick'),\n            contextViewProvider: contextViewService,\n            findWidgetStyles: defaultFindWidgetStyles,\n            enableStickyScroll: Boolean(configurationService.getValue(treeStickyScroll)),\n            stickyScrollMaxItemCount: Number(configurationService.getValue(treeStickyScrollMaxElements)),\n        }\n    };\n}\nlet WorkbenchTreeInternals = class WorkbenchTreeInternals {\n    get onDidOpen() { return this.navigator.onDidOpen; }\n    constructor(tree, options, getTypeNavigationMode, overrideStyles, contextKeyService, listService, configurationService) {\n        this.tree = tree;\n        this.disposables = [];\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\n        this.disposables.push(createScrollObserver(this.contextKeyService, tree));\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listSupportFindWidget = WorkbenchListSupportsFind.bindTo(this.contextKeyService);\n        this.listSupportFindWidget.set(options.findWidgetEnabled ?? true);\n        this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.treeElementCanCollapse = WorkbenchTreeElementCanCollapse.bindTo(this.contextKeyService);\n        this.treeElementHasParent = WorkbenchTreeElementHasParent.bindTo(this.contextKeyService);\n        this.treeElementCanExpand = WorkbenchTreeElementCanExpand.bindTo(this.contextKeyService);\n        this.treeElementHasChild = WorkbenchTreeElementHasChild.bindTo(this.contextKeyService);\n        this.treeFindOpen = WorkbenchTreeFindOpen.bindTo(this.contextKeyService);\n        this.treeStickyScrollFocused = WorkbenchTreeStickyScrollFocused.bindTo(this.contextKeyService);\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.updateStyleOverrides(overrideStyles);\n        const updateCollapseContextKeys = () => {\n            const focus = tree.getFocus()[0];\n            if (!focus) {\n                return;\n            }\n            const node = tree.getNode(focus);\n            this.treeElementCanCollapse.set(node.collapsible && !node.collapsed);\n            this.treeElementHasParent.set(!!tree.getParentElement(focus));\n            this.treeElementCanExpand.set(node.collapsible && node.collapsed);\n            this.treeElementHasChild.set(!!tree.getFirstElementChild(focus));\n        };\n        const interestingContextKeys = new Set();\n        interestingContextKeys.add(WorkbenchListTypeNavigationModeKey);\n        interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.hasMultiSelection.set(selection.length > 1);\n                this.hasDoubleSelection.set(selection.length === 2);\n            });\n        }), tree.onDidChangeFocus(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n            updateCollapseContextKeys();\n        }), tree.onDidChangeCollapseState(updateCollapseContextKeys), tree.onDidChangeModel(updateCollapseContextKeys), tree.onDidChangeFindOpenState(enabled => this.treeFindOpen.set(enabled)), tree.onDidChangeStickyScrollFocused(focused => this.treeStickyScrollFocused.set(focused)), configurationService.onDidChangeConfiguration(e => {\n            let newOptions = {};\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            if (e.affectsConfiguration(treeIndentKey)) {\n                const indent = configurationService.getValue(treeIndentKey);\n                newOptions = { ...newOptions, indent };\n            }\n            if (e.affectsConfiguration(treeRenderIndentGuidesKey) && options.renderIndentGuides === undefined) {\n                const renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\n                newOptions = { ...newOptions, renderIndentGuides };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                newOptions = { ...newOptions, smoothScrolling };\n            }\n            if (e.affectsConfiguration(defaultFindModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n                const defaultFindMode = getDefaultTreeFindMode(configurationService);\n                newOptions = { ...newOptions, defaultFindMode };\n            }\n            if (e.affectsConfiguration(typeNavigationModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n                const typeNavigationMode = getTypeNavigationMode();\n                newOptions = { ...newOptions, typeNavigationMode };\n            }\n            if (e.affectsConfiguration(defaultFindMatchTypeSettingKey)) {\n                const defaultFindMatchType = getDefaultTreeFindMatchType(configurationService);\n                newOptions = { ...newOptions, defaultFindMatchType };\n            }\n            if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                newOptions = { ...newOptions, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                newOptions = { ...newOptions, scrollByPage };\n            }\n            if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\n                newOptions = { ...newOptions, expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick' };\n            }\n            if (e.affectsConfiguration(treeStickyScroll)) {\n                const enableStickyScroll = configurationService.getValue(treeStickyScroll);\n                newOptions = { ...newOptions, enableStickyScroll };\n            }\n            if (e.affectsConfiguration(treeStickyScrollMaxElements)) {\n                const stickyScrollMaxItemCount = Math.max(1, configurationService.getValue(treeStickyScrollMaxElements));\n                newOptions = { ...newOptions, stickyScrollMaxItemCount };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                newOptions = { ...newOptions, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                newOptions = { ...newOptions, fastScrollSensitivity };\n            }\n            if (Object.keys(newOptions).length > 0) {\n                tree.updateOptions(newOptions);\n            }\n        }), this.contextKeyService.onDidChangeContext(e => {\n            if (e.affectsSome(interestingContextKeys)) {\n                tree.updateOptions({ typeNavigationMode: getTypeNavigationMode() });\n            }\n        }));\n        this.navigator = new TreeResourceNavigator(tree, { configurationService, ...options });\n        this.disposables.push(this.navigator);\n    }\n    updateOptions(options) {\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyleOverrides(overrideStyles) {\n        this.tree.style(overrideStyles ? getListStyles(overrideStyles) : defaultListStyles);\n    }\n    dispose() {\n        this.disposables = dispose(this.disposables);\n    }\n};\nWorkbenchTreeInternals = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, IListService),\n    __param(6, IConfigurationService)\n], WorkbenchTreeInternals);\nconst configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n    id: 'workbench',\n    order: 7,\n    title: localize('workbenchConfigurationTitle', \"Workbench\"),\n    type: 'object',\n    properties: {\n        [multiSelectModifierSettingKey]: {\n            type: 'string',\n            enum: ['ctrlCmd', 'alt'],\n            markdownEnumDescriptions: [\n                localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n                localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n            ],\n            default: 'ctrlCmd',\n            description: localize({\n                key: 'multiSelectModifier',\n                comment: [\n                    '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                    '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n                ]\n            }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\n        },\n        [openModeSettingKey]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize({\n                key: 'openModeModifier',\n                comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\n            }, \"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\n        },\n        [horizontalScrollingKey]: {\n            type: 'boolean',\n            default: false,\n            description: localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\n        },\n        [scrollByPageKey]: {\n            type: 'boolean',\n            default: false,\n            description: localize('list.scrollByPage', \"Controls whether clicks in the scrollbar scroll page by page.\")\n        },\n        [treeIndentKey]: {\n            type: 'number',\n            default: 8,\n            minimum: 4,\n            maximum: 40,\n            description: localize('tree indent setting', \"Controls tree indentation in pixels.\")\n        },\n        [treeRenderIndentGuidesKey]: {\n            type: 'string',\n            enum: ['none', 'onHover', 'always'],\n            default: 'onHover',\n            description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\n        },\n        [listSmoothScrolling]: {\n            type: 'boolean',\n            default: false,\n            description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\"),\n        },\n        [mouseWheelScrollSensitivityKey]: {\n            type: 'number',\n            default: 1,\n            markdownDescription: localize('Mouse Wheel Scroll Sensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\")\n        },\n        [fastScrollSensitivityKey]: {\n            type: 'number',\n            default: 5,\n            markdownDescription: localize('Fast Scroll Sensitivity', \"Scrolling speed multiplier when pressing `Alt`.\")\n        },\n        [defaultFindModeSettingKey]: {\n            type: 'string',\n            enum: ['highlight', 'filter'],\n            enumDescriptions: [\n                localize('defaultFindModeSettingKey.highlight', \"Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('defaultFindModeSettingKey.filter', \"Filter elements when searching.\")\n            ],\n            default: 'highlight',\n            description: localize('defaultFindModeSettingKey', \"Controls the default find mode for lists and trees in the workbench.\")\n        },\n        [keyboardNavigationSettingKey]: {\n            type: 'string',\n            enum: ['simple', 'highlight', 'filter'],\n            enumDescriptions: [\n                localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"),\n                localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")\n            ],\n            default: 'highlight',\n            description: localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\"),\n            deprecated: true,\n            deprecationMessage: localize('keyboardNavigationSettingKeyDeprecated', \"Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.\")\n        },\n        [defaultFindMatchTypeSettingKey]: {\n            type: 'string',\n            enum: ['fuzzy', 'contiguous'],\n            enumDescriptions: [\n                localize('defaultFindMatchTypeSettingKey.fuzzy', \"Use fuzzy matching when searching.\"),\n                localize('defaultFindMatchTypeSettingKey.contiguous', \"Use contiguous matching when searching.\")\n            ],\n            default: 'fuzzy',\n            description: localize('defaultFindMatchTypeSettingKey', \"Controls the type of matching used when searching lists and trees in the workbench.\")\n        },\n        [treeExpandMode]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.\"),\n        },\n        [treeStickyScroll]: {\n            type: 'boolean',\n            default: true,\n            description: localize('sticky scroll', \"Controls whether sticky scrolling is enabled in trees.\"),\n        },\n        [treeStickyScrollMaxElements]: {\n            type: 'number',\n            minimum: 1,\n            default: 7,\n            markdownDescription: localize('sticky scroll maximum items', \"Controls the number of sticky elements displayed in the tree when {0} is enabled.\", '`#workbench.tree.enableStickyScroll#`'),\n        },\n        [typeNavigationModeSettingKey]: {\n            type: 'string',\n            enum: ['automatic', 'trigger'],\n            default: 'automatic',\n            markdownDescription: localize('typeNavigationMode2', \"Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run.\"),\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar QuickPickItemElementRenderer_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { Emitter, Event, EventBufferer } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../list/browser/listService.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { QuickPickFocus } from '../common/quickInput.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { quickInputButtonToAction } from './quickInputUtils.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { getCodiconAriaLabel, matchesFuzzyIconAware, parseLabelWithIcons } from '../../../base/common/iconLabels.js';\nimport { compareAnything } from '../../../base/common/comparers.js';\nimport { ltrim } from '../../../base/common/strings.js';\nimport { RenderIndentGuides } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { ThrottledDelayer } from '../../../base/common/async.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { observableValue, observableValueOpts, transaction } from '../../../base/common/observable.js';\nimport { equals } from '../../../base/common/arrays.js';\nconst $ = dom.$;\nclass BaseQuickPickItemElement {\n    constructor(index, hasCheckbox, mainItem) {\n        this.index = index;\n        this.hasCheckbox = hasCheckbox;\n        this._hidden = false;\n        this._init = new Lazy(() => {\n            const saneLabel = mainItem.label ?? '';\n            const saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n            const saneAriaLabel = mainItem.ariaLabel || [saneLabel, this.saneDescription, this.saneDetail]\n                .map(s => getCodiconAriaLabel(s))\n                .filter(s => !!s)\n                .join(', ');\n            return {\n                saneLabel,\n                saneSortLabel,\n                saneAriaLabel\n            };\n        });\n        this._saneDescription = mainItem.description;\n        this._saneTooltip = mainItem.tooltip;\n    }\n    // #region Lazy Getters\n    get saneLabel() {\n        return this._init.value.saneLabel;\n    }\n    get saneSortLabel() {\n        return this._init.value.saneSortLabel;\n    }\n    get saneAriaLabel() {\n        return this._init.value.saneAriaLabel;\n    }\n    get element() {\n        return this._element;\n    }\n    set element(value) {\n        this._element = value;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n    }\n    get saneDescription() {\n        return this._saneDescription;\n    }\n    set saneDescription(value) {\n        this._saneDescription = value;\n    }\n    get saneDetail() {\n        return this._saneDetail;\n    }\n    set saneDetail(value) {\n        this._saneDetail = value;\n    }\n    get saneTooltip() {\n        return this._saneTooltip;\n    }\n    set saneTooltip(value) {\n        this._saneTooltip = value;\n    }\n    get labelHighlights() {\n        return this._labelHighlights;\n    }\n    set labelHighlights(value) {\n        this._labelHighlights = value;\n    }\n    get descriptionHighlights() {\n        return this._descriptionHighlights;\n    }\n    set descriptionHighlights(value) {\n        this._descriptionHighlights = value;\n    }\n    get detailHighlights() {\n        return this._detailHighlights;\n    }\n    set detailHighlights(value) {\n        this._detailHighlights = value;\n    }\n}\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n    constructor(index, hasCheckbox, fireButtonTriggered, _onChecked, item, _separator) {\n        super(index, hasCheckbox, item);\n        this.fireButtonTriggered = fireButtonTriggered;\n        this._onChecked = _onChecked;\n        this.item = item;\n        this._separator = _separator;\n        this._checked = false;\n        this.onChecked = hasCheckbox\n            ? Event.map(Event.filter(this._onChecked.event, e => e.element === this), e => e.checked)\n            : Event.None;\n        this._saneDetail = item.detail;\n        this._labelHighlights = item.highlights?.label;\n        this._descriptionHighlights = item.highlights?.description;\n        this._detailHighlights = item.highlights?.detail;\n    }\n    get separator() {\n        return this._separator;\n    }\n    set separator(value) {\n        this._separator = value;\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._onChecked.fire({ element: this, checked: value });\n        }\n    }\n    get checkboxDisabled() {\n        return !!this.item.disabled;\n    }\n}\nvar QuickPickSeparatorFocusReason;\n(function (QuickPickSeparatorFocusReason) {\n    /**\n     * No item is hovered or active\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * Some item within this section is hovered\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"MOUSE_HOVER\"] = 1] = \"MOUSE_HOVER\";\n    /**\n     * Some item within this section is active\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"ACTIVE_ITEM\"] = 2] = \"ACTIVE_ITEM\";\n})(QuickPickSeparatorFocusReason || (QuickPickSeparatorFocusReason = {}));\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n    constructor(index, fireSeparatorButtonTriggered, separator) {\n        super(index, false, separator);\n        this.fireSeparatorButtonTriggered = fireSeparatorButtonTriggered;\n        this.separator = separator;\n        this.children = new Array();\n        /**\n         * If this item is >0, it means that there is some item in the list that is either:\n         * * hovered over\n         * * active\n         */\n        this.focusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n    }\n}\nclass QuickInputItemDelegate {\n    getHeight(element) {\n        if (element instanceof QuickPickSeparatorElement) {\n            return 30;\n        }\n        return element.saneDetail ? 44 : 22;\n    }\n    getTemplateId(element) {\n        if (element instanceof QuickPickItemElement) {\n            return QuickPickItemElementRenderer.ID;\n        }\n        else {\n            return QuickPickSeparatorElementRenderer.ID;\n        }\n    }\n}\nclass QuickInputAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return localize('quickInput', \"Quick Input\");\n    }\n    getAriaLabel(element) {\n        return element.separator?.label\n            ? `${element.saneAriaLabel}, ${element.separator.label}`\n            : element.saneAriaLabel;\n    }\n    getWidgetRole() {\n        return 'listbox';\n    }\n    getRole(element) {\n        return element.hasCheckbox ? 'checkbox' : 'option';\n    }\n    isChecked(element) {\n        if (!element.hasCheckbox || !(element instanceof QuickPickItemElement)) {\n            return undefined;\n        }\n        return {\n            get value() { return element.checked; },\n            onDidChange: e => element.onChecked(() => e()),\n        };\n    }\n}\nclass BaseQuickInputListRenderer {\n    constructor(hoverDelegate) {\n        this.hoverDelegate = hoverDelegate;\n    }\n    // TODO: only do the common stuff here and have a subclass handle their specific stuff\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDisposeElement = new DisposableStore();\n        data.toDisposeTemplate = new DisposableStore();\n        data.entry = dom.append(container, $('.quick-input-list-entry'));\n        // Checkbox\n        const label = dom.append(data.entry, $('label.quick-input-list-label'));\n        data.toDisposeTemplate.add(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\n            if (!data.checkbox.offsetParent) { // If checkbox not visible:\n                e.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\n            }\n        }));\n        data.checkbox = dom.append(label, $('input.quick-input-list-checkbox'));\n        data.checkbox.type = 'checkbox';\n        // Rows\n        const rows = dom.append(label, $('.quick-input-list-rows'));\n        const row1 = dom.append(rows, $('.quick-input-list-row'));\n        const row2 = dom.append(rows, $('.quick-input-list-row'));\n        // Label\n        data.label = new IconLabel(row1, { supportHighlights: true, supportDescriptionHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n        data.toDisposeTemplate.add(data.label);\n        data.icon = dom.prepend(data.label.element, $('.quick-input-list-icon'));\n        // Keybinding\n        const keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\n        data.keybinding = new KeybindingLabel(keybindingContainer, OS);\n        data.toDisposeTemplate.add(data.keybinding);\n        // Detail\n        const detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\n        data.detail = new IconLabel(detailContainer, { supportHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n        data.toDisposeTemplate.add(data.detail);\n        // Separator\n        data.separator = dom.append(data.entry, $('.quick-input-list-separator'));\n        // Actions\n        data.actionBar = new ActionBar(data.entry, this.hoverDelegate ? { hoverDelegate: this.hoverDelegate } : undefined);\n        data.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\n        data.toDisposeTemplate.add(data.actionBar);\n        return data;\n    }\n    disposeTemplate(data) {\n        data.toDisposeElement.dispose();\n        data.toDisposeTemplate.dispose();\n    }\n    disposeElement(_element, _index, data) {\n        data.toDisposeElement.clear();\n        data.actionBar.clear();\n    }\n}\nlet QuickPickItemElementRenderer = class QuickPickItemElementRenderer extends BaseQuickInputListRenderer {\n    static { QuickPickItemElementRenderer_1 = this; }\n    static { this.ID = 'quickpickitem'; }\n    constructor(hoverDelegate, themeService) {\n        super(hoverDelegate);\n        this.themeService = themeService;\n        // Follow what we do in the separator renderer\n        this._itemsWithSeparatorsFrequency = new Map();\n    }\n    get templateId() {\n        return QuickPickItemElementRenderer_1.ID;\n    }\n    renderTemplate(container) {\n        const data = super.renderTemplate(container);\n        data.toDisposeTemplate.add(dom.addStandardDisposableListener(data.checkbox, dom.EventType.CHANGE, e => {\n            data.element.checked = data.checkbox.checked;\n        }));\n        return data;\n    }\n    renderElement(node, index, data) {\n        const element = node.element;\n        data.element = element;\n        element.element = data.entry ?? undefined;\n        const mainItem = element.item;\n        data.checkbox.checked = element.checked;\n        data.toDisposeElement.add(element.onChecked(checked => data.checkbox.checked = checked));\n        data.checkbox.disabled = element.checkboxDisabled;\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\n        // Icon\n        if (mainItem.iconPath) {\n            const icon = isDark(this.themeService.getColorTheme().type) ? mainItem.iconPath.dark : (mainItem.iconPath.light ?? mainItem.iconPath.dark);\n            const iconUrl = URI.revive(icon);\n            data.icon.className = 'quick-input-list-icon';\n            data.icon.style.backgroundImage = dom.asCSSUrl(iconUrl);\n        }\n        else {\n            data.icon.style.backgroundImage = '';\n            data.icon.className = mainItem.iconClass ? `quick-input-list-icon ${mainItem.iconClass}` : '';\n        }\n        // Label\n        let descriptionTitle;\n        // if we have a tooltip, that will be the hover,\n        // with the saneDescription as fallback if it\n        // is defined\n        if (!element.saneTooltip && element.saneDescription) {\n            descriptionTitle = {\n                markdown: {\n                    value: element.saneDescription,\n                    supportThemeIcons: true\n                },\n                markdownNotSupportedFallback: element.saneDescription\n            };\n        }\n        const options = {\n            matches: labelHighlights || [],\n            // If we have a tooltip, we want that to be shown and not any other hover\n            descriptionTitle,\n            descriptionMatches: descriptionHighlights || [],\n            labelEscapeNewLines: true\n        };\n        options.extraClasses = mainItem.iconClasses;\n        options.italic = mainItem.italic;\n        options.strikethrough = mainItem.strikethrough;\n        data.entry.classList.remove('quick-input-list-separator-as-item');\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\n        // Keybinding\n        data.keybinding.set(mainItem.keybinding);\n        // Detail\n        if (element.saneDetail) {\n            let title;\n            // If we have a tooltip, we want that to be shown and not any other hover\n            if (!element.saneTooltip) {\n                title = {\n                    markdown: {\n                        value: element.saneDetail,\n                        supportThemeIcons: true\n                    },\n                    markdownNotSupportedFallback: element.saneDetail\n                };\n            }\n            data.detail.element.style.display = '';\n            data.detail.setLabel(element.saneDetail, undefined, {\n                matches: detailHighlights,\n                title,\n                labelEscapeNewLines: true\n            });\n        }\n        else {\n            data.detail.element.style.display = 'none';\n        }\n        // Separator\n        if (element.separator?.label) {\n            data.separator.textContent = element.separator.label;\n            data.separator.style.display = '';\n            this.addItemWithSeparator(element);\n        }\n        else {\n            data.separator.style.display = 'none';\n        }\n        data.entry.classList.toggle('quick-input-list-separator-border', !!element.separator);\n        // Actions\n        const buttons = mainItem.buttons;\n        if (buttons && buttons.length) {\n            data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireButtonTriggered({ button, item: element.item }))), { icon: true, label: false });\n            data.entry.classList.add('has-actions');\n        }\n        else {\n            data.entry.classList.remove('has-actions');\n        }\n    }\n    disposeElement(element, _index, data) {\n        this.removeItemWithSeparator(element.element);\n        super.disposeElement(element, _index, data);\n    }\n    isItemWithSeparatorVisible(item) {\n        return this._itemsWithSeparatorsFrequency.has(item);\n    }\n    addItemWithSeparator(item) {\n        this._itemsWithSeparatorsFrequency.set(item, (this._itemsWithSeparatorsFrequency.get(item) || 0) + 1);\n    }\n    removeItemWithSeparator(item) {\n        const frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n        if (frequency > 1) {\n            this._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n        }\n        else {\n            this._itemsWithSeparatorsFrequency.delete(item);\n        }\n    }\n};\nQuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = __decorate([\n    __param(1, IThemeService)\n], QuickPickItemElementRenderer);\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer {\n    constructor() {\n        super(...arguments);\n        // This is a frequency map because sticky scroll re-uses the same renderer to render a second\n        // instance of the same separator.\n        this._visibleSeparatorsFrequency = new Map();\n    }\n    static { this.ID = 'quickpickseparator'; }\n    get templateId() {\n        return QuickPickSeparatorElementRenderer.ID;\n    }\n    get visibleSeparators() {\n        return [...this._visibleSeparatorsFrequency.keys()];\n    }\n    isSeparatorVisible(separator) {\n        return this._visibleSeparatorsFrequency.has(separator);\n    }\n    renderTemplate(container) {\n        const data = super.renderTemplate(container);\n        data.checkbox.style.display = 'none';\n        return data;\n    }\n    renderElement(node, index, data) {\n        const element = node.element;\n        data.element = element;\n        element.element = data.entry ?? undefined;\n        element.element.classList.toggle('focus-inside', !!element.focusInsideSeparator);\n        const mainItem = element.separator;\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\n        // Icon\n        data.icon.style.backgroundImage = '';\n        data.icon.className = '';\n        // Label\n        let descriptionTitle;\n        // if we have a tooltip, that will be the hover,\n        // with the saneDescription as fallback if it\n        // is defined\n        if (!element.saneTooltip && element.saneDescription) {\n            descriptionTitle = {\n                markdown: {\n                    value: element.saneDescription,\n                    supportThemeIcons: true\n                },\n                markdownNotSupportedFallback: element.saneDescription\n            };\n        }\n        const options = {\n            matches: labelHighlights || [],\n            // If we have a tooltip, we want that to be shown and not any other hover\n            descriptionTitle,\n            descriptionMatches: descriptionHighlights || [],\n            labelEscapeNewLines: true\n        };\n        data.entry.classList.add('quick-input-list-separator-as-item');\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\n        // Detail\n        if (element.saneDetail) {\n            let title;\n            // If we have a tooltip, we want that to be shown and not any other hover\n            if (!element.saneTooltip) {\n                title = {\n                    markdown: {\n                        value: element.saneDetail,\n                        supportThemeIcons: true\n                    },\n                    markdownNotSupportedFallback: element.saneDetail\n                };\n            }\n            data.detail.element.style.display = '';\n            data.detail.setLabel(element.saneDetail, undefined, {\n                matches: detailHighlights,\n                title,\n                labelEscapeNewLines: true\n            });\n        }\n        else {\n            data.detail.element.style.display = 'none';\n        }\n        // Separator\n        data.separator.style.display = 'none';\n        data.entry.classList.add('quick-input-list-separator-border');\n        // Actions\n        const buttons = mainItem.buttons;\n        if (buttons && buttons.length) {\n            data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireSeparatorButtonTriggered({ button, separator: element.separator }))), { icon: true, label: false });\n            data.entry.classList.add('has-actions');\n        }\n        else {\n            data.entry.classList.remove('has-actions');\n        }\n        this.addSeparator(element);\n    }\n    disposeElement(element, _index, data) {\n        this.removeSeparator(element.element);\n        if (!this.isSeparatorVisible(element.element)) {\n            element.element.element?.classList.remove('focus-inside');\n        }\n        super.disposeElement(element, _index, data);\n    }\n    addSeparator(separator) {\n        this._visibleSeparatorsFrequency.set(separator, (this._visibleSeparatorsFrequency.get(separator) || 0) + 1);\n    }\n    removeSeparator(separator) {\n        const frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n        if (frequency > 1) {\n            this._visibleSeparatorsFrequency.set(separator, frequency - 1);\n        }\n        else {\n            this._visibleSeparatorsFrequency.delete(separator);\n        }\n    }\n}\nlet QuickInputTree = class QuickInputTree extends Disposable {\n    constructor(parent, hoverDelegate, linkOpenerDelegate, id, instantiationService, accessibilityService) {\n        super();\n        this.parent = parent;\n        this.hoverDelegate = hoverDelegate;\n        this.linkOpenerDelegate = linkOpenerDelegate;\n        this.accessibilityService = accessibilityService;\n        //#region QuickInputTree Events\n        this._onKeyDown = new Emitter();\n        this._onLeave = new Emitter();\n        /**\n         * Event that is fired when the tree would no longer have focus.\n        */\n        this.onLeave = this._onLeave.event;\n        this._visibleCountObservable = observableValue('VisibleCount', 0);\n        this.onChangedVisibleCount = Event.fromObservable(this._visibleCountObservable, this._store);\n        this._allVisibleCheckedObservable = observableValue('AllVisibleChecked', false);\n        this.onChangedAllVisibleChecked = Event.fromObservable(this._allVisibleCheckedObservable, this._store);\n        this._checkedCountObservable = observableValue('CheckedCount', 0);\n        this.onChangedCheckedCount = Event.fromObservable(this._checkedCountObservable, this._store);\n        this._checkedElementsObservable = observableValueOpts({ equalsFn: equals }, new Array());\n        this.onChangedCheckedElements = Event.fromObservable(this._checkedElementsObservable, this._store);\n        this._onButtonTriggered = new Emitter();\n        this.onButtonTriggered = this._onButtonTriggered.event;\n        this._onSeparatorButtonTriggered = new Emitter();\n        this.onSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n        this._elementChecked = new Emitter();\n        this._elementCheckedEventBufferer = new EventBufferer();\n        //#endregion\n        this._hasCheckboxes = false;\n        this._inputElements = new Array();\n        this._elementTree = new Array();\n        this._itemElements = new Array();\n        // Elements that apply to the current set of elements\n        this._elementDisposable = this._register(new DisposableStore());\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._matchOnLabelMode = 'fuzzy';\n        this._sortByLabel = true;\n        this._shouldLoop = true;\n        this._container = dom.append(this.parent, $('.quick-input-list'));\n        this._separatorRenderer = new QuickPickSeparatorElementRenderer(hoverDelegate);\n        this._itemRenderer = instantiationService.createInstance(QuickPickItemElementRenderer, hoverDelegate);\n        this._tree = this._register(instantiationService.createInstance((WorkbenchObjectTree), 'QuickInput', this._container, new QuickInputItemDelegate(), [this._itemRenderer, this._separatorRenderer], {\n            filter: {\n                filter(element) {\n                    return element.hidden\n                        ? 0 /* TreeVisibility.Hidden */\n                        : element instanceof QuickPickSeparatorElement\n                            ? 2 /* TreeVisibility.Recurse */\n                            : 1 /* TreeVisibility.Visible */;\n                },\n            },\n            sorter: {\n                compare: (element, otherElement) => {\n                    if (!this.sortByLabel || !this._lastQueryString) {\n                        return 0;\n                    }\n                    const normalizedSearchValue = this._lastQueryString.toLowerCase();\n                    return compareEntries(element, otherElement, normalizedSearchValue);\n                },\n            },\n            accessibilityProvider: new QuickInputAccessibilityProvider(),\n            setRowLineHeight: false,\n            multipleSelectionSupport: false,\n            hideTwistiesOfChildlessElements: true,\n            renderIndentGuides: RenderIndentGuides.None,\n            findWidgetEnabled: false,\n            indent: 0,\n            horizontalScrolling: false,\n            allowNonCollapsibleParents: true,\n            alwaysConsumeMouseWheel: true\n        }));\n        this._tree.getHTMLElement().id = id;\n        this._registerListeners();\n    }\n    //#region public getters/setters\n    get onDidChangeFocus() {\n        return Event.map(this._tree.onDidChangeFocus, e => e.elements.filter((e) => e instanceof QuickPickItemElement).map(e => e.item), this._store);\n    }\n    get onDidChangeSelection() {\n        return Event.map(this._tree.onDidChangeSelection, e => ({\n            items: e.elements.filter((e) => e instanceof QuickPickItemElement).map(e => e.item),\n            event: e.browserEvent\n        }), this._store);\n    }\n    get displayed() {\n        return this._container.style.display !== 'none';\n    }\n    set displayed(value) {\n        this._container.style.display = value ? '' : 'none';\n    }\n    get scrollTop() {\n        return this._tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this._tree.scrollTop = scrollTop;\n    }\n    get ariaLabel() {\n        return this._tree.ariaLabel;\n    }\n    set ariaLabel(label) {\n        this._tree.ariaLabel = label ?? '';\n    }\n    set enabled(value) {\n        this._tree.getHTMLElement().style.pointerEvents = value ? '' : 'none';\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(value) {\n        this._matchOnDescription = value;\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(value) {\n        this._matchOnDetail = value;\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(value) {\n        this._matchOnLabel = value;\n    }\n    get matchOnLabelMode() {\n        return this._matchOnLabelMode;\n    }\n    set matchOnLabelMode(value) {\n        this._matchOnLabelMode = value;\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(value) {\n        this._sortByLabel = value;\n    }\n    get shouldLoop() {\n        return this._shouldLoop;\n    }\n    set shouldLoop(value) {\n        this._shouldLoop = value;\n    }\n    //#endregion\n    //#region register listeners\n    _registerListeners() {\n        this._registerOnKeyDown();\n        this._registerOnContainerClick();\n        this._registerOnMouseMiddleClick();\n        this._registerOnTreeModelChanged();\n        this._registerOnElementChecked();\n        this._registerOnContextMenu();\n        this._registerHoverListeners();\n        this._registerSelectionChangeListener();\n        this._registerSeparatorActionShowingListeners();\n    }\n    _registerOnKeyDown() {\n        // TODO: Should this be added at a higher level?\n        this._register(this._tree.onKeyDown(e => {\n            const event = new StandardKeyboardEvent(e);\n            switch (event.keyCode) {\n                case 10 /* KeyCode.Space */:\n                    this.toggleCheckbox();\n                    break;\n            }\n            this._onKeyDown.fire(event);\n        }));\n    }\n    _registerOnContainerClick() {\n        this._register(dom.addDisposableListener(this._container, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space' on checkbox.\n                this._onLeave.fire();\n            }\n        }));\n    }\n    _registerOnMouseMiddleClick() {\n        this._register(dom.addDisposableListener(this._container, dom.EventType.AUXCLICK, e => {\n            if (e.button === 1) {\n                this._onLeave.fire();\n            }\n        }));\n    }\n    _registerOnTreeModelChanged() {\n        this._register(this._tree.onDidChangeModel(() => {\n            const visibleCount = this._itemElements.filter(e => !e.hidden).length;\n            this._visibleCountObservable.set(visibleCount, undefined);\n            if (this._hasCheckboxes) {\n                this._updateCheckedObservables();\n            }\n        }));\n    }\n    _registerOnElementChecked() {\n        // Only fire the last event when buffered\n        this._register(this._elementCheckedEventBufferer.wrapEvent(this._elementChecked.event, (_, e) => e)(_ => this._updateCheckedObservables()));\n    }\n    _registerOnContextMenu() {\n        this._register(this._tree.onContextMenu(e => {\n            if (e.element) {\n                e.browserEvent.preventDefault();\n                // we want to treat a context menu event as\n                // a gesture to open the item at the index\n                // since we do not have any context menu\n                // this enables for example macOS to Ctrl-\n                // click on an item to open it.\n                this._tree.setSelection([e.element]);\n            }\n        }));\n    }\n    _registerHoverListeners() {\n        const delayer = this._register(new ThrottledDelayer(this.hoverDelegate.delay));\n        this._register(this._tree.onMouseOver(async (e) => {\n            // If we hover over an anchor element, we don't want to show the hover because\n            // the anchor may have a tooltip that we want to show instead.\n            if (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n                delayer.cancel();\n                return;\n            }\n            if (\n            // anchors are an exception as called out above so we skip them here\n            !(dom.isHTMLAnchorElement(e.browserEvent.relatedTarget)) &&\n                // check if the mouse is still over the same element\n                dom.isAncestor(e.browserEvent.relatedTarget, e.element?.element)) {\n                return;\n            }\n            try {\n                await delayer.trigger(async () => {\n                    if (e.element instanceof QuickPickItemElement) {\n                        this.showHover(e.element);\n                    }\n                });\n            }\n            catch (e) {\n                // Ignore cancellation errors due to mouse out\n                if (!isCancellationError(e)) {\n                    throw e;\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOut(e => {\n            // onMouseOut triggers every time a new element has been moused over\n            // even if it's on the same list item. We only want one event, so we\n            // check if the mouse is still over the same element.\n            if (dom.isAncestor(e.browserEvent.relatedTarget, e.element?.element)) {\n                return;\n            }\n            delayer.cancel();\n        }));\n    }\n    /**\n     * Register's focus change and mouse events so that we can track when items inside of a\n     * separator's section are focused or hovered so that we can display the separator's actions\n     */\n    _registerSeparatorActionShowingListeners() {\n        this._register(this._tree.onDidChangeFocus(e => {\n            const parent = e.elements[0]\n                ? this._tree.getParentElement(e.elements[0])\n                // treat null as focus lost and when we have no separators\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                const value = separator === parent;\n                // get bitness of ACTIVE_ITEM and check if it changed\n                const currentActive = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.ACTIVE_ITEM);\n                if (currentActive !== value) {\n                    if (value) {\n                        separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n                    }\n                    else {\n                        separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n                    }\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOver(e => {\n            const parent = e.element\n                ? this._tree.getParentElement(e.element)\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                if (separator !== parent) {\n                    continue;\n                }\n                const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n                if (!currentMouse) {\n                    separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.MOUSE_HOVER;\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOut(e => {\n            const parent = e.element\n                ? this._tree.getParentElement(e.element)\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                if (separator !== parent) {\n                    continue;\n                }\n                const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n                if (currentMouse) {\n                    separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n    }\n    _registerSelectionChangeListener() {\n        // When the user selects a separator, the separator will move to the top and focus will be\n        // set to the first element after the separator.\n        this._register(this._tree.onDidChangeSelection(e => {\n            const elementsWithoutSeparators = e.elements.filter((e) => e instanceof QuickPickItemElement);\n            if (elementsWithoutSeparators.length !== e.elements.length) {\n                if (e.elements.length === 1 && e.elements[0] instanceof QuickPickSeparatorElement) {\n                    this._tree.setFocus([e.elements[0].children[0]]);\n                    this._tree.reveal(e.elements[0], 0);\n                }\n                this._tree.setSelection(elementsWithoutSeparators);\n            }\n        }));\n    }\n    //#endregion\n    //#region public methods\n    setAllVisibleChecked(checked) {\n        this._elementCheckedEventBufferer.bufferEvents(() => {\n            this._itemElements.forEach(element => {\n                if (!element.hidden && !element.checkboxDisabled) {\n                    // Would fire an event if we didn't beffer the events\n                    element.checked = checked;\n                }\n            });\n        });\n    }\n    setElements(inputElements) {\n        this._elementDisposable.clear();\n        this._lastQueryString = undefined;\n        this._inputElements = inputElements;\n        this._hasCheckboxes = this.parent.classList.contains('show-checkboxes');\n        let currentSeparatorElement;\n        this._itemElements = new Array();\n        this._elementTree = inputElements.reduce((result, item, index) => {\n            let element;\n            if (item.type === 'separator') {\n                if (!item.buttons) {\n                    // This separator will be rendered as a part of the list item\n                    return result;\n                }\n                currentSeparatorElement = new QuickPickSeparatorElement(index, e => this._onSeparatorButtonTriggered.fire(e), item);\n                element = currentSeparatorElement;\n            }\n            else {\n                const previous = index > 0 ? inputElements[index - 1] : undefined;\n                let separator;\n                if (previous && previous.type === 'separator' && !previous.buttons) {\n                    // Found an inline separator so we clear out the current separator element\n                    currentSeparatorElement = undefined;\n                    separator = previous;\n                }\n                const qpi = new QuickPickItemElement(index, this._hasCheckboxes, e => this._onButtonTriggered.fire(e), this._elementChecked, item, separator);\n                this._itemElements.push(qpi);\n                if (currentSeparatorElement) {\n                    currentSeparatorElement.children.push(qpi);\n                    return result;\n                }\n                element = qpi;\n            }\n            result.push(element);\n            return result;\n        }, new Array());\n        this._setElementsToTree(this._elementTree);\n        // Accessibility hack, unfortunately on next tick\n        // https://github.com/microsoft/vscode/issues/211976\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            setTimeout(() => {\n                const focusedElement = this._tree.getHTMLElement().querySelector(`.monaco-list-row.focused`);\n                const parent = focusedElement?.parentNode;\n                if (focusedElement && parent) {\n                    const nextSibling = focusedElement.nextSibling;\n                    focusedElement.remove();\n                    parent.insertBefore(focusedElement, nextSibling);\n                }\n            }, 0);\n        }\n    }\n    setFocusedElements(items) {\n        const elements = items.map(item => this._itemElements.find(e => e.item === item))\n            .filter((e) => !!e)\n            .filter(e => !e.hidden);\n        this._tree.setFocus(elements);\n        if (items.length > 0) {\n            const focused = this._tree.getFocus()[0];\n            if (focused) {\n                this._tree.reveal(focused);\n            }\n        }\n    }\n    getActiveDescendant() {\n        return this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n    }\n    setSelectedElements(items) {\n        const elements = items.map(item => this._itemElements.find(e => e.item === item))\n            .filter((e) => !!e);\n        this._tree.setSelection(elements);\n    }\n    getCheckedElements() {\n        return this._itemElements.filter(e => e.checked)\n            .map(e => e.item);\n    }\n    setCheckedElements(items) {\n        this._elementCheckedEventBufferer.bufferEvents(() => {\n            const checked = new Set();\n            for (const item of items) {\n                checked.add(item);\n            }\n            for (const element of this._itemElements) {\n                // Would fire an event if we didn't beffer the events\n                element.checked = checked.has(element.item);\n            }\n        });\n    }\n    focus(what) {\n        if (!this._itemElements.length) {\n            return;\n        }\n        if (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n            what = QuickPickFocus.First;\n        }\n        switch (what) {\n            case QuickPickFocus.First:\n                this._tree.scrollTop = 0;\n                this._tree.focusFirst(undefined, (e) => e.element instanceof QuickPickItemElement);\n                break;\n            case QuickPickFocus.Second: {\n                this._tree.scrollTop = 0;\n                let isSecondItem = false;\n                this._tree.focusFirst(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    if (isSecondItem) {\n                        return true;\n                    }\n                    isSecondItem = !isSecondItem;\n                    return false;\n                });\n                break;\n            }\n            case QuickPickFocus.Last:\n                this._tree.scrollTop = this._tree.scrollHeight;\n                this._tree.focusLast(undefined, (e) => e.element instanceof QuickPickItemElement);\n                break;\n            case QuickPickFocus.Next: {\n                const prevFocus = this._tree.getFocus();\n                this._tree.focusNext(undefined, this._shouldLoop, undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    this._tree.reveal(e.element);\n                    return true;\n                });\n                const currentFocus = this._tree.getFocus();\n                if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[this._itemElements.length - 1]) {\n                    this._onLeave.fire();\n                }\n                break;\n            }\n            case QuickPickFocus.Previous: {\n                const prevFocus = this._tree.getFocus();\n                this._tree.focusPrevious(undefined, this._shouldLoop, undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    const parent = this._tree.getParentElement(e.element);\n                    if (parent === null || parent.children[0] !== e.element) {\n                        this._tree.reveal(e.element);\n                    }\n                    else {\n                        // Only if we are the first child of a separator do we reveal the separator\n                        this._tree.reveal(parent);\n                    }\n                    return true;\n                });\n                const currentFocus = this._tree.getFocus();\n                if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[0]) {\n                    this._onLeave.fire();\n                }\n                break;\n            }\n            case QuickPickFocus.NextPage:\n                this._tree.focusNextPage(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    this._tree.reveal(e.element);\n                    return true;\n                });\n                break;\n            case QuickPickFocus.PreviousPage:\n                this._tree.focusPreviousPage(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    const parent = this._tree.getParentElement(e.element);\n                    if (parent === null || parent.children[0] !== e.element) {\n                        this._tree.reveal(e.element);\n                    }\n                    else {\n                        this._tree.reveal(parent);\n                    }\n                    return true;\n                });\n                break;\n            case QuickPickFocus.NextSeparator: {\n                let foundSeparatorAsItem = false;\n                const before = this._tree.getFocus()[0];\n                this._tree.focusNext(undefined, true, undefined, (e) => {\n                    if (foundSeparatorAsItem) {\n                        // This should be the index right after the separator so it\n                        // is the item we want to focus.\n                        return true;\n                    }\n                    if (e.element instanceof QuickPickSeparatorElement) {\n                        foundSeparatorAsItem = true;\n                        // If the separator is visible, then we should just reveal its first child so it's not as jarring.\n                        if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                            this._tree.reveal(e.element.children[0]);\n                        }\n                        else {\n                            // If the separator is not visible, then we should\n                            // push it up to the top of the list.\n                            this._tree.reveal(e.element, 0);\n                        }\n                    }\n                    else if (e.element instanceof QuickPickItemElement) {\n                        if (e.element.separator) {\n                            if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                                this._tree.reveal(e.element);\n                            }\n                            else {\n                                this._tree.reveal(e.element, 0);\n                            }\n                            return true;\n                        }\n                        else if (e.element === this._elementTree[0]) {\n                            // We should stop at the first item in the list if it's a regular item.\n                            this._tree.reveal(e.element, 0);\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                const after = this._tree.getFocus()[0];\n                if (before === after) {\n                    // If we didn't move, then we should just move to the end\n                    // of the list.\n                    this._tree.scrollTop = this._tree.scrollHeight;\n                    this._tree.focusLast(undefined, (e) => e.element instanceof QuickPickItemElement);\n                }\n                break;\n            }\n            case QuickPickFocus.PreviousSeparator: {\n                let focusElement;\n                // If we are already sitting on an inline separator, then we\n                // have already found the _current_ separator and need to\n                // move to the previous one.\n                let foundSeparator = !!this._tree.getFocus()[0]?.separator;\n                this._tree.focusPrevious(undefined, true, undefined, (e) => {\n                    if (e.element instanceof QuickPickSeparatorElement) {\n                        if (foundSeparator) {\n                            if (!focusElement) {\n                                if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                                    this._tree.reveal(e.element);\n                                }\n                                else {\n                                    this._tree.reveal(e.element, 0);\n                                }\n                                focusElement = e.element.children[0];\n                            }\n                        }\n                        else {\n                            foundSeparator = true;\n                        }\n                    }\n                    else if (e.element instanceof QuickPickItemElement) {\n                        if (!focusElement) {\n                            if (e.element.separator) {\n                                if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                                    this._tree.reveal(e.element);\n                                }\n                                else {\n                                    this._tree.reveal(e.element, 0);\n                                }\n                                focusElement = e.element;\n                            }\n                            else if (e.element === this._elementTree[0]) {\n                                // We should stop at the first item in the list if it's a regular item.\n                                this._tree.reveal(e.element, 0);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                });\n                if (focusElement) {\n                    this._tree.setFocus([focusElement]);\n                }\n                break;\n            }\n        }\n    }\n    clearFocus() {\n        this._tree.setFocus([]);\n    }\n    domFocus() {\n        this._tree.domFocus();\n    }\n    layout(maxHeight) {\n        this._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n        // Make sure height aligns with list item heights\n        Math.floor(maxHeight / 44) * 44\n            // Add some extra height so that it's clear there's more to scroll\n            + 6}px` : '';\n        this._tree.layout();\n    }\n    filter(query) {\n        this._lastQueryString = query;\n        if (!(this._sortByLabel || this._matchOnLabel || this._matchOnDescription || this._matchOnDetail)) {\n            this._tree.layout();\n            return false;\n        }\n        const queryWithWhitespace = query;\n        query = query.trim();\n        // Reset filtering\n        if (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\n            this._itemElements.forEach(element => {\n                element.labelHighlights = undefined;\n                element.descriptionHighlights = undefined;\n                element.detailHighlights = undefined;\n                element.hidden = false;\n                const previous = element.index && this._inputElements[element.index - 1];\n                if (element.item) {\n                    element.separator = previous && previous.type === 'separator' && !previous.buttons ? previous : undefined;\n                }\n            });\n        }\n        // Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n        else {\n            let currentSeparator;\n            this._itemElements.forEach(element => {\n                let labelHighlights;\n                if (this.matchOnLabelMode === 'fuzzy') {\n                    labelHighlights = this.matchOnLabel ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n                }\n                else {\n                    labelHighlights = this.matchOnLabel ? matchesContiguousIconAware(queryWithWhitespace, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n                }\n                const descriptionHighlights = this.matchOnDescription ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || '')) ?? undefined : undefined;\n                const detailHighlights = this.matchOnDetail ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || '')) ?? undefined : undefined;\n                if (labelHighlights || descriptionHighlights || detailHighlights) {\n                    element.labelHighlights = labelHighlights;\n                    element.descriptionHighlights = descriptionHighlights;\n                    element.detailHighlights = detailHighlights;\n                    element.hidden = false;\n                }\n                else {\n                    element.labelHighlights = undefined;\n                    element.descriptionHighlights = undefined;\n                    element.detailHighlights = undefined;\n                    element.hidden = element.item ? !element.item.alwaysShow : true;\n                }\n                // Ensure separators are filtered out first before deciding if we need to bring them back\n                if (element.item) {\n                    element.separator = undefined;\n                }\n                else if (element.separator) {\n                    element.hidden = true;\n                }\n                // we can show the separator unless the list gets sorted by match\n                if (!this.sortByLabel) {\n                    const previous = element.index && this._inputElements[element.index - 1] || undefined;\n                    if (previous?.type === 'separator' && !previous.buttons) {\n                        currentSeparator = previous;\n                    }\n                    if (currentSeparator && !element.hidden) {\n                        element.separator = currentSeparator;\n                        currentSeparator = undefined;\n                    }\n                }\n            });\n        }\n        this._setElementsToTree(this._sortByLabel && query\n            // We don't render any separators if we're sorting so just render the elements\n            ? this._itemElements\n            // Render the full tree\n            : this._elementTree);\n        this._tree.layout();\n        return true;\n    }\n    toggleCheckbox() {\n        this._elementCheckedEventBufferer.bufferEvents(() => {\n            const elements = this._tree.getFocus().filter((e) => e instanceof QuickPickItemElement);\n            const allChecked = this._allVisibleChecked(elements);\n            for (const element of elements) {\n                if (!element.checkboxDisabled) {\n                    // Would fire an event if we didn't have the flag set\n                    element.checked = !allChecked;\n                }\n            }\n        });\n    }\n    style(styles) {\n        this._tree.style(styles);\n    }\n    toggleHover() {\n        const focused = this._tree.getFocus()[0];\n        if (!focused?.saneTooltip || !(focused instanceof QuickPickItemElement)) {\n            return;\n        }\n        // if there's a hover already, hide it (toggle off)\n        if (this._lastHover && !this._lastHover.isDisposed) {\n            this._lastHover.dispose();\n            return;\n        }\n        // If there is no hover, show it (toggle on)\n        this.showHover(focused);\n        const store = new DisposableStore();\n        store.add(this._tree.onDidChangeFocus(e => {\n            if (e.elements[0] instanceof QuickPickItemElement) {\n                this.showHover(e.elements[0]);\n            }\n        }));\n        if (this._lastHover) {\n            store.add(this._lastHover);\n        }\n        this._elementDisposable.add(store);\n    }\n    //#endregion\n    //#region private methods\n    _setElementsToTree(elements) {\n        const treeElements = new Array();\n        for (const element of elements) {\n            if (element instanceof QuickPickSeparatorElement) {\n                treeElements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                    children: element.children.map(e => ({\n                        element: e,\n                        collapsible: false,\n                        collapsed: false,\n                    })),\n                });\n            }\n            else {\n                treeElements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                });\n            }\n        }\n        this._tree.setChildren(null, treeElements);\n    }\n    _allVisibleChecked(elements, whenNoneVisible = true) {\n        for (let i = 0, n = elements.length; i < n; i++) {\n            const element = elements[i];\n            if (!element.hidden) {\n                if (!element.checked) {\n                    return false;\n                }\n                else {\n                    whenNoneVisible = true;\n                }\n            }\n        }\n        return whenNoneVisible;\n    }\n    _updateCheckedObservables() {\n        transaction((tx) => {\n            this._allVisibleCheckedObservable.set(this._allVisibleChecked(this._itemElements, false), tx);\n            const checkedCount = this._itemElements.filter(element => element.checked).length;\n            this._checkedCountObservable.set(checkedCount, tx);\n            this._checkedElementsObservable.set(this.getCheckedElements(), tx);\n        });\n    }\n    /**\n     * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n     * @param element The element to show the hover for\n     */\n    showHover(element) {\n        if (this._lastHover && !this._lastHover.isDisposed) {\n            this.hoverDelegate.onDidHideHover?.();\n            this._lastHover?.dispose();\n        }\n        if (!element.element || !element.saneTooltip) {\n            return;\n        }\n        this._lastHover = this.hoverDelegate.showHover({\n            content: element.saneTooltip,\n            target: element.element,\n            linkHandler: (url) => {\n                this.linkOpenerDelegate(url);\n            },\n            appearance: {\n                showPointer: true,\n            },\n            container: this._container,\n            position: {\n                hoverPosition: 1 /* HoverPosition.RIGHT */\n            }\n        }, false);\n    }\n};\n__decorate([\n    memoize\n], QuickInputTree.prototype, \"onDidChangeFocus\", null);\n__decorate([\n    memoize\n], QuickInputTree.prototype, \"onDidChangeSelection\", null);\nQuickInputTree = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IAccessibilityService)\n], QuickInputTree);\nexport { QuickInputTree };\nfunction matchesContiguousIconAware(query, target) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesContiguous(query, text);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesContiguous(query, wordToMatchAgainstWithoutIconsTrimmed);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\nfunction matchesContiguous(word, wordToMatchAgainst) {\n    const matchIndex = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n    if (matchIndex !== -1) {\n        return [{ start: matchIndex, end: matchIndex + word.length }];\n    }\n    return null;\n}\nfunction compareEntries(elementA, elementB, lookFor) {\n    const labelHighlightsA = elementA.labelHighlights || [];\n    const labelHighlightsB = elementB.labelHighlights || [];\n    if (labelHighlightsA.length && !labelHighlightsB.length) {\n        return -1;\n    }\n    if (!labelHighlightsA.length && labelHighlightsB.length) {\n        return 1;\n    }\n    if (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n        return 0;\n    }\n    return compareAnything(elementA.saneSortLabel, elementB.saneSortLabel, lookFor);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isMacintosh } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { ContextKeyExpr } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContext } from '../../contextkey/common/contextkeys.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nimport { endOfQuickInputBoxContext, inQuickInputContext, quickInputTypeContextKeyValue } from './quickInput.js';\nimport { IQuickInputService, QuickPickFocus } from '../common/quickInput.js';\nconst defaultCommandAndKeybindingRule = {\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    when: ContextKeyExpr.and(ContextKeyExpr.equals(quickInputTypeContextKeyValue, \"quickPick\" /* QuickInputType.QuickPick */), inQuickInputContext),\n    metadata: { description: localize('quickPick', \"Used while in the context of the quick pick. If you change one keybinding for this command, you should change all of the other keybindings (modifier variants) of this command as well.\") }\n};\nfunction registerQuickPickCommandAndKeybindingRule(rule, options = {}) {\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        ...defaultCommandAndKeybindingRule,\n        ...rule,\n        secondary: getSecondary(rule.primary, rule.secondary ?? [], options)\n    });\n}\nconst ctrlKeyMod = isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */;\n// This function will generate all the combinations of keybindings for the given primary keybinding\nfunction getSecondary(primary, secondary, options = {}) {\n    if (options.withAltMod) {\n        secondary.push(512 /* KeyMod.Alt */ + primary);\n    }\n    if (options.withCtrlMod) {\n        secondary.push(ctrlKeyMod + primary);\n        if (options.withAltMod) {\n            secondary.push(512 /* KeyMod.Alt */ + ctrlKeyMod + primary);\n        }\n    }\n    if (options.withCmdMod && isMacintosh) {\n        secondary.push(2048 /* KeyMod.CtrlCmd */ + primary);\n        if (options.withCtrlMod) {\n            secondary.push(2048 /* KeyMod.CtrlCmd */ + 256 /* KeyMod.WinCtrl */ + primary);\n        }\n        if (options.withAltMod) {\n            secondary.push(2048 /* KeyMod.CtrlCmd */ + 512 /* KeyMod.Alt */ + primary);\n            if (options.withCtrlMod) {\n                secondary.push(2048 /* KeyMod.CtrlCmd */ + 512 /* KeyMod.Alt */ + 256 /* KeyMod.WinCtrl */ + primary);\n            }\n        }\n    }\n    return secondary;\n}\n//#region Navigation\nfunction focusHandler(focus, focusOnQuickNatigate) {\n    return accessor => {\n        // Assuming this is a quick pick due to above when clause\n        const currentQuickPick = accessor.get(IQuickInputService).currentQuickInput;\n        if (!currentQuickPick) {\n            return;\n        }\n        if (focusOnQuickNatigate && currentQuickPick.quickNavigate) {\n            return currentQuickPick.focus(focusOnQuickNatigate);\n        }\n        return currentQuickPick.focus(focus);\n    };\n}\nregisterQuickPickCommandAndKeybindingRule({ id: 'quickInput.pageNext', primary: 12 /* KeyCode.PageDown */, handler: focusHandler(QuickPickFocus.NextPage) }, { withAltMod: true, withCtrlMod: true, withCmdMod: true });\nregisterQuickPickCommandAndKeybindingRule({ id: 'quickInput.pagePrevious', primary: 11 /* KeyCode.PageUp */, handler: focusHandler(QuickPickFocus.PreviousPage) }, { withAltMod: true, withCtrlMod: true, withCmdMod: true });\nregisterQuickPickCommandAndKeybindingRule({ id: 'quickInput.first', primary: ctrlKeyMod + 14 /* KeyCode.Home */, handler: focusHandler(QuickPickFocus.First) }, { withAltMod: true, withCmdMod: true });\nregisterQuickPickCommandAndKeybindingRule({ id: 'quickInput.last', primary: ctrlKeyMod + 13 /* KeyCode.End */, handler: focusHandler(QuickPickFocus.Last) }, { withAltMod: true, withCmdMod: true });\nregisterQuickPickCommandAndKeybindingRule({ id: 'quickInput.next', primary: 18 /* KeyCode.DownArrow */, handler: focusHandler(QuickPickFocus.Next) }, { withCtrlMod: true });\nregisterQuickPickCommandAndKeybindingRule({ id: 'quickInput.previous', primary: 16 /* KeyCode.UpArrow */, handler: focusHandler(QuickPickFocus.Previous) }, { withCtrlMod: true });\n// The next & previous separator commands are interesting because if we are in quick access mode, we are already holding a modifier key down.\n// In this case, we want that modifier key+up/down to navigate to the next/previous item, not the next/previous separator.\n// To handle this, we have a separate command for navigating to the next/previous separator when we are not in quick access mode.\n// If, however, we are in quick access mode, and you hold down an additional modifier key, we will navigate to the next/previous separator.\nconst nextSeparatorFallbackDesc = localize('quickInput.nextSeparatorWithQuickAccessFallback', \"If we're in quick access mode, this will navigate to the next item. If we are not in quick access mode, this will navigate to the next separator.\");\nconst prevSeparatorFallbackDesc = localize('quickInput.previousSeparatorWithQuickAccessFallback', \"If we're in quick access mode, this will navigate to the previous item. If we are not in quick access mode, this will navigate to the previous separator.\");\nif (isMacintosh) {\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.nextSeparatorWithQuickAccessFallback',\n        primary: 2048 /* KeyMod.CtrlCmd */ + 18 /* KeyCode.DownArrow */,\n        handler: focusHandler(QuickPickFocus.NextSeparator, QuickPickFocus.Next),\n        metadata: { description: nextSeparatorFallbackDesc }\n    });\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.nextSeparator',\n        primary: 2048 /* KeyMod.CtrlCmd */ + 512 /* KeyMod.Alt */ + 18 /* KeyCode.DownArrow */,\n        // Since macOS has the cmd key as the primary modifier, we need to add this additional\n        // keybinding to capture cmd+ctrl+upArrow\n        secondary: [2048 /* KeyMod.CtrlCmd */ + 256 /* KeyMod.WinCtrl */ + 18 /* KeyCode.DownArrow */],\n        handler: focusHandler(QuickPickFocus.NextSeparator)\n    }, { withCtrlMod: true });\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.previousSeparatorWithQuickAccessFallback',\n        primary: 2048 /* KeyMod.CtrlCmd */ + 16 /* KeyCode.UpArrow */,\n        handler: focusHandler(QuickPickFocus.PreviousSeparator, QuickPickFocus.Previous),\n        metadata: { description: prevSeparatorFallbackDesc }\n    });\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.previousSeparator',\n        primary: 2048 /* KeyMod.CtrlCmd */ + 512 /* KeyMod.Alt */ + 16 /* KeyCode.UpArrow */,\n        // Since macOS has the cmd key as the primary modifier, we need to add this additional\n        // keybinding to capture cmd+ctrl+upArrow\n        secondary: [2048 /* KeyMod.CtrlCmd */ + 256 /* KeyMod.WinCtrl */ + 16 /* KeyCode.UpArrow */],\n        handler: focusHandler(QuickPickFocus.PreviousSeparator)\n    }, { withCtrlMod: true });\n}\nelse {\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.nextSeparatorWithQuickAccessFallback',\n        primary: 512 /* KeyMod.Alt */ + 18 /* KeyCode.DownArrow */,\n        handler: focusHandler(QuickPickFocus.NextSeparator, QuickPickFocus.Next),\n        metadata: { description: nextSeparatorFallbackDesc }\n    });\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.nextSeparator',\n        primary: 2048 /* KeyMod.CtrlCmd */ + 512 /* KeyMod.Alt */ + 18 /* KeyCode.DownArrow */,\n        handler: focusHandler(QuickPickFocus.NextSeparator)\n    });\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.previousSeparatorWithQuickAccessFallback',\n        primary: 512 /* KeyMod.Alt */ + 16 /* KeyCode.UpArrow */,\n        handler: focusHandler(QuickPickFocus.PreviousSeparator, QuickPickFocus.Previous),\n        metadata: { description: prevSeparatorFallbackDesc }\n    });\n    registerQuickPickCommandAndKeybindingRule({\n        id: 'quickInput.previousSeparator',\n        primary: 2048 /* KeyMod.CtrlCmd */ + 512 /* KeyMod.Alt */ + 16 /* KeyCode.UpArrow */,\n        handler: focusHandler(QuickPickFocus.PreviousSeparator)\n    });\n}\n//#endregion\n//#region Accept\nregisterQuickPickCommandAndKeybindingRule({\n    id: 'quickInput.acceptInBackground',\n    // If we are in the quick pick but the input box is not focused or our cursor is at the end of the input box\n    when: ContextKeyExpr.and(defaultCommandAndKeybindingRule.when, ContextKeyExpr.or(InputFocusedContext.negate(), endOfQuickInputBoxContext)),\n    primary: 17 /* KeyCode.RightArrow */,\n    // Need a little extra weight to ensure this keybinding is preferred over the default cmd+alt+right arrow keybinding\n    // https://github.com/microsoft/vscode/blob/1451e4fbbbf074a4355cc537c35b547b80ce1c52/src/vs/workbench/browser/parts/editor/editorActions.ts#L1178-L1195\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */ + 50,\n    handler: (accessor) => {\n        const currentQuickPick = accessor.get(IQuickInputService).currentQuickInput;\n        currentQuickPick?.accept(true);\n    },\n}, { withAltMod: true, withCtrlMod: true, withCmdMod: true });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar QuickInputController_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickPick, backButton, InputBox, InQuickInputContextKey, QuickInputTypeContextKey, EndOfQuickInputBoxContextKey } from './quickInput.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { QuickInputTree } from './quickInputTree.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport './quickInputActions.js';\nconst $ = dom.$;\nlet QuickInputController = class QuickInputController extends Disposable {\n    static { QuickInputController_1 = this; }\n    static { this.MAX_WIDTH = 600; } // Max total width of quick input widget\n    get currentQuickInput() { return this.controller ?? undefined; }\n    get container() { return this._container; }\n    constructor(options, layoutService, instantiationService, contextKeyService) {\n        super();\n        this.options = options;\n        this.layoutService = layoutService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.enabled = true;\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.keyMods = { ctrlCmd: false, alt: false };\n        this.controller = null;\n        this.onShowEmitter = this._register(new Emitter());\n        this.onShow = this.onShowEmitter.event;\n        this.onHideEmitter = this._register(new Emitter());\n        this.onHide = this.onHideEmitter.event;\n        this.inQuickInputContext = InQuickInputContextKey.bindTo(this.contextKeyService);\n        this.quickInputTypeContext = QuickInputTypeContextKey.bindTo(this.contextKeyService);\n        this.endOfQuickInputBoxContext = EndOfQuickInputBoxContextKey.bindTo(this.contextKeyService);\n        this.idPrefix = options.idPrefix;\n        this._container = options.container;\n        this.styles = options.styles;\n        this._register(Event.runAndSubscribe(dom.onDidRegisterWindow, ({ window, disposables }) => this.registerKeyModsListeners(window, disposables), { window: mainWindow, disposables: this._store }));\n        this._register(dom.onWillUnregisterWindow(window => {\n            if (this.ui && dom.getWindow(this.ui.container) === window) {\n                // The window this quick input is contained in is about to\n                // close, so we have to make sure to reparent it back to an\n                // existing parent to not loose functionality.\n                // (https://github.com/microsoft/vscode/issues/195870)\n                this.reparentUI(this.layoutService.mainContainer);\n                this.layout(this.layoutService.mainContainerDimension, this.layoutService.mainContainerOffset.quickPickTop);\n            }\n        }));\n    }\n    registerKeyModsListeners(window, disposables) {\n        const listener = (e) => {\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n            this.keyMods.alt = e.altKey;\n        };\n        for (const event of [dom.EventType.KEY_DOWN, dom.EventType.KEY_UP, dom.EventType.MOUSE_DOWN]) {\n            disposables.add(dom.addDisposableListener(window, event, listener, true));\n        }\n    }\n    getUI(showInActiveContainer) {\n        if (this.ui) {\n            // In order to support aux windows, re-parent the controller\n            // if the original event is from a different document\n            if (showInActiveContainer) {\n                if (dom.getWindow(this._container) !== dom.getWindow(this.layoutService.activeContainer)) {\n                    this.reparentUI(this.layoutService.activeContainer);\n                    this.layout(this.layoutService.activeContainerDimension, this.layoutService.activeContainerOffset.quickPickTop);\n                }\n            }\n            return this.ui;\n        }\n        const container = dom.append(this._container, $('.quick-input-widget.show-file-icons'));\n        container.tabIndex = -1;\n        container.style.display = 'none';\n        const styleSheet = dom.createStyleSheet(container);\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\n        const leftActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n        const title = dom.append(titleBar, $('.quick-input-title'));\n        const rightActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n        const headerContainer = dom.append(container, $('.quick-input-header'));\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n        checkAll.type = 'checkbox';\n        checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n            const checked = checkAll.checked;\n            list.setAllVisibleChecked(checked);\n        }));\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n                inputBox.setFocus();\n            }\n        }));\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\n        const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n        const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n        const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n        visibleCountContainer.setAttribute('aria-live', 'polite');\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") }, this.styles.countBadge);\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n        countContainer.setAttribute('aria-live', 'polite');\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") }, this.styles.countBadge);\n        const inlineActionBar = this._register(new ActionBar(headerContainer, { hoverDelegate: this.options.hoverDelegate }));\n        inlineActionBar.domNode.classList.add('quick-input-inline-action-bar');\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const ok = this._register(new Button(okContainer, this.styles.button));\n        ok.label = localize('ok', \"OK\");\n        this._register(ok.onDidClick(e => {\n            this.onDidAcceptEmitter.fire();\n        }));\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const customButton = this._register(new Button(customButtonContainer, { ...this.styles.button, supportIcons: true }));\n        customButton.label = localize('custom', \"Custom\");\n        this._register(customButton.onDidClick(e => {\n            this.onDidCustomEmitter.fire();\n        }));\n        const message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n        const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n        progressBar.getContainer().classList.add('quick-input-progress');\n        const widget = dom.append(container, $('.quick-input-html-widget'));\n        widget.tabIndex = -1;\n        const description1 = dom.append(container, $('.quick-input-description'));\n        const listId = this.idPrefix + 'list';\n        const list = this._register(this.instantiationService.createInstance(QuickInputTree, container, this.options.hoverDelegate, this.options.linkOpenerDelegate, listId));\n        inputBox.setAttribute('aria-controls', listId);\n        this._register(list.onDidChangeFocus(() => {\n            inputBox.setAttribute('aria-activedescendant', list.getActiveDescendant() ?? '');\n        }));\n        this._register(list.onChangedAllVisibleChecked(checked => {\n            checkAll.checked = checked;\n        }));\n        this._register(list.onChangedVisibleCount(c => {\n            visibleCount.setCount(c);\n        }));\n        this._register(list.onChangedCheckedCount(c => {\n            count.setCount(c);\n        }));\n        this._register(list.onLeave(() => {\n            // Defer to avoid the input field reacting to the triggering key.\n            // TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n            setTimeout(() => {\n                if (!this.controller) {\n                    return;\n                }\n                inputBox.setFocus();\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n                    list.clearFocus();\n                }\n            }, 0);\n        }));\n        const focusTracker = dom.trackFocus(container);\n        this._register(focusTracker);\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n            const ui = this.getUI();\n            if (dom.isAncestor(e.relatedTarget, ui.inputContainer)) {\n                const value = ui.inputBox.isSelectionAtEnd();\n                if (this.endOfQuickInputBoxContext.get() !== value) {\n                    this.endOfQuickInputBoxContext.set(value);\n                }\n            }\n            // Ignore focus events within container\n            if (dom.isAncestor(e.relatedTarget, ui.container)) {\n                return;\n            }\n            this.inQuickInputContext.set(true);\n            this.previousFocusElement = dom.isHTMLElement(e.relatedTarget) ? e.relatedTarget : undefined;\n        }, true));\n        this._register(focusTracker.onDidBlur(() => {\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n                this.hide(QuickInputHideReason.Blur);\n            }\n            this.inQuickInputContext.set(false);\n            this.endOfQuickInputBoxContext.set(false);\n            this.previousFocusElement = undefined;\n        }));\n        this._register(inputBox.onKeyDown(_ => {\n            const value = this.getUI().inputBox.isSelectionAtEnd();\n            if (this.endOfQuickInputBoxContext.get() !== value) {\n                this.endOfQuickInputBoxContext.set(value);\n            }\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\n            inputBox.setFocus();\n        }));\n        // TODO: Turn into commands instead of handling KEY_DOWN\n        // Keybindings for the quickinput widget as a whole\n        this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, (event) => {\n            if (dom.isAncestor(event.target, widget)) {\n                return; // Ignore event if target is inside widget to allow the widget to handle the event.\n            }\n            switch (event.keyCode) {\n                case 3 /* KeyCode.Enter */:\n                    dom.EventHelper.stop(event, true);\n                    if (this.enabled) {\n                        this.onDidAcceptEmitter.fire();\n                    }\n                    break;\n                case 9 /* KeyCode.Escape */:\n                    dom.EventHelper.stop(event, true);\n                    this.hide(QuickInputHideReason.Gesture);\n                    break;\n                case 2 /* KeyCode.Tab */:\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n                        // detect only visible actions\n                        const selectors = [\n                            '.quick-input-list .monaco-action-bar .always-visible',\n                            '.quick-input-list-entry:hover .monaco-action-bar',\n                            '.monaco-list-row.focused .monaco-action-bar'\n                        ];\n                        if (container.classList.contains('show-checkboxes')) {\n                            selectors.push('input');\n                        }\n                        else {\n                            selectors.push('input[type=text]');\n                        }\n                        if (this.getUI().list.displayed) {\n                            selectors.push('.monaco-list');\n                        }\n                        // focus links if there are any\n                        if (this.getUI().message) {\n                            selectors.push('.quick-input-message a');\n                        }\n                        if (this.getUI().widget) {\n                            if (dom.isAncestor(event.target, this.getUI().widget)) {\n                                // let the widget control tab\n                                break;\n                            }\n                            selectors.push('.quick-input-html-widget');\n                        }\n                        const stops = container.querySelectorAll(selectors.join(', '));\n                        if (event.shiftKey && event.target === stops[0]) {\n                            // Clear the focus from the list in order to allow\n                            // screen readers to read operations in the input box.\n                            dom.EventHelper.stop(event, true);\n                            list.clearFocus();\n                        }\n                        else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n                            dom.EventHelper.stop(event, true);\n                            stops[0].focus();\n                        }\n                    }\n                    break;\n                case 10 /* KeyCode.Space */:\n                    if (event.ctrlKey) {\n                        dom.EventHelper.stop(event, true);\n                        this.getUI().list.toggleHover();\n                    }\n                    break;\n            }\n        }));\n        this.ui = {\n            container,\n            styleSheet,\n            leftActionBar,\n            titleBar,\n            title,\n            description1,\n            description2,\n            widget,\n            rightActionBar,\n            inlineActionBar,\n            checkAll,\n            inputContainer,\n            filterContainer,\n            inputBox,\n            visibleCountContainer,\n            visibleCount,\n            countContainer,\n            count,\n            okContainer,\n            ok,\n            message,\n            customButtonContainer,\n            customButton,\n            list,\n            progressBar,\n            onDidAccept: this.onDidAcceptEmitter.event,\n            onDidCustom: this.onDidCustomEmitter.event,\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n            ignoreFocusOut: false,\n            keyMods: this.keyMods,\n            show: controller => this.show(controller),\n            hide: () => this.hide(),\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\n            setEnabled: enabled => this.setEnabled(enabled),\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\n            linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n        };\n        this.updateStyles();\n        return this.ui;\n    }\n    reparentUI(container) {\n        if (this.ui) {\n            this._container = container;\n            dom.append(this._container, this.ui.container);\n        }\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return new Promise((doResolve, reject) => {\n            let resolve = (result) => {\n                resolve = doResolve;\n                options.onKeyMods?.(input.keyMods);\n                doResolve(result);\n            };\n            if (token.isCancellationRequested) {\n                resolve(undefined);\n                return;\n            }\n            const input = this.createQuickPick({ useSeparators: true });\n            let activeItem;\n            const disposables = [\n                input,\n                input.onDidAccept(() => {\n                    if (input.canSelectMany) {\n                        resolve(input.selectedItems.slice());\n                        input.hide();\n                    }\n                    else {\n                        const result = input.activeItems[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidChangeActive(items => {\n                    const focused = items[0];\n                    if (focused && options.onDidFocus) {\n                        options.onDidFocus(focused);\n                    }\n                }),\n                input.onDidChangeSelection(items => {\n                    if (!input.canSelectMany) {\n                        const result = items[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton({\n                    ...event,\n                    removeItem: () => {\n                        const index = input.items.indexOf(event.item);\n                        if (index !== -1) {\n                            const items = input.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = input.keepScrollPosition;\n                            input.keepScrollPosition = true;\n                            input.items = items;\n                            if (activeItems) {\n                                input.activeItems = activeItems;\n                            }\n                            input.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                    }\n                })),\n                input.onDidTriggerSeparatorButton(event => options.onDidTriggerSeparatorButton?.(event)),\n                input.onDidChangeValue(value => {\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n                        input.activeItems = [activeItem];\n                    }\n                }),\n                token.onCancellationRequested(() => {\n                    input.hide();\n                }),\n                input.onDidHide(() => {\n                    dispose(disposables);\n                    resolve(undefined);\n                }),\n            ];\n            input.title = options.title;\n            if (options.value) {\n                input.value = options.value;\n            }\n            input.canSelectMany = !!options.canPickMany;\n            input.placeholder = options.placeHolder;\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\n            input.matchOnDescription = !!options.matchOnDescription;\n            input.matchOnDetail = !!options.matchOnDetail;\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n            input.quickNavigate = options.quickNavigate;\n            input.hideInput = !!options.hideInput;\n            input.contextKey = options.contextKey;\n            input.busy = true;\n            Promise.all([picks, options.activeItem])\n                .then(([items, _activeItem]) => {\n                activeItem = _activeItem;\n                input.busy = false;\n                input.items = items;\n                if (input.canSelectMany) {\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n                }\n                if (activeItem) {\n                    input.activeItems = [activeItem];\n                }\n            });\n            input.show();\n            Promise.resolve(picks).then(undefined, err => {\n                reject(err);\n                input.hide();\n            });\n        });\n    }\n    createQuickPick(options = { useSeparators: false }) {\n        const ui = this.getUI(true);\n        return new QuickPick(ui);\n    }\n    createInputBox() {\n        const ui = this.getUI(true);\n        return new InputBox(ui);\n    }\n    show(controller) {\n        const ui = this.getUI(true);\n        this.onShowEmitter.fire();\n        const oldController = this.controller;\n        this.controller = controller;\n        oldController?.didHide();\n        this.setEnabled(true);\n        ui.leftActionBar.clear();\n        ui.title.textContent = '';\n        ui.description1.textContent = '';\n        ui.description2.textContent = '';\n        dom.reset(ui.widget);\n        ui.rightActionBar.clear();\n        ui.inlineActionBar.clear();\n        ui.checkAll.checked = false;\n        // ui.inputBox.value = ''; Avoid triggering an event.\n        ui.inputBox.placeholder = '';\n        ui.inputBox.password = false;\n        ui.inputBox.showDecoration(Severity.Ignore);\n        ui.visibleCount.setCount(0);\n        ui.count.setCount(0);\n        dom.reset(ui.message);\n        ui.progressBar.stop();\n        ui.list.setElements([]);\n        ui.list.matchOnDescription = false;\n        ui.list.matchOnDetail = false;\n        ui.list.matchOnLabel = true;\n        ui.list.sortByLabel = true;\n        ui.ignoreFocusOut = false;\n        ui.inputBox.toggles = undefined;\n        const backKeybindingLabel = this.options.backKeybindingLabel();\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n        ui.container.style.display = '';\n        this.updateLayout();\n        ui.inputBox.setFocus();\n        this.quickInputTypeContext.set(controller.type);\n    }\n    isVisible() {\n        return !!this.ui && this.ui.container.style.display !== 'none';\n    }\n    setVisibilities(visibilities) {\n        const ui = this.getUI();\n        ui.title.style.display = visibilities.title ? '' : 'none';\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n        ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n        ui.message.style.display = visibilities.message ? '' : 'none';\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n        ui.list.displayed = !!visibilities.list;\n        ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n        ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n        this.updateLayout(); // TODO\n    }\n    setEnabled(enabled) {\n        if (enabled !== this.enabled) {\n            this.enabled = enabled;\n            for (const item of this.getUI().leftActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            for (const item of this.getUI().rightActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            this.getUI().checkAll.disabled = !enabled;\n            this.getUI().inputBox.enabled = enabled;\n            this.getUI().ok.enabled = enabled;\n            this.getUI().list.enabled = enabled;\n        }\n    }\n    hide(reason) {\n        const controller = this.controller;\n        if (!controller) {\n            return;\n        }\n        controller.willHide(reason);\n        const container = this.ui?.container;\n        const focusChanged = container && !dom.isAncestorOfActiveElement(container);\n        this.controller = null;\n        this.onHideEmitter.fire();\n        if (container) {\n            container.style.display = 'none';\n        }\n        if (!focusChanged) {\n            let currentElement = this.previousFocusElement;\n            while (currentElement && !currentElement.offsetParent) {\n                currentElement = currentElement.parentElement ?? undefined;\n            }\n            if (currentElement?.offsetParent) {\n                currentElement.focus();\n                this.previousFocusElement = undefined;\n            }\n            else {\n                this.options.returnFocus();\n            }\n        }\n        controller.didHide(reason);\n    }\n    layout(dimension, titleBarOffset) {\n        this.dimension = dimension;\n        this.titleBarOffset = titleBarOffset;\n        this.updateLayout();\n    }\n    updateLayout() {\n        if (this.ui && this.isVisible()) {\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\n            const style = this.ui.container.style;\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController_1.MAX_WIDTH);\n            style.width = width + 'px';\n            style.marginLeft = '-' + (width / 2) + 'px';\n            this.ui.inputBox.layout();\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n        }\n    }\n    applyStyles(styles) {\n        this.styles = styles;\n        this.updateStyles();\n    }\n    updateStyles() {\n        if (this.ui) {\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, widgetBorder, widgetShadow, } = this.styles.widget;\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ?? '';\n            this.ui.container.style.backgroundColor = quickInputBackground ?? '';\n            this.ui.container.style.color = quickInputForeground ?? '';\n            this.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n            this.ui.list.style(this.styles.list);\n            const content = [];\n            if (this.styles.pickerGroup.pickerGroupBorder) {\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n            }\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\n                this.styles.keybindingLabel.keybindingLabelBorder ||\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\n                this.styles.keybindingLabel.keybindingLabelShadow ||\n                this.styles.keybindingLabel.keybindingLabelForeground) {\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n                }\n                content.push('}');\n            }\n            const newStyles = content.join('\\n');\n            if (newStyles !== this.ui.styleSheet.textContent) {\n                this.ui.styleSheet.textContent = newStyles;\n            }\n        }\n    }\n};\nQuickInputController = QuickInputController_1 = __decorate([\n    __param(1, ILayoutService),\n    __param(2, IInstantiationService),\n    __param(3, IContextKeyService)\n], QuickInputController);\nexport { QuickInputController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { IOpenerService } from '../../opener/common/opener.js';\nimport { QuickAccessController } from './quickAccess.js';\nimport { defaultButtonStyles, defaultCountBadgeStyles, defaultInputBoxStyles, defaultKeybindingLabelStyles, defaultProgressBarStyles, defaultToggleStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nimport { activeContrastBorder, asCssVariable, pickerGroupBorder, pickerGroupForeground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetBorder, widgetShadow } from '../../theme/common/colorRegistry.js';\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\nimport { QuickInputHoverDelegate } from './quickInput.js';\nimport { QuickInputController } from './quickInputController.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { getWindow } from '../../../base/browser/dom.js';\nlet QuickInputService = class QuickInputService extends Themable {\n    get controller() {\n        if (!this._controller) {\n            this._controller = this._register(this.createController());\n        }\n        return this._controller;\n    }\n    get hasController() { return !!this._controller; }\n    get currentQuickInput() { return this.controller.currentQuickInput; }\n    get quickAccess() {\n        if (!this._quickAccess) {\n            this._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n        }\n        return this._quickAccess;\n    }\n    constructor(instantiationService, contextKeyService, themeService, layoutService, configurationService) {\n        super(themeService);\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.layoutService = layoutService;\n        this.configurationService = configurationService;\n        this._onShow = this._register(new Emitter());\n        this._onHide = this._register(new Emitter());\n        this.contexts = new Map();\n    }\n    createController(host = this.layoutService, options) {\n        const defaultOptions = {\n            idPrefix: 'quickInput_',\n            container: host.activeContainer,\n            ignoreFocusOut: () => false,\n            backKeybindingLabel: () => undefined,\n            setContextKey: (id) => this.setContextKey(id),\n            linkOpenerDelegate: (content) => {\n                // HACK: https://github.com/microsoft/vscode/issues/173691\n                this.instantiationService.invokeFunction(accessor => {\n                    const openerService = accessor.get(IOpenerService);\n                    openerService.open(content, { allowCommands: true, fromUserGesture: true });\n                });\n            },\n            returnFocus: () => host.focus(),\n            styles: this.computeStyles(),\n            hoverDelegate: this._register(this.instantiationService.createInstance(QuickInputHoverDelegate))\n        };\n        const controller = this._register(this.instantiationService.createInstance(QuickInputController, {\n            ...defaultOptions,\n            ...options\n        }));\n        controller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n        // Layout changes\n        this._register(host.onDidLayoutActiveContainer(dimension => {\n            if (getWindow(host.activeContainer) === getWindow(controller.container)) {\n                controller.layout(dimension, host.activeContainerOffset.quickPickTop);\n            }\n        }));\n        this._register(host.onDidChangeActiveContainer(() => {\n            if (controller.isVisible()) {\n                return;\n            }\n            controller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n        }));\n        // Context keys\n        this._register(controller.onShow(() => {\n            this.resetContextKeys();\n            this._onShow.fire();\n        }));\n        this._register(controller.onHide(() => {\n            this.resetContextKeys();\n            this._onHide.fire();\n        }));\n        return controller;\n    }\n    setContextKey(id) {\n        let key;\n        if (id) {\n            key = this.contexts.get(id);\n            if (!key) {\n                key = new RawContextKey(id, false)\n                    .bindTo(this.contextKeyService);\n                this.contexts.set(id, key);\n            }\n        }\n        if (key && key.get()) {\n            return; // already active context\n        }\n        this.resetContextKeys();\n        key?.set(true);\n    }\n    resetContextKeys() {\n        this.contexts.forEach(context => {\n            if (context.get()) {\n                context.reset();\n            }\n        });\n    }\n    pick(picks, options, token = CancellationToken.None) {\n        return this.controller.pick(picks, options, token);\n    }\n    createQuickPick(options = { useSeparators: false }) {\n        return this.controller.createQuickPick(options);\n    }\n    createInputBox() {\n        return this.controller.createInputBox();\n    }\n    updateStyles() {\n        if (this.hasController) {\n            this.controller.applyStyles(this.computeStyles());\n        }\n    }\n    computeStyles() {\n        return {\n            widget: {\n                quickInputBackground: asCssVariable(quickInputBackground),\n                quickInputForeground: asCssVariable(quickInputForeground),\n                quickInputTitleBackground: asCssVariable(quickInputTitleBackground),\n                widgetBorder: asCssVariable(widgetBorder),\n                widgetShadow: asCssVariable(widgetShadow),\n            },\n            inputBox: defaultInputBoxStyles,\n            toggle: defaultToggleStyles,\n            countBadge: defaultCountBadgeStyles,\n            button: defaultButtonStyles,\n            progressBar: defaultProgressBarStyles,\n            keybindingLabel: defaultKeybindingLabelStyles,\n            list: getListStyles({\n                listBackground: quickInputBackground,\n                listFocusBackground: quickInputListFocusBackground,\n                listFocusForeground: quickInputListFocusForeground,\n                // Look like focused when inactive.\n                listInactiveFocusForeground: quickInputListFocusForeground,\n                listInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n                listInactiveFocusBackground: quickInputListFocusBackground,\n                listFocusOutline: activeContrastBorder,\n                listInactiveFocusOutline: activeContrastBorder,\n            }),\n            pickerGroup: {\n                pickerGroupBorder: asCssVariable(pickerGroupBorder),\n                pickerGroupForeground: asCssVariable(pickerGroupForeground),\n            }\n        };\n    }\n};\nQuickInputService = __decorate([\n    __param(0, IInstantiationService),\n    __param(1, IContextKeyService),\n    __param(2, IThemeService),\n    __param(3, ILayoutService),\n    __param(4, IConfigurationService)\n], QuickInputService);\nexport { QuickInputService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { getCodiconFontCharacters } from '../../../base/common/codiconsUtil.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    const codiconFontCharacters = getCodiconFontCharacters();\n    for (const icon in codiconFontCharacters) {\n        const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n        iconRegistry.registerIcon(icon, { fontCharacter });\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const disposable = new DisposableStore();\n    const onDidChangeEmmiter = disposable.add(new Emitter());\n    const iconRegistry = getIconRegistry();\n    disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n    if (themeService) {\n        disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n    }\n    return {\n        dispose: () => disposable.dispose(),\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const rules = [];\n            const rootAttribs = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    continue;\n                }\n                const fontContribution = definition.font;\n                const fontFamilyVar = `--vscode-icon-${contribution.id}-font-family`;\n                const contentVar = `--vscode-icon-${contribution.id}-content`;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    rootAttribs.push(`${fontFamilyVar}: ${asCSSPropertyValue(fontContribution.id)};`, `${contentVar}: '${definition.fontCharacter}';`);\n                    rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`);\n                }\n                else {\n                    rootAttribs.push(`${contentVar}: '${definition.fontCharacter}'; ${fontFamilyVar}: 'codicon';`);\n                    rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            rules.push(`:root { ${rootAttribs.join(' ')} }`);\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet AccessibilityService = class AccessibilityService extends Disposable {\n    constructor(_contextKeyService, _layoutService, _configurationService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._layoutService = _layoutService;\n        this._configurationService = _configurationService;\n        this._accessibilitySupport = 0 /* AccessibilitySupport.Unknown */;\n        this._onDidChangeScreenReaderOptimized = new Emitter();\n        this._onDidChangeReducedMotion = new Emitter();\n        this._onDidChangeLinkUnderline = new Emitter();\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                updateContextKey();\n                this._onDidChangeScreenReaderOptimized.fire();\n            }\n            if (e.affectsConfiguration('workbench.reduceMotion')) {\n                this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        updateContextKey();\n        this._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n        const reduceMotionMatcher = mainWindow.matchMedia(`(prefers-reduced-motion: reduce)`);\n        this._systemMotionReduced = reduceMotionMatcher.matches;\n        this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n        this._linkUnderlinesEnabled = this._configurationService.getValue('accessibility.underlineLinks');\n        this.initReducedMotionListeners(reduceMotionMatcher);\n        this.initLinkUnderlineListeners();\n    }\n    initReducedMotionListeners(reduceMotionMatcher) {\n        this._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n            this._systemMotionReduced = reduceMotionMatcher.matches;\n            if (this._configMotionReduced === 'auto') {\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        const updateRootClasses = () => {\n            const reduce = this.isMotionReduced();\n            this._layoutService.mainContainer.classList.toggle('reduce-motion', reduce);\n            this._layoutService.mainContainer.classList.toggle('enable-motion', !reduce);\n        };\n        updateRootClasses();\n        this._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n    }\n    initLinkUnderlineListeners() {\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.underlineLinks')) {\n                const linkUnderlinesEnabled = this._configurationService.getValue('accessibility.underlineLinks');\n                this._linkUnderlinesEnabled = linkUnderlinesEnabled;\n                this._onDidChangeLinkUnderline.fire();\n            }\n        }));\n        const updateLinkUnderlineClasses = () => {\n            const underlineLinks = this._linkUnderlinesEnabled;\n            this._layoutService.mainContainer.classList.toggle('underline-links', underlineLinks);\n        };\n        updateLinkUnderlineClasses();\n        this._register(this.onDidChangeLinkUnderlines(() => updateLinkUnderlineClasses()));\n    }\n    onDidChangeLinkUnderlines(listener) {\n        return this._onDidChangeLinkUnderline.event(listener);\n    }\n    get onDidChangeScreenReaderOptimized() {\n        return this._onDidChangeScreenReaderOptimized.event;\n    }\n    isScreenReaderOptimized() {\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */);\n    }\n    get onDidChangeReducedMotion() {\n        return this._onDidChangeReducedMotion.event;\n    }\n    isMotionReduced() {\n        const config = this._configMotionReduced;\n        return config === 'on' || (config === 'auto' && this._systemMotionReduced);\n    }\n    getAccessibilitySupport() {\n        return this._accessibilitySupport;\n    }\n};\nAccessibilityService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ILayoutService),\n    __param(2, IConfigurationService)\n], AccessibilityService);\nexport { AccessibilityService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, _keybindingService, storageService) {\n        this._commandService = _commandService;\n        this._keybindingService = _keybindingService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n    }\n    getMenuActions(id, contextKeyService, options) {\n        const menu = new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n        const actions = menu.getActions(options);\n        menu.dispose();\n        return actions;\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IKeybindingService),\n    __param(2, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = class PersistedMenuHideState {\n    static { PersistedMenuHideState_1 = this; }\n    static { this._key = 'menu.hiddenCommands'; }\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(() => {\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        return this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`) ?? false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = this._data[menu.id]?.includes(commandId) ?? false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nclass MenuInfoSnapshot {\n    constructor(_id, _collectContextKeysForSubmenus) {\n        this._id = _id;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._menuGroups = [];\n        this._allMenuIds = new Set();\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get allMenuIds() {\n        return this._allMenuIds;\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._allMenuIds.clear();\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = this._sort(MenuRegistry.getMenuItems(this._id));\n        let group;\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys and submenu ids for eventing\n            this._collectContextKeysAndSubmenuIds(item);\n        }\n        this._allMenuIds.add(this._id);\n    }\n    _sort(menuItems) {\n        // no sorting needed in snapshot\n        return menuItems;\n    }\n    _collectContextKeysAndSubmenuIds(item) {\n        MenuInfoSnapshot._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfoSnapshot._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfoSnapshot._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeysAndSubmenuIds, this);\n            this._allMenuIds.add(item.submenu);\n        }\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n}\nlet MenuInfo = MenuInfo_1 = class MenuInfo extends MenuInfoSnapshot {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _keybindingService, _contextKeyService) {\n        super(_id, _collectContextKeysForSubmenus);\n        this._hiddenStates = _hiddenStates;\n        this._commandService = _commandService;\n        this._keybindingService = _keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this.refresh();\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            let activeActions;\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        const menuKeybinding = createConfigureKeybindingAction(this._commandService, this._keybindingService, item.command.id, item.when);\n                        (activeActions ??= []).push(new MenuItemAction(item.command, item.alt, options, menuHide, menuKeybinding, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._keybindingService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            (activeActions ??= []).push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions && activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    _sort(menuItems) {\n        return menuItems.sort(MenuInfo_1._compareMenuItems);\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = MenuInfo_1 = __decorate([\n    __param(3, ICommandService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, keybindingService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, keybindingService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            for (const id of this._menuInfo.allMenuIds) {\n                if (e.has(id)) {\n                    rebuildMenuSoon.schedule();\n                    break;\n                }\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\nexport function createConfigureKeybindingAction(commandService, keybindingService, commandId, when = undefined, enabled = true) {\n    return toAction({\n        id: `configureKeybinding/${commandId}`,\n        label: localize('configure keybinding', \"Configure Keybinding\"),\n        enabled,\n        run() {\n            // Only set the when clause when there is no keybinding\n            // It is possible that the action and the keybinding have different when clauses\n            const hasKeybinding = !!keybindingService.lookupKeybinding(commandId); // This may only be called inside the `run()` method as it can be expensive on startup. #210529\n            const whenValue = !hasKeybinding && when ? when.serialize() : undefined;\n            commandService.executeCommand('workbench.action.openGlobalKeybindings', `@command:${commandId}` + (whenValue ? ` +when:${whenValue}` : ''));\n        }\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar BrowserClipboardService_1;\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener, getActiveDocument, getActiveWindow, isHTMLElement, onDidRegisterWindow } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Event } from '../../../base/common/event.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\n/**\n * Custom mime type used for storing a list of uris in the clipboard.\n *\n * Requires support for custom web clipboards https://github.com/w3c/clipboard-apis/pull/175\n */\nconst vscodeResourcesMime = 'application/vnd.code.resources';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    static { BrowserClipboardService_1 = this; }\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = []; // unsupported in web (only in-memory)\n        this.resourcesStateHash = undefined;\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n        // Keep track of copy operations to reset our set of\n        // copied resources: since we keep resources in memory\n        // and not in the clipboard, we have to invalidate\n        // that state when the user copies other data.\n        this._register(Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => {\n            disposables.add(addDisposableListener(window.document, 'copy', () => this.clearResourcesState()));\n        }, { window: mainWindow, disposables: this._store }));\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            getActiveWindow().navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch(async (err) => {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            });\n        };\n        this._register(Event.runAndSubscribe(this.layoutService.onDidAddContainer, ({ container, disposables }) => {\n            disposables.add(addDisposableListener(container, 'click', handler));\n            disposables.add(addDisposableListener(container, 'keydown', handler));\n        }, { container: this.layoutService.mainContainer, disposables: this._store }));\n    }\n    async writeText(text, type) {\n        // Clear resources given we are writing text\n        this.clearResourcesState();\n        // With type: only in-memory is supported\n        if (type) {\n            this.mapTextToType.set(type, text);\n            return;\n        }\n        if (this.webKitPendingClipboardWritePromise) {\n            // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n            // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n            // would throw an error because this call stack doesn't appear to originate from a user gesture.\n            return this.webKitPendingClipboardWritePromise.complete(text);\n        }\n        // Guard access to navigator.clipboard with try/catch\n        // as we have seen DOMExceptions in certain browsers\n        // due to security policies.\n        try {\n            return await getActiveWindow().navigator.clipboard.writeText(text);\n        }\n        catch (error) {\n            console.error(error);\n        }\n        // Fallback to textarea and execCommand solution\n        this.fallbackWriteText(text);\n    }\n    fallbackWriteText(text) {\n        const activeDocument = getActiveDocument();\n        const activeElement = activeDocument.activeElement;\n        const textArea = activeDocument.body.appendChild($('textarea', { 'aria-hidden': true }));\n        textArea.style.height = '1px';\n        textArea.style.width = '1px';\n        textArea.style.position = 'absolute';\n        textArea.value = text;\n        textArea.focus();\n        textArea.select();\n        activeDocument.execCommand('copy');\n        if (isHTMLElement(activeElement)) {\n            activeElement.focus();\n        }\n        textArea.remove();\n    }\n    async readText(type) {\n        // With type: only in-memory is supported\n        if (type) {\n            return this.mapTextToType.get(type) || '';\n        }\n        // Guard access to navigator.clipboard with try/catch\n        // as we have seen DOMExceptions in certain browsers\n        // due to security policies.\n        try {\n            return await getActiveWindow().navigator.clipboard.readText();\n        }\n        catch (error) {\n            console.error(error);\n        }\n        return '';\n    }\n    async readFindText() {\n        return this.findText;\n    }\n    async writeFindText(text) {\n        this.findText = text;\n    }\n    static { this.MAX_RESOURCE_STATE_SOURCE_LENGTH = 1000; }\n    async readResources() {\n        // Guard access to navigator.clipboard with try/catch\n        // as we have seen DOMExceptions in certain browsers\n        // due to security policies.\n        try {\n            const items = await getActiveWindow().navigator.clipboard.read();\n            for (const item of items) {\n                if (item.types.includes(`web ${vscodeResourcesMime}`)) {\n                    const blob = await item.getType(`web ${vscodeResourcesMime}`);\n                    const resources = JSON.parse(await blob.text()).map(x => URI.from(x));\n                    return resources;\n                }\n            }\n        }\n        catch (error) {\n            // Noop\n        }\n        const resourcesStateHash = await this.computeResourcesStateHash();\n        if (this.resourcesStateHash !== resourcesStateHash) {\n            this.clearResourcesState(); // state mismatch, resources no longer valid\n        }\n        return this.resources;\n    }\n    async computeResourcesStateHash() {\n        if (this.resources.length === 0) {\n            return undefined; // no resources, no hash needed\n        }\n        // Resources clipboard is managed in-memory only and thus\n        // fails to invalidate when clipboard data is changing.\n        // As such, we compute the hash of the current clipboard\n        // and use that to later validate the resources clipboard.\n        const clipboardText = await this.readText();\n        return hash(clipboardText.substring(0, BrowserClipboardService_1.MAX_RESOURCE_STATE_SOURCE_LENGTH));\n    }\n    clearInternalState() {\n        this.clearResourcesState();\n    }\n    clearResourcesState() {\n        this.resources = [];\n        this.resourcesStateHash = undefined;\n    }\n};\nBrowserClipboardService = BrowserClipboardService_1 = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return { ...this._value };\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    static { this.INSTANCE = new NullContext(); }\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nclass ConfigAwareContextValuesContainer extends Context {\n    static { this._keyPrefix = 'config.'; }\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(this._values, ([k]) => k);\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService extends Disposable {\n    constructor(myContextId) {\n        super();\n        this._onDidChangeContext = this._register(new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) }));\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n    dispose() {\n        super.dispose();\n        this._isDisposed = true;\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._lastContextId = 0;\n        const myContext = this._register(new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext));\n        this._contexts.set(this._myContextId, myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = this._register(new MutableDisposable());\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(this._myContextId);\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        super.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    metadata: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Node {\n    constructor(key, data) {\n        this.key = key;\n        this.data = data;\n        this.incoming = new Map();\n        this.outgoing = new Map();\n    }\n}\nexport class Graph {\n    constructor(_hashFn) {\n        this._hashFn = _hashFn;\n        this._nodes = new Map();\n        // empty\n    }\n    roots() {\n        const ret = [];\n        for (const node of this._nodes.values()) {\n            if (node.outgoing.size === 0) {\n                ret.push(node);\n            }\n        }\n        return ret;\n    }\n    insertEdge(from, to) {\n        const fromNode = this.lookupOrInsertNode(from);\n        const toNode = this.lookupOrInsertNode(to);\n        fromNode.outgoing.set(toNode.key, toNode);\n        toNode.incoming.set(fromNode.key, fromNode);\n    }\n    removeNode(data) {\n        const key = this._hashFn(data);\n        this._nodes.delete(key);\n        for (const node of this._nodes.values()) {\n            node.outgoing.delete(key);\n            node.incoming.delete(key);\n        }\n    }\n    lookupOrInsertNode(data) {\n        const key = this._hashFn(data);\n        let node = this._nodes.get(key);\n        if (!node) {\n            node = new Node(key, data);\n            this._nodes.set(key, node);\n        }\n        return node;\n    }\n    isEmpty() {\n        return this._nodes.size === 0;\n    }\n    toString() {\n        const data = [];\n        for (const [key, value] of this._nodes) {\n            data.push(`${key}\\n\\t(-> incoming)[${[...value.incoming.keys()].join(', ')}]\\n\\t(outgoing ->)[${[...value.outgoing.keys()].join(',')}]\\n`);\n        }\n        return data.join('\\n');\n    }\n    /**\n     * This is brute force and slow and **only** be used\n     * to trouble shoot.\n     */\n    findCycleSlow() {\n        for (const [id, node] of this._nodes) {\n            const seen = new Set([id]);\n            const res = this._findCycle(node, seen);\n            if (res) {\n                return res;\n            }\n        }\n        return undefined;\n    }\n    _findCycle(node, seen) {\n        for (const [id, outgoing] of node.outgoing) {\n            if (seen.has(id)) {\n                return [...seen, id].join(' -> ');\n            }\n            seen.add(id);\n            const value = this._findCycle(outgoing, seen);\n            if (value) {\n                return value;\n            }\n            seen.delete(id);\n        }\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ServiceCollection {\n    constructor(...entries) {\n        this._entries = new Map();\n        for (const [id, service] of entries) {\n            this.set(id, service);\n        }\n    }\n    set(id, instanceOrDescriptor) {\n        const result = this._entries.get(id);\n        this._entries.set(id, instanceOrDescriptor);\n        return result;\n    }\n    get(id) {\n        return this._entries.get(id);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlobalIdleValue } from '../../../base/common/async.js';\nimport { illegalState } from '../../../base/common/errors.js';\nimport { dispose, isDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { SyncDescriptor } from './descriptors.js';\nimport { Graph } from './graph.js';\nimport { IInstantiationService, _util } from './instantiation.js';\nimport { ServiceCollection } from './serviceCollection.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n// TRACING\nconst _enableAllTracing = false;\nclass CyclicDependencyError extends Error {\n    constructor(graph) {\n        super('cyclic dependency between services');\n        this.message = graph.findCycleSlow() ?? `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n    }\n}\nexport class InstantiationService {\n    constructor(_services = new ServiceCollection(), _strict = false, _parent, _enableTracing = _enableAllTracing) {\n        this._services = _services;\n        this._strict = _strict;\n        this._parent = _parent;\n        this._enableTracing = _enableTracing;\n        this._isDisposed = false;\n        this._servicesToMaybeDispose = new Set();\n        this._children = new Set();\n        this._activeInstantiations = new Set();\n        this._services.set(IInstantiationService, this);\n        this._globalGraph = _enableTracing ? _parent?._globalGraph ?? new Graph(e => e) : undefined;\n    }\n    dispose() {\n        if (!this._isDisposed) {\n            this._isDisposed = true;\n            // dispose all child services\n            dispose(this._children);\n            this._children.clear();\n            // dispose all services created by this service\n            for (const candidate of this._servicesToMaybeDispose) {\n                if (isDisposable(candidate)) {\n                    candidate.dispose();\n                }\n            }\n            this._servicesToMaybeDispose.clear();\n        }\n    }\n    _throwIfDisposed() {\n        if (this._isDisposed) {\n            throw new Error('InstantiationService has been disposed');\n        }\n    }\n    createChild(services, store) {\n        this._throwIfDisposed();\n        const that = this;\n        const result = new class extends InstantiationService {\n            dispose() {\n                that._children.delete(result);\n                super.dispose();\n            }\n        }(services, this._strict, this, this._enableTracing);\n        this._children.add(result);\n        store?.add(result);\n        return result;\n    }\n    invokeFunction(fn, ...args) {\n        this._throwIfDisposed();\n        const _trace = Trace.traceInvocation(this._enableTracing, fn);\n        let _done = false;\n        try {\n            const accessor = {\n                get: (id) => {\n                    if (_done) {\n                        throw illegalState('service accessor is only valid during the invocation of its target method');\n                    }\n                    const result = this._getOrCreateServiceInstance(id, _trace);\n                    if (!result) {\n                        throw new Error(`[invokeFunction] unknown service '${id}'`);\n                    }\n                    return result;\n                }\n            };\n            return fn(accessor, ...args);\n        }\n        finally {\n            _done = true;\n            _trace.stop();\n        }\n    }\n    createInstance(ctorOrDescriptor, ...rest) {\n        this._throwIfDisposed();\n        let _trace;\n        let result;\n        if (ctorOrDescriptor instanceof SyncDescriptor) {\n            _trace = Trace.traceCreation(this._enableTracing, ctorOrDescriptor.ctor);\n            result = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n        }\n        else {\n            _trace = Trace.traceCreation(this._enableTracing, ctorOrDescriptor);\n            result = this._createInstance(ctorOrDescriptor, rest, _trace);\n        }\n        _trace.stop();\n        return result;\n    }\n    _createInstance(ctor, args = [], _trace) {\n        // arguments defined by service decorators\n        const serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n        const serviceArgs = [];\n        for (const dependency of serviceDependencies) {\n            const service = this._getOrCreateServiceInstance(dependency.id, _trace);\n            if (!service) {\n                this._throwIfStrict(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`, false);\n            }\n            serviceArgs.push(service);\n        }\n        const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n        // check for argument mismatches, adjust static args if needed\n        if (args.length !== firstServiceArgPos) {\n            console.trace(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n            const delta = firstServiceArgPos - args.length;\n            if (delta > 0) {\n                args = args.concat(new Array(delta));\n            }\n            else {\n                args = args.slice(0, firstServiceArgPos);\n            }\n        }\n        // now create the instance\n        return Reflect.construct(ctor, args.concat(serviceArgs));\n    }\n    _setCreatedServiceInstance(id, instance) {\n        if (this._services.get(id) instanceof SyncDescriptor) {\n            this._services.set(id, instance);\n        }\n        else if (this._parent) {\n            this._parent._setCreatedServiceInstance(id, instance);\n        }\n        else {\n            throw new Error('illegalState - setting UNKNOWN service instance');\n        }\n    }\n    _getServiceInstanceOrDescriptor(id) {\n        const instanceOrDesc = this._services.get(id);\n        if (!instanceOrDesc && this._parent) {\n            return this._parent._getServiceInstanceOrDescriptor(id);\n        }\n        else {\n            return instanceOrDesc;\n        }\n    }\n    _getOrCreateServiceInstance(id, _trace) {\n        if (this._globalGraph && this._globalGraphImplicitDependency) {\n            this._globalGraph.insertEdge(this._globalGraphImplicitDependency, String(id));\n        }\n        const thing = this._getServiceInstanceOrDescriptor(id);\n        if (thing instanceof SyncDescriptor) {\n            return this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n        }\n        else {\n            _trace.branch(id, false);\n            return thing;\n        }\n    }\n    _safeCreateAndCacheServiceInstance(id, desc, _trace) {\n        if (this._activeInstantiations.has(id)) {\n            throw new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n        }\n        this._activeInstantiations.add(id);\n        try {\n            return this._createAndCacheServiceInstance(id, desc, _trace);\n        }\n        finally {\n            this._activeInstantiations.delete(id);\n        }\n    }\n    _createAndCacheServiceInstance(id, desc, _trace) {\n        const graph = new Graph(data => data.id.toString());\n        let cycleCount = 0;\n        const stack = [{ id, desc, _trace }];\n        const seen = new Set();\n        while (stack.length) {\n            const item = stack.pop();\n            if (seen.has(String(item.id))) {\n                continue;\n            }\n            seen.add(String(item.id));\n            graph.lookupOrInsertNode(item);\n            // a weak but working heuristic for cycle checks\n            if (cycleCount++ > 1000) {\n                throw new CyclicDependencyError(graph);\n            }\n            // check all dependencies for existence and if they need to be created first\n            for (const dependency of _util.getServiceDependencies(item.desc.ctor)) {\n                const instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n                if (!instanceOrDesc) {\n                    this._throwIfStrict(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`, true);\n                }\n                // take note of all service dependencies\n                this._globalGraph?.insertEdge(String(item.id), String(dependency.id));\n                if (instanceOrDesc instanceof SyncDescriptor) {\n                    const d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n                    graph.insertEdge(item, d);\n                    stack.push(d);\n                }\n            }\n        }\n        while (true) {\n            const roots = graph.roots();\n            // if there is no more roots but still\n            // nodes in the graph we have a cycle\n            if (roots.length === 0) {\n                if (!graph.isEmpty()) {\n                    throw new CyclicDependencyError(graph);\n                }\n                break;\n            }\n            for (const { data } of roots) {\n                // Repeat the check for this still being a service sync descriptor. That's because\n                // instantiating a dependency might have side-effect and recursively trigger instantiation\n                // so that some dependencies are now fullfilled already.\n                const instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n                if (instanceOrDesc instanceof SyncDescriptor) {\n                    // create instance and overwrite the service collections\n                    const instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n                    this._setCreatedServiceInstance(data.id, instance);\n                }\n                graph.removeNode(data);\n            }\n        }\n        return this._getServiceInstanceOrDescriptor(id);\n    }\n    _createServiceInstanceWithOwner(id, ctor, args = [], supportsDelayedInstantiation, _trace) {\n        if (this._services.get(id) instanceof SyncDescriptor) {\n            return this._createServiceInstance(id, ctor, args, supportsDelayedInstantiation, _trace, this._servicesToMaybeDispose);\n        }\n        else if (this._parent) {\n            return this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n        }\n        else {\n            throw new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n        }\n    }\n    _createServiceInstance(id, ctor, args = [], supportsDelayedInstantiation, _trace, disposeBucket) {\n        if (!supportsDelayedInstantiation) {\n            // eager instantiation\n            const result = this._createInstance(ctor, args, _trace);\n            disposeBucket.add(result);\n            return result;\n        }\n        else {\n            const child = new InstantiationService(undefined, this._strict, this, this._enableTracing);\n            child._globalGraphImplicitDependency = String(id);\n            // Return a proxy object that's backed by an idle value. That\n            // strategy is to instantiate services in our idle time or when actually\n            // needed but not when injected into a consumer\n            // return \"empty events\" when the service isn't instantiated yet\n            const earlyListeners = new Map();\n            const idle = new GlobalIdleValue(() => {\n                const result = child._createInstance(ctor, args, _trace);\n                // early listeners that we kept are now being subscribed to\n                // the real service\n                for (const [key, values] of earlyListeners) {\n                    const candidate = result[key];\n                    if (typeof candidate === 'function') {\n                        for (const value of values) {\n                            value.disposable = candidate.apply(result, value.listener);\n                        }\n                    }\n                }\n                earlyListeners.clear();\n                disposeBucket.add(result);\n                return result;\n            });\n            return new Proxy(Object.create(null), {\n                get(target, key) {\n                    if (!idle.isInitialized) {\n                        // looks like an event\n                        if (typeof key === 'string' && (key.startsWith('onDid') || key.startsWith('onWill'))) {\n                            let list = earlyListeners.get(key);\n                            if (!list) {\n                                list = new LinkedList();\n                                earlyListeners.set(key, list);\n                            }\n                            const event = (callback, thisArg, disposables) => {\n                                if (idle.isInitialized) {\n                                    return idle.value[key](callback, thisArg, disposables);\n                                }\n                                else {\n                                    const entry = { listener: [callback, thisArg, disposables], disposable: undefined };\n                                    const rm = list.push(entry);\n                                    const result = toDisposable(() => {\n                                        rm();\n                                        entry.disposable?.dispose();\n                                    });\n                                    return result;\n                                }\n                            };\n                            return event;\n                        }\n                    }\n                    // value already exists\n                    if (key in target) {\n                        return target[key];\n                    }\n                    // create value\n                    const obj = idle.value;\n                    let prop = obj[key];\n                    if (typeof prop !== 'function') {\n                        return prop;\n                    }\n                    prop = prop.bind(obj);\n                    target[key] = prop;\n                    return prop;\n                },\n                set(_target, p, value) {\n                    idle.value[p] = value;\n                    return true;\n                },\n                getPrototypeOf(_target) {\n                    return ctor.prototype;\n                }\n            });\n        }\n    }\n    _throwIfStrict(msg, printWarning) {\n        if (printWarning) {\n            console.warn(msg);\n        }\n        if (this._strict) {\n            throw new Error(msg);\n        }\n    }\n}\nexport class Trace {\n    static { this.all = new Set(); }\n    static { this._None = new class extends Trace {\n        constructor() { super(0 /* TraceType.None */, null); }\n        stop() { }\n        branch() { return this; }\n    }; }\n    static traceInvocation(_enableTracing, ctor) {\n        return !_enableTracing ? Trace._None : new Trace(2 /* TraceType.Invocation */, ctor.name || new Error().stack.split('\\n').slice(3, 4).join('\\n'));\n    }\n    static traceCreation(_enableTracing, ctor) {\n        return !_enableTracing ? Trace._None : new Trace(1 /* TraceType.Creation */, ctor.name);\n    }\n    static { this._totals = 0; }\n    constructor(type, name) {\n        this.type = type;\n        this.name = name;\n        this._start = Date.now();\n        this._dep = [];\n    }\n    branch(id, first) {\n        const child = new Trace(3 /* TraceType.Branch */, id.toString());\n        this._dep.push([id, first, child]);\n        return child;\n    }\n    stop() {\n        const dur = Date.now() - this._start;\n        Trace._totals += dur;\n        let causedCreation = false;\n        function printChild(n, trace) {\n            const res = [];\n            const prefix = new Array(n + 1).join('\\t');\n            for (const [id, first, child] of trace._dep) {\n                if (first && child) {\n                    causedCreation = true;\n                    res.push(`${prefix}CREATES -> ${id}`);\n                    const nested = printChild(n + 1, child);\n                    if (nested) {\n                        res.push(nested);\n                    }\n                }\n                else {\n                    res.push(`${prefix}uses -> ${id}`);\n                }\n            }\n            return res.join('\\n');\n        }\n        const lines = [\n            `${this.type === 1 /* TraceType.Creation */ ? 'CREATE' : 'CALL'} ${this.name}`,\n            `${printChild(1, this)}`,\n            `DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n        ];\n        if (dur > 2 || causedCreation) {\n            Trace.all.add(lines.join('\\n'));\n        }\n    }\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty, isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { MarkerSeverity } from './markers.js';\nexport const unsupportedSchemas = new Set([\n    Schemas.inMemory,\n    Schemas.vscodeSourceControl,\n    Schemas.walkThrough,\n    Schemas.walkThroughSnippet,\n    Schemas.vscodeChatCodeBlock,\n]);\nclass DoubleResourceMap {\n    constructor() {\n        this._byResource = new ResourceMap();\n        this._byOwner = new Map();\n    }\n    set(resource, owner, value) {\n        let ownerMap = this._byResource.get(resource);\n        if (!ownerMap) {\n            ownerMap = new Map();\n            this._byResource.set(resource, ownerMap);\n        }\n        ownerMap.set(owner, value);\n        let resourceMap = this._byOwner.get(owner);\n        if (!resourceMap) {\n            resourceMap = new ResourceMap();\n            this._byOwner.set(owner, resourceMap);\n        }\n        resourceMap.set(resource, value);\n    }\n    get(resource, owner) {\n        const ownerMap = this._byResource.get(resource);\n        return ownerMap?.get(owner);\n    }\n    delete(resource, owner) {\n        let removedA = false;\n        let removedB = false;\n        const ownerMap = this._byResource.get(resource);\n        if (ownerMap) {\n            removedA = ownerMap.delete(owner);\n        }\n        const resourceMap = this._byOwner.get(owner);\n        if (resourceMap) {\n            removedB = resourceMap.delete(resource);\n        }\n        if (removedA !== removedB) {\n            throw new Error('illegal state');\n        }\n        return removedA && removedB;\n    }\n    values(key) {\n        if (typeof key === 'string') {\n            return this._byOwner.get(key)?.values() ?? Iterable.empty();\n        }\n        if (URI.isUri(key)) {\n            return this._byResource.get(key)?.values() ?? Iterable.empty();\n        }\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n    }\n}\nclass MarkerStats {\n    constructor(service) {\n        this.errors = 0;\n        this.infos = 0;\n        this.warnings = 0;\n        this.unknowns = 0;\n        this._data = new ResourceMap();\n        this._service = service;\n        this._subscription = service.onMarkerChanged(this._update, this);\n    }\n    dispose() {\n        this._subscription.dispose();\n    }\n    _update(resources) {\n        for (const resource of resources) {\n            const oldStats = this._data.get(resource);\n            if (oldStats) {\n                this._substract(oldStats);\n            }\n            const newStats = this._resourceStats(resource);\n            this._add(newStats);\n            this._data.set(resource, newStats);\n        }\n    }\n    _resourceStats(resource) {\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n        // TODO this is a hack\n        if (unsupportedSchemas.has(resource.scheme)) {\n            return result;\n        }\n        for (const { severity } of this._service.read({ resource })) {\n            if (severity === MarkerSeverity.Error) {\n                result.errors += 1;\n            }\n            else if (severity === MarkerSeverity.Warning) {\n                result.warnings += 1;\n            }\n            else if (severity === MarkerSeverity.Info) {\n                result.infos += 1;\n            }\n            else {\n                result.unknowns += 1;\n            }\n        }\n        return result;\n    }\n    _substract(op) {\n        this.errors -= op.errors;\n        this.warnings -= op.warnings;\n        this.infos -= op.infos;\n        this.unknowns -= op.unknowns;\n    }\n    _add(op) {\n        this.errors += op.errors;\n        this.warnings += op.warnings;\n        this.infos += op.infos;\n        this.unknowns += op.unknowns;\n    }\n}\nexport class MarkerService {\n    constructor() {\n        this._onMarkerChanged = new DebounceEmitter({\n            delay: 0,\n            merge: MarkerService._merge\n        });\n        this.onMarkerChanged = this._onMarkerChanged.event;\n        this._data = new DoubleResourceMap();\n        this._stats = new MarkerStats(this);\n    }\n    dispose() {\n        this._stats.dispose();\n        this._onMarkerChanged.dispose();\n    }\n    remove(owner, resources) {\n        for (const resource of resources || []) {\n            this.changeOne(owner, resource, []);\n        }\n    }\n    changeOne(owner, resource, markerData) {\n        if (isFalsyOrEmpty(markerData)) {\n            // remove marker for this (owner,resource)-tuple\n            const removed = this._data.delete(resource, owner);\n            if (removed) {\n                this._onMarkerChanged.fire([resource]);\n            }\n        }\n        else {\n            // insert marker for this (owner,resource)-tuple\n            const markers = [];\n            for (const data of markerData) {\n                const marker = MarkerService._toMarker(owner, resource, data);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n            this._data.set(resource, owner, markers);\n            this._onMarkerChanged.fire([resource]);\n        }\n    }\n    static _toMarker(owner, resource, data) {\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\n        if (!message) {\n            return undefined;\n        }\n        // santize data\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n        startColumn = startColumn > 0 ? startColumn : 1;\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n        endColumn = endColumn > 0 ? endColumn : startColumn;\n        return {\n            resource,\n            owner,\n            code,\n            severity,\n            message,\n            source,\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn,\n            relatedInformation,\n            tags,\n        };\n    }\n    changeAll(owner, data) {\n        const changes = [];\n        // remove old marker\n        const existing = this._data.values(owner);\n        if (existing) {\n            for (const data of existing) {\n                const first = Iterable.first(data);\n                if (first) {\n                    changes.push(first.resource);\n                    this._data.delete(first.resource, owner);\n                }\n            }\n        }\n        // add new markers\n        if (isNonEmptyArray(data)) {\n            // group by resource\n            const groups = new ResourceMap();\n            for (const { resource, marker: markerData } of data) {\n                const marker = MarkerService._toMarker(owner, resource, markerData);\n                if (!marker) {\n                    // filter bad markers\n                    continue;\n                }\n                const array = groups.get(resource);\n                if (!array) {\n                    groups.set(resource, [marker]);\n                    changes.push(resource);\n                }\n                else {\n                    array.push(marker);\n                }\n            }\n            // insert all\n            for (const [resource, value] of groups) {\n                this._data.set(resource, owner, value);\n            }\n        }\n        if (changes.length > 0) {\n            this._onMarkerChanged.fire(changes);\n        }\n    }\n    read(filter = Object.create(null)) {\n        let { owner, resource, severities, take } = filter;\n        if (!take || take < 0) {\n            take = -1;\n        }\n        if (owner && resource) {\n            // exactly one owner AND resource\n            const data = this._data.get(resource, owner);\n            if (!data) {\n                return [];\n            }\n            else {\n                const result = [];\n                for (const marker of data) {\n                    if (MarkerService._accept(marker, severities)) {\n                        const newLen = result.push(marker);\n                        if (take > 0 && newLen === take) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            }\n        }\n        else if (!owner && !resource) {\n            // all\n            const result = [];\n            for (const markers of this._data.values()) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        else {\n            // of one resource OR owner\n            const iterable = this._data.values(resource ?? owner);\n            const result = [];\n            for (const markers of iterable) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    static _accept(marker, severities) {\n        return severities === undefined || (severities & marker.severity) === marker.severity;\n    }\n    // --- event debounce logic\n    static _merge(all) {\n        const set = new ResourceMap();\n        for (const array of all) {\n            for (const item of array) {\n                set.set(item, true);\n            }\n        }\n        return Array.from(set.keys());\n    }\n}\n","import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n    get configurationModel() {\n        return this._configurationModel;\n    }\n    constructor(logService) {\n        super();\n        this.logService = logService;\n        this._configurationModel = ConfigurationModel.createEmptyModel(this.logService);\n    }\n    reload() {\n        this.resetConfigurationModel();\n        return this.configurationModel;\n    }\n    getConfigurationDefaultOverrides() {\n        return {};\n    }\n    resetConfigurationModel() {\n        this._configurationModel = ConfigurationModel.createEmptyModel(this.logService);\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        this.updateConfigurationModel(Object.keys(properties), properties);\n    }\n    updateConfigurationModel(properties, configurationProperties) {\n        const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n        for (const key of properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const propertySchema = configurationProperties[key];\n            if (defaultOverrideValue !== undefined) {\n                this._configurationModel.setValue(key, defaultOverrideValue);\n            }\n            else if (propertySchema) {\n                this._configurationModel.setValue(key, propertySchema.default);\n            }\n            else {\n                this._configurationModel.removeValue(key);\n            }\n        }\n    }\n}\n","import { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilitySignalService = createDecorator('accessibilitySignalService');\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol('AcknowledgeDocCommentsToken');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    static { this.error = Sound.register({ fileName: 'error.mp3' }); }\n    static { this.warning = Sound.register({ fileName: 'warning.mp3' }); }\n    static { this.success = Sound.register({ fileName: 'success.mp3' }); }\n    static { this.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' }); }\n    static { this.break = Sound.register({ fileName: 'break.mp3' }); }\n    static { this.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' }); }\n    static { this.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' }); }\n    static { this.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' }); }\n    static { this.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' }); }\n    static { this.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' }); }\n    static { this.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' }); }\n    static { this.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' }); }\n    static { this.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' }); }\n    static { this.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' }); }\n    static { this.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' }); }\n    static { this.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' }); }\n    static { this.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' }); }\n    static { this.clear = Sound.register({ fileName: 'clear.mp3' }); }\n    static { this.save = Sound.register({ fileName: 'save.mp3' }); }\n    static { this.format = Sound.register({ fileName: 'format.mp3' }); }\n    static { this.voiceRecordingStarted = Sound.register({ fileName: 'voiceRecordingStarted.mp3' }); }\n    static { this.voiceRecordingStopped = Sound.register({ fileName: 'voiceRecordingStopped.mp3' }); }\n    static { this.progress = Sound.register({ fileName: 'progress.mp3' }); }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AccessibilitySignal {\n    constructor(sound, name, legacySoundSettingsKey, settingsKey, legacyAnnouncementSettingsKey, announcementMessage) {\n        this.sound = sound;\n        this.name = name;\n        this.legacySoundSettingsKey = legacySoundSettingsKey;\n        this.settingsKey = settingsKey;\n        this.legacyAnnouncementSettingsKey = legacyAnnouncementSettingsKey;\n        this.announcementMessage = announcementMessage;\n    }\n    static { this._signals = new Set(); }\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const signal = new AccessibilitySignal(soundSource, options.name, options.legacySoundSettingsKey, options.settingsKey, options.legacyAnnouncementSettingsKey, options.announcementMessage);\n        AccessibilitySignal._signals.add(signal);\n        return signal;\n    }\n    static { this.errorAtPosition = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.positionHasError.name', 'Error at Position'),\n        sound: Sound.error,\n        announcementMessage: localize('accessibility.signals.positionHasError', 'Error'),\n        settingsKey: 'accessibility.signals.positionHasError',\n        delaySettingsKey: 'accessibility.signalOptions.delays.errorAtPosition'\n    }); }\n    static { this.warningAtPosition = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.positionHasWarning.name', 'Warning at Position'),\n        sound: Sound.warning,\n        announcementMessage: localize('accessibility.signals.positionHasWarning', 'Warning'),\n        settingsKey: 'accessibility.signals.positionHasWarning',\n        delaySettingsKey: 'accessibility.signalOptions.delays.warningAtPosition'\n    }); }\n    static { this.errorOnLine = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasError.name', 'Error on Line'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.lineHasError',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.error',\n        announcementMessage: localize('accessibility.signals.lineHasError', 'Error on Line'),\n        settingsKey: 'accessibility.signals.lineHasError',\n    }); }\n    static { this.warningOnLine = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasWarning.name', 'Warning on Line'),\n        sound: Sound.warning,\n        legacySoundSettingsKey: 'audioCues.lineHasWarning',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.warning',\n        announcementMessage: localize('accessibility.signals.lineHasWarning', 'Warning on Line'),\n        settingsKey: 'accessibility.signals.lineHasWarning',\n    }); }\n    static { this.foldedArea = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasFoldedArea.name', 'Folded Area on Line'),\n        sound: Sound.foldedArea,\n        legacySoundSettingsKey: 'audioCues.lineHasFoldedArea',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.foldedArea',\n        announcementMessage: localize('accessibility.signals.lineHasFoldedArea', 'Folded'),\n        settingsKey: 'accessibility.signals.lineHasFoldedArea',\n    }); }\n    static { this.break = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasBreakpoint.name', 'Breakpoint on Line'),\n        sound: Sound.break,\n        legacySoundSettingsKey: 'audioCues.lineHasBreakpoint',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.breakpoint',\n        announcementMessage: localize('accessibility.signals.lineHasBreakpoint', 'Breakpoint'),\n        settingsKey: 'accessibility.signals.lineHasBreakpoint',\n    }); }\n    static { this.inlineSuggestion = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n        sound: Sound.quickFixes,\n        legacySoundSettingsKey: 'audioCues.lineHasInlineSuggestion',\n        settingsKey: 'accessibility.signals.lineHasInlineSuggestion',\n    }); }\n    static { this.terminalQuickFix = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalQuickFix.name', 'Terminal Quick Fix'),\n        sound: Sound.quickFixes,\n        legacySoundSettingsKey: 'audioCues.terminalQuickFix',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalQuickFix',\n        announcementMessage: localize('accessibility.signals.terminalQuickFix', 'Quick Fix'),\n        settingsKey: 'accessibility.signals.terminalQuickFix',\n    }); }\n    static { this.onDebugBreak = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n        sound: Sound.break,\n        legacySoundSettingsKey: 'audioCues.onDebugBreak',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.onDebugBreak',\n        announcementMessage: localize('accessibility.signals.onDebugBreak', 'Breakpoint'),\n        settingsKey: 'accessibility.signals.onDebugBreak',\n    }); }\n    static { this.noInlayHints = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.noInlayHints', 'No Inlay Hints on Line'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.noInlayHints',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.noInlayHints',\n        announcementMessage: localize('accessibility.signals.noInlayHints', 'No Inlay Hints'),\n        settingsKey: 'accessibility.signals.noInlayHints',\n    }); }\n    static { this.taskCompleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.taskCompleted', 'Task Completed'),\n        sound: Sound.taskCompleted,\n        legacySoundSettingsKey: 'audioCues.taskCompleted',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.taskCompleted',\n        announcementMessage: localize('accessibility.signals.taskCompleted', 'Task Completed'),\n        settingsKey: 'accessibility.signals.taskCompleted',\n    }); }\n    static { this.taskFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.taskFailed', 'Task Failed'),\n        sound: Sound.taskFailed,\n        legacySoundSettingsKey: 'audioCues.taskFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.taskFailed',\n        announcementMessage: localize('accessibility.signals.taskFailed', 'Task Failed'),\n        settingsKey: 'accessibility.signals.taskFailed',\n    }); }\n    static { this.terminalCommandFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalCommandFailed', 'Terminal Command Failed'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.terminalCommandFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalCommandFailed',\n        announcementMessage: localize('accessibility.signals.terminalCommandFailed', 'Command Failed'),\n        settingsKey: 'accessibility.signals.terminalCommandFailed',\n    }); }\n    static { this.terminalCommandSucceeded = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalCommandSucceeded', 'Terminal Command Succeeded'),\n        sound: Sound.success,\n        announcementMessage: localize('accessibility.signals.terminalCommandSucceeded', 'Command Succeeded'),\n        settingsKey: 'accessibility.signals.terminalCommandSucceeded',\n    }); }\n    static { this.terminalBell = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalBell', 'Terminal Bell'),\n        sound: Sound.terminalBell,\n        legacySoundSettingsKey: 'audioCues.terminalBell',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalBell',\n        announcementMessage: localize('accessibility.signals.terminalBell', 'Terminal Bell'),\n        settingsKey: 'accessibility.signals.terminalBell',\n    }); }\n    static { this.notebookCellCompleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.notebookCellCompleted', 'Notebook Cell Completed'),\n        sound: Sound.taskCompleted,\n        legacySoundSettingsKey: 'audioCues.notebookCellCompleted',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellCompleted',\n        announcementMessage: localize('accessibility.signals.notebookCellCompleted', 'Notebook Cell Completed'),\n        settingsKey: 'accessibility.signals.notebookCellCompleted',\n    }); }\n    static { this.notebookCellFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.notebookCellFailed', 'Notebook Cell Failed'),\n        sound: Sound.taskFailed,\n        legacySoundSettingsKey: 'audioCues.notebookCellFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellFailed',\n        announcementMessage: localize('accessibility.signals.notebookCellFailed', 'Notebook Cell Failed'),\n        settingsKey: 'accessibility.signals.notebookCellFailed',\n    }); }\n    static { this.diffLineInserted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineInserted', 'Diff Line Inserted'),\n        sound: Sound.diffLineInserted,\n        legacySoundSettingsKey: 'audioCues.diffLineInserted',\n        settingsKey: 'accessibility.signals.diffLineInserted',\n    }); }\n    static { this.diffLineDeleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineDeleted', 'Diff Line Deleted'),\n        sound: Sound.diffLineDeleted,\n        legacySoundSettingsKey: 'audioCues.diffLineDeleted',\n        settingsKey: 'accessibility.signals.diffLineDeleted',\n    }); }\n    static { this.diffLineModified = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineModified', 'Diff Line Modified'),\n        sound: Sound.diffLineModified,\n        legacySoundSettingsKey: 'audioCues.diffLineModified',\n        settingsKey: 'accessibility.signals.diffLineModified',\n    }); }\n    static { this.chatRequestSent = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.chatRequestSent', 'Chat Request Sent'),\n        sound: Sound.chatRequestSent,\n        legacySoundSettingsKey: 'audioCues.chatRequestSent',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.chatRequestSent',\n        announcementMessage: localize('accessibility.signals.chatRequestSent', 'Chat Request Sent'),\n        settingsKey: 'accessibility.signals.chatRequestSent',\n    }); }\n    static { this.chatResponseReceived = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.chatResponseReceived', 'Chat Response Received'),\n        legacySoundSettingsKey: 'audioCues.chatResponseReceived',\n        sound: {\n            randomOneOf: [\n                Sound.chatResponseReceived1,\n                Sound.chatResponseReceived2,\n                Sound.chatResponseReceived3,\n                Sound.chatResponseReceived4\n            ]\n        },\n        settingsKey: 'accessibility.signals.chatResponseReceived'\n    }); }\n    static { this.progress = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.progress', 'Progress'),\n        sound: Sound.progress,\n        legacySoundSettingsKey: 'audioCues.chatResponsePending',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.progress',\n        announcementMessage: localize('accessibility.signals.progress', 'Progress'),\n        settingsKey: 'accessibility.signals.progress'\n    }); }\n    static { this.clear = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.clear', 'Clear'),\n        sound: Sound.clear,\n        legacySoundSettingsKey: 'audioCues.clear',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.clear',\n        announcementMessage: localize('accessibility.signals.clear', 'Clear'),\n        settingsKey: 'accessibility.signals.clear'\n    }); }\n    static { this.save = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.save', 'Save'),\n        sound: Sound.save,\n        legacySoundSettingsKey: 'audioCues.save',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.save',\n        announcementMessage: localize('accessibility.signals.save', 'Save'),\n        settingsKey: 'accessibility.signals.save'\n    }); }\n    static { this.format = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.format', 'Format'),\n        sound: Sound.format,\n        legacySoundSettingsKey: 'audioCues.format',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.format',\n        announcementMessage: localize('accessibility.signals.format', 'Format'),\n        settingsKey: 'accessibility.signals.format'\n    }); }\n    static { this.voiceRecordingStarted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.voiceRecordingStarted', 'Voice Recording Started'),\n        sound: Sound.voiceRecordingStarted,\n        legacySoundSettingsKey: 'audioCues.voiceRecordingStarted',\n        settingsKey: 'accessibility.signals.voiceRecordingStarted'\n    }); }\n    static { this.voiceRecordingStopped = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.voiceRecordingStopped', 'Voice Recording Stopped'),\n        sound: Sound.voiceRecordingStopped,\n        legacySoundSettingsKey: 'audioCues.voiceRecordingStopped',\n        settingsKey: 'accessibility.signals.voiceRecordingStopped'\n    }); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MultiplexLogger } from './log.js';\nexport class LogService extends Disposable {\n    constructor(primaryLogger, otherLoggers = []) {\n        super();\n        this.logger = new MultiplexLogger([primaryLogger, ...otherLoggers]);\n        this._register(primaryLogger.onDidChangeLogLevel(level => this.setLevel(level)));\n    }\n    get onDidChangeLogLevel() {\n        return this.logger.onDidChangeLogLevel;\n    }\n    setLevel(level) {\n        this.logger.setLevel(level);\n    }\n    getLevel() {\n        return this.logger.getLevel();\n    }\n    trace(message, ...args) {\n        this.logger.trace(message, ...args);\n    }\n    debug(message, ...args) {\n        this.logger.debug(message, ...args);\n    }\n    info(message, ...args) {\n        this.logger.info(message, ...args);\n    }\n    warn(message, ...args) {\n        this.logger.warn(message, ...args);\n    }\n    error(message, ...args) {\n        this.logger.error(message, ...args);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener, getWindow } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToggleMenuAction, ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { createAndFillInActionBarActions } from './menuEntryActionViewItem.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { createConfigureKeybindingAction } from '../common/menuService.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, _keybindingService, _commandService, telemetryService) {\n        super(container, _contextMenuService, {\n            // defaults\n            getKeyBinding: (action) => _keybindingService.lookupKeybinding(action.id) ?? undefined,\n            // options (override defaults)\n            ..._options,\n            // mandatory (overide options)\n            allowContextMenu: true,\n            skipTelemetry: typeof _options?.telemetrySource === 'string',\n        });\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this._commandService = _commandService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        const telemetrySource = _options?.telemetrySource;\n        if (telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        this._sessionDisposables.clear();\n        const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (this._options?.hiddenItemStrategy !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (this._options?.hiddenItemStrategy !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (this._options?.overflowBehavior !== undefined) {\n            const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a?.id));\n            const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                count++;\n                if (exemptedIds.has(action.id)) {\n                    continue;\n                }\n                if (count >= maxItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        // coalesce turns Array<IAction|undefined> into IAction[]\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle and configure keybinding actions\n        if (toggleActions.length > 0 || primary.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                const event = new StandardMouseEvent(getWindow(this.getElement()), e);\n                const action = this.getItemAction(event.target);\n                if (!(action)) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                const primaryActions = [];\n                // -- Configure Keybinding Action --\n                if (action instanceof MenuItemAction && action.menuKeybinding) {\n                    primaryActions.push(action.menuKeybinding);\n                }\n                else if (!(action instanceof SubmenuItemAction || action instanceof ToggleMenuAction)) {\n                    // only enable the configure keybinding action for actions that support keybindings\n                    const supportsKeybindings = !!this._keybindingService.lookupKeybinding(action.id);\n                    primaryActions.push(createConfigureKeybindingAction(this._commandService, this._keybindingService, action.id, undefined, supportsKeybindings));\n                }\n                // -- Hide Actions --\n                if (toggleActions.length > 0) {\n                    let noHide = false;\n                    // last item cannot be hidden when using ignore strategy\n                    if (toggleActionsCheckedCount === 1 && this._options?.hiddenItemStrategy === 0 /* HiddenItemStrategy.Ignore */) {\n                        noHide = true;\n                        for (let i = 0; i < toggleActions.length; i++) {\n                            if (toggleActions[i].checked) {\n                                toggleActions[i] = toAction({\n                                    id: action.id,\n                                    label: action.label,\n                                    checked: true,\n                                    enabled: false,\n                                    run() { }\n                                });\n                                break; // there is only one\n                            }\n                        }\n                    }\n                    // add \"hide foo\" actions\n                    if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                        if (!action.hideActions) {\n                            // no context menu for MenuItemAction instances that support no hiding\n                            // those are fake actions and need to be cleaned up\n                            return;\n                        }\n                        primaryActions.push(action.hideActions.hide);\n                    }\n                    else {\n                        primaryActions.push(toAction({\n                            id: 'label',\n                            label: localize('hide', \"Hide\"),\n                            enabled: false,\n                            run() { }\n                        }));\n                    }\n                }\n                const actions = Separator.join(primaryActions, toggleActions);\n                // add \"Reset Menu\" action\n                if (this._options?.resetMenu && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                if (actions.length === 0) {\n                    return;\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => event,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: this._options?.contextMenu,\n                    menuActionOptions: { renderShortTitle: true, ...this._options?.menuOptions },\n                    skipTelemetry: typeof this._options?.telemetrySource === 'string',\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ICommandService),\n    __param(7, ITelemetryService)\n], WorkbenchToolBar);\nexport { WorkbenchToolBar };\n/**\n * A {@link WorkbenchToolBar workbench toolbar} that is purely driven from a {@link MenuId menu}-identifier.\n *\n * *Note* that Manual updates via `setActions` are NOT supported.\n */\nlet MenuWorkbenchToolBar = class MenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService) {\n        super(container, { resetMenu: menuId, ...options }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n        this._onDidChangeMenuItems = this._store.add(new Emitter());\n        this.onDidChangeMenuItems = this._onDidChangeMenuItems.event;\n        // update logic\n        const menu = this._store.add(menuService.createMenu(menuId, contextKeyService, { emitEventsForSubmenuChanges: true }));\n        const updateToolbar = () => {\n            const primary = [];\n            const secondary = [];\n            createAndFillInActionBarActions(menu, options?.menuOptions, { primary, secondary }, options?.toolbarOptions?.primaryGroup, options?.toolbarOptions?.shouldInlineSubmenu, options?.toolbarOptions?.useSeparatorsInPrimaryActions);\n            container.classList.toggle('has-no-actions', primary.length === 0 && secondary.length === 0);\n            super.setActions(primary, secondary);\n        };\n        this._store.add(menu.onDidChange(() => {\n            updateToolbar();\n            this._onDidChangeMenuItems.fire(this);\n        }));\n        updateToolbar();\n    }\n    /**\n     * @deprecated The WorkbenchToolBar does not support this method because it works with menus.\n     */\n    setActions() {\n        throw new BugIndicatingError('This toolbar is populated from a menu.');\n    }\n};\nMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ICommandService),\n    __param(8, ITelemetryService)\n], MenuWorkbenchToolBar);\nexport { MenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorunOpts } from '../../../base/common/observable.js';\nimport { observableFromEventOpts } from '../../../base/common/observableInternal/utils.js';\n/** Creates an observable update when a configuration key updates. */\nexport function observableConfigValue(key, defaultValue, configurationService) {\n    return observableFromEventOpts({ debugName: () => `Configuration Key \"${key}\"`, }, (handleChange) => configurationService.onDidChangeConfiguration(e => {\n        if (e.affectsConfiguration(key)) {\n            handleChange(e);\n        }\n    }), () => configurationService.getValue(key) ?? defaultValue);\n}\n/** Update the configuration key with a value derived from observables. */\nexport function bindContextKey(key, service, computeValue) {\n    const boundKey = key.bindTo(service);\n    return autorunOpts({ debugName: () => `Set Context Key \"${key.key}\"` }, reader => {\n        boundKey.set(computeValue(reader));\n    });\n}\n","/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n    constructor(value) {\n        this.value = value;\n        this._lower = value.toLowerCase();\n    }\n    /**\n     * Gives the value by which to index (for equality).\n     */\n    static toKey(id) {\n        if (typeof id === 'string') {\n            return id.toLowerCase();\n        }\n        return id._lower;\n    }\n}\nexport class ExtensionIdentifierSet {\n    constructor(iterable) {\n        this._set = new Set();\n        if (iterable) {\n            for (const value of iterable) {\n                this.add(value);\n            }\n        }\n    }\n    add(id) {\n        this._set.add(ExtensionIdentifier.toKey(id));\n    }\n    has(id) {\n        return this._set.has(ExtensionIdentifier.toKey(id));\n    }\n}\n","import { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport const CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nclass DragAndDropContributionRegistry {\n}\nexport const Extensions = {\n    DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n//#region DND Utilities\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    static { this.INSTANCE = new LocalSelectionTransfer(); }\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n}\n//#endregion\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { defaultListStyles } from '../../theme/browser/defaultStyles.js';\nimport { asCssVariable } from '../../theme/common/colorRegistry.js';\nexport const acceptSelectedActionCommand = 'acceptSelectedCodeAction';\nexport const previewSelectedActionCommand = 'previewSelectedCodeAction';\nclass HeaderRenderer {\n    get templateId() { return \"header\" /* ActionListItemKind.Header */; }\n    renderTemplate(container) {\n        container.classList.add('group-header');\n        const text = document.createElement('span');\n        container.append(text);\n        return { container, text };\n    }\n    renderElement(element, _index, templateData) {\n        templateData.text.textContent = element.group?.title ?? '';\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nlet ActionItemRenderer = class ActionItemRenderer {\n    get templateId() { return \"action\" /* ActionListItemKind.Action */; }\n    constructor(_supportsPreview, _keybindingService) {\n        this._supportsPreview = _supportsPreview;\n        this._keybindingService = _keybindingService;\n    }\n    renderTemplate(container) {\n        container.classList.add(this.templateId);\n        const icon = document.createElement('div');\n        icon.className = 'icon';\n        container.append(icon);\n        const text = document.createElement('span');\n        text.className = 'title';\n        container.append(text);\n        const keybinding = new KeybindingLabel(container, OS);\n        return { container, icon, text, keybinding };\n    }\n    renderElement(element, _index, data) {\n        if (element.group?.icon) {\n            data.icon.className = ThemeIcon.asClassName(element.group.icon);\n            if (element.group.icon.color) {\n                data.icon.style.color = asCssVariable(element.group.icon.color.id);\n            }\n        }\n        else {\n            data.icon.className = ThemeIcon.asClassName(Codicon.lightBulb);\n            data.icon.style.color = 'var(--vscode-editorLightBulb-foreground)';\n        }\n        if (!element.item || !element.label) {\n            return;\n        }\n        data.text.textContent = stripNewlines(element.label);\n        data.keybinding.set(element.keybinding);\n        dom.setVisibility(!!element.keybinding, data.keybinding.element);\n        const actionTitle = this._keybindingService.lookupKeybinding(acceptSelectedActionCommand)?.getLabel();\n        const previewTitle = this._keybindingService.lookupKeybinding(previewSelectedActionCommand)?.getLabel();\n        data.container.classList.toggle('option-disabled', element.disabled);\n        if (element.disabled) {\n            data.container.title = element.label;\n        }\n        else if (actionTitle && previewTitle) {\n            if (this._supportsPreview && element.canPreview) {\n                data.container.title = localize({ key: 'label-preview', comment: ['placeholders are keybindings, e.g \"F2 to Apply, Shift+F2 to Preview\"'] }, \"{0} to Apply, {1} to Preview\", actionTitle, previewTitle);\n            }\n            else {\n                data.container.title = localize({ key: 'label', comment: ['placeholder is a keybinding, e.g \"F2 to Apply\"'] }, \"{0} to Apply\", actionTitle);\n            }\n        }\n        else {\n            data.container.title = '';\n        }\n    }\n    disposeTemplate(_templateData) {\n        _templateData.keybinding.dispose();\n    }\n};\nActionItemRenderer = __decorate([\n    __param(1, IKeybindingService)\n], ActionItemRenderer);\nclass AcceptSelectedEvent extends UIEvent {\n    constructor() { super('acceptSelectedAction'); }\n}\nclass PreviewSelectedEvent extends UIEvent {\n    constructor() { super('previewSelectedAction'); }\n}\nfunction getKeyboardNavigationLabel(item) {\n    // Filter out header vs. action\n    if (item.kind === 'action') {\n        return item.label;\n    }\n    return undefined;\n}\nlet ActionList = class ActionList extends Disposable {\n    constructor(user, preview, items, _delegate, _contextViewService, _keybindingService) {\n        super();\n        this._delegate = _delegate;\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._actionLineHeight = 24;\n        this._headerLineHeight = 26;\n        this.cts = this._register(new CancellationTokenSource());\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('actionList');\n        const virtualDelegate = {\n            getHeight: element => element.kind === \"header\" /* ActionListItemKind.Header */ ? this._headerLineHeight : this._actionLineHeight,\n            getTemplateId: element => element.kind\n        };\n        this._list = this._register(new List(user, this.domNode, virtualDelegate, [\n            new ActionItemRenderer(preview, this._keybindingService),\n            new HeaderRenderer(),\n        ], {\n            keyboardSupport: false,\n            typeNavigationEnabled: true,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel },\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    if (element.kind === \"action\" /* ActionListItemKind.Action */) {\n                        let label = element.label ? stripNewlines(element?.label) : '';\n                        if (element.disabled) {\n                            label = localize({ key: 'customQuickFixWidget.labels', comment: [`Action widget labels for accessibility.`] }, \"{0}, Disabled Reason: {1}\", label, element.disabled);\n                        }\n                        return label;\n                    }\n                    return null;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'customQuickFixWidget', comment: [`An action widget option`] }, \"Action Widget\"),\n                getRole: (e) => e.kind === \"action\" /* ActionListItemKind.Action */ ? 'option' : 'separator',\n                getWidgetRole: () => 'listbox',\n            },\n        }));\n        this._list.style(defaultListStyles);\n        this._register(this._list.onMouseClick(e => this.onListClick(e)));\n        this._register(this._list.onMouseOver(e => this.onListHover(e)));\n        this._register(this._list.onDidChangeFocus(() => this.onFocus()));\n        this._register(this._list.onDidChangeSelection(e => this.onListSelection(e)));\n        this._allMenuItems = items;\n        this._list.splice(0, this._list.length, this._allMenuItems);\n        if (this._list.length) {\n            this.focusNext();\n        }\n    }\n    focusCondition(element) {\n        return !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */;\n    }\n    hide(didCancel) {\n        this._delegate.onHide(didCancel);\n        this.cts.cancel();\n        this._contextViewService.hideContextView();\n    }\n    layout(minWidth) {\n        // Updating list height, depending on how many separators and headers there are.\n        const numHeaders = this._allMenuItems.filter(item => item.kind === 'header').length;\n        const itemsHeight = this._allMenuItems.length * this._actionLineHeight;\n        const heightWithHeaders = itemsHeight + numHeaders * this._headerLineHeight - numHeaders * this._actionLineHeight;\n        this._list.layout(heightWithHeaders);\n        let maxWidth = minWidth;\n        if (this._allMenuItems.length >= 50) {\n            maxWidth = 380;\n        }\n        else {\n            // For finding width dynamically (not using resize observer)\n            const itemWidths = this._allMenuItems.map((_, index) => {\n                const element = this.domNode.ownerDocument.getElementById(this._list.getElementID(index));\n                if (element) {\n                    element.style.width = 'auto';\n                    const width = element.getBoundingClientRect().width;\n                    element.style.width = '';\n                    return width;\n                }\n                return 0;\n            });\n            // resize observer - can be used in the future since list widget supports dynamic height but not width\n            maxWidth = Math.max(...itemWidths, minWidth);\n        }\n        const maxVhPrecentage = 0.7;\n        const height = Math.min(heightWithHeaders, this.domNode.ownerDocument.body.clientHeight * maxVhPrecentage);\n        this._list.layout(height, maxWidth);\n        this.domNode.style.height = `${height}px`;\n        this._list.domFocus();\n        return maxWidth;\n    }\n    focusPrevious() {\n        this._list.focusPrevious(1, true, undefined, this.focusCondition);\n    }\n    focusNext() {\n        this._list.focusNext(1, true, undefined, this.focusCondition);\n    }\n    acceptSelected(preview) {\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        if (!this.focusCondition(element)) {\n            return;\n        }\n        const event = preview ? new PreviewSelectedEvent() : new AcceptSelectedEvent();\n        this._list.setSelection([focusIndex], event);\n    }\n    onListSelection(e) {\n        if (!e.elements.length) {\n            return;\n        }\n        const element = e.elements[0];\n        if (element.item && this.focusCondition(element)) {\n            this._delegate.onSelect(element.item, e.browserEvent instanceof PreviewSelectedEvent);\n        }\n        else {\n            this._list.setSelection([]);\n        }\n    }\n    onFocus() {\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        this._delegate.onFocus?.(element.item);\n    }\n    async onListHover(e) {\n        const element = e.element;\n        if (element && element.item && this.focusCondition(element)) {\n            if (this._delegate.onHover && !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */) {\n                const result = await this._delegate.onHover(element.item, this.cts.token);\n                element.canPreview = result ? result.canPreview : undefined;\n            }\n            if (e.index) {\n                this._list.splice(e.index, 1, [element]);\n            }\n        }\n        this._list.setFocus(typeof e.index === 'number' ? [e.index] : []);\n    }\n    onListClick(e) {\n        if (e.element && this.focusCondition(e.element)) {\n            this._list.setFocus([]);\n        }\n    }\n};\nActionList = __decorate([\n    __param(4, IContextViewService),\n    __param(5, IKeybindingService)\n], ActionList);\nexport { ActionList };\nfunction stripNewlines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport './actionWidget.css';\nimport { localize, localize2 } from '../../../nls.js';\nimport { acceptSelectedActionCommand, ActionList, previewSelectedActionCommand } from './actionList.js';\nimport { Action2, registerAction2 } from '../../actions/common/actions.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { inputActiveOptionBackground, registerColor } from '../../theme/common/colorRegistry.js';\nregisterColor('actionBar.toggledBackground', inputActiveOptionBackground, localize('actionBar.toggledBackground', 'Background color for toggled action items in action bar.'));\nconst ActionWidgetContextKeys = {\n    Visible: new RawContextKey('codeActionMenuVisible', false, localize('codeActionMenuVisible', \"Whether the action widget list is visible\"))\n};\nexport const IActionWidgetService = createDecorator('actionWidgetService');\nlet ActionWidgetService = class ActionWidgetService extends Disposable {\n    get isVisible() {\n        return ActionWidgetContextKeys.Visible.getValue(this._contextKeyService) || false;\n    }\n    constructor(_contextViewService, _contextKeyService, _instantiationService) {\n        super();\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._list = this._register(new MutableDisposable());\n    }\n    show(user, supportsPreview, items, delegate, anchor, container, actionBarActions) {\n        const visibleContext = ActionWidgetContextKeys.Visible.bindTo(this._contextKeyService);\n        const list = this._instantiationService.createInstance(ActionList, user, supportsPreview, items, delegate);\n        this._contextViewService.showContextView({\n            getAnchor: () => anchor,\n            render: (container) => {\n                visibleContext.set(true);\n                return this._renderWidget(container, list, actionBarActions ?? []);\n            },\n            onHide: (didCancel) => {\n                visibleContext.reset();\n                this._onWidgetClosed(didCancel);\n            },\n        }, container, false);\n    }\n    acceptSelected(preview) {\n        this._list.value?.acceptSelected(preview);\n    }\n    focusPrevious() {\n        this._list?.value?.focusPrevious();\n    }\n    focusNext() {\n        this._list?.value?.focusNext();\n    }\n    hide(didCancel) {\n        this._list.value?.hide(didCancel);\n        this._list.clear();\n    }\n    _renderWidget(element, list, actionBarActions) {\n        const widget = document.createElement('div');\n        widget.classList.add('action-widget');\n        element.appendChild(widget);\n        this._list.value = list;\n        if (this._list.value) {\n            widget.appendChild(this._list.value.domNode);\n        }\n        else {\n            throw new Error('List has no value');\n        }\n        const renderDisposables = new DisposableStore();\n        // Invisible div to block mouse interaction in the rest of the UI\n        const menuBlock = document.createElement('div');\n        const block = element.appendChild(menuBlock);\n        block.classList.add('context-view-block');\n        renderDisposables.add(dom.addDisposableListener(block, dom.EventType.MOUSE_DOWN, e => e.stopPropagation()));\n        // Invisible div to block mouse interaction with the menu\n        const pointerBlockDiv = document.createElement('div');\n        const pointerBlock = element.appendChild(pointerBlockDiv);\n        pointerBlock.classList.add('context-view-pointerBlock');\n        // Removes block on click INSIDE widget or ANY mouse movement\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.POINTER_MOVE, () => pointerBlock.remove()));\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.MOUSE_DOWN, () => pointerBlock.remove()));\n        // Action bar\n        let actionBarWidth = 0;\n        if (actionBarActions.length) {\n            const actionBar = this._createActionBar('.action-widget-action-bar', actionBarActions);\n            if (actionBar) {\n                widget.appendChild(actionBar.getContainer().parentElement);\n                renderDisposables.add(actionBar);\n                actionBarWidth = actionBar.getContainer().offsetWidth;\n            }\n        }\n        const width = this._list.value?.layout(actionBarWidth);\n        widget.style.width = `${width}px`;\n        const focusTracker = renderDisposables.add(dom.trackFocus(element));\n        renderDisposables.add(focusTracker.onDidBlur(() => this.hide(true)));\n        return renderDisposables;\n    }\n    _createActionBar(className, actions) {\n        if (!actions.length) {\n            return undefined;\n        }\n        const container = dom.$(className);\n        const actionBar = new ActionBar(container);\n        actionBar.push(actions, { icon: false, label: true });\n        return actionBar;\n    }\n    _onWidgetClosed(didCancel) {\n        this._list.value?.hide(didCancel);\n    }\n};\nActionWidgetService = __decorate([\n    __param(0, IContextViewService),\n    __param(1, IContextKeyService),\n    __param(2, IInstantiationService)\n], ActionWidgetService);\nregisterSingleton(IActionWidgetService, ActionWidgetService, 1 /* InstantiationType.Delayed */);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 1000;\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'hideCodeActionWidget',\n            title: localize2('hideCodeActionWidget.title', \"Hide action widget\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */,\n                secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n            },\n        });\n    }\n    run(accessor) {\n        accessor.get(IActionWidgetService).hide(true);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectPrevCodeAction',\n            title: localize2('selectPrevCodeAction.title', \"Select previous action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] },\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusPrevious();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectNextCodeAction',\n            title: localize2('selectNextCodeAction.title', \"Select next action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusNext();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: acceptSelectedActionCommand,\n            title: localize2('acceptSelected.title', \"Accept selected action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */],\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: previewSelectedActionCommand,\n            title: localize2('previewSelected.title', \"Preview selected action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected(true);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { ReplaceInput } from '../../../base/browser/ui/findinput/replaceInput.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nimport { localize } from '../../../nls.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isActiveElement } from '../../../base/browser/dom.js';\nexport const historyNavigationVisible = new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\"));\nconst HistoryNavigationWidgetFocusContext = 'historyNavigationWidgetFocus';\nconst HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';\nconst HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';\nlet lastFocusedWidget = undefined;\nconst widgets = [];\nexport function registerAndCreateHistoryNavigationContext(scopedContextKeyService, widget) {\n    if (widgets.includes(widget)) {\n        throw new Error('Cannot register the same widget multiple times');\n    }\n    widgets.push(widget);\n    const disposableStore = new DisposableStore();\n    const historyNavigationWidgetFocus = new RawContextKey(HistoryNavigationWidgetFocusContext, false).bindTo(scopedContextKeyService);\n    const historyNavigationForwardsEnablement = new RawContextKey(HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);\n    const historyNavigationBackwardsEnablement = new RawContextKey(HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);\n    const onDidFocus = () => {\n        historyNavigationWidgetFocus.set(true);\n        lastFocusedWidget = widget;\n    };\n    const onDidBlur = () => {\n        historyNavigationWidgetFocus.set(false);\n        if (lastFocusedWidget === widget) {\n            lastFocusedWidget = undefined;\n        }\n    };\n    // Check for currently being focused\n    if (isActiveElement(widget.element)) {\n        onDidFocus();\n    }\n    disposableStore.add(widget.onDidFocus(() => onDidFocus()));\n    disposableStore.add(widget.onDidBlur(() => onDidBlur()));\n    disposableStore.add(toDisposable(() => {\n        widgets.splice(widgets.indexOf(widget), 1);\n        onDidBlur();\n    }));\n    return {\n        historyNavigationForwardsEnablement,\n        historyNavigationBackwardsEnablement,\n        dispose() {\n            disposableStore.dispose();\n        }\n    };\n}\nlet ContextScopedFindInput = class ContextScopedFindInput extends FindInput {\n    constructor(container, contextViewProvider, options, contextKeyService) {\n        super(container, contextViewProvider, options);\n        const scopedContextKeyService = this._register(contextKeyService.createScoped(this.inputBox.element));\n        this._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this.inputBox));\n    }\n};\nContextScopedFindInput = __decorate([\n    __param(3, IContextKeyService)\n], ContextScopedFindInput);\nexport { ContextScopedFindInput };\nlet ContextScopedReplaceInput = class ContextScopedReplaceInput extends ReplaceInput {\n    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false) {\n        super(container, contextViewProvider, showReplaceOptions, options);\n        const scopedContextKeyService = this._register(contextKeyService.createScoped(this.inputBox.element));\n        this._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this.inputBox));\n    }\n};\nContextScopedReplaceInput = __decorate([\n    __param(3, IContextKeyService)\n], ContextScopedReplaceInput);\nexport { ContextScopedReplaceInput };\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'history.showPrevious',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetFocusContext), ContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext, true), ContextKeyExpr.not('isComposing'), historyNavigationVisible.isEqualTo(false)),\n    primary: 16 /* KeyCode.UpArrow */,\n    secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n    handler: (accessor) => {\n        lastFocusedWidget?.showPreviousValue();\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'history.showNext',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetFocusContext), ContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true), ContextKeyExpr.not('isComposing'), historyNavigationVisible.isEqualTo(false)),\n    primary: 18 /* KeyCode.DownArrow */,\n    secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n    handler: (accessor) => {\n        lastFocusedWidget?.showNextValue();\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function showHistoryKeybindingHint(keybindingService) {\n    return keybindingService.lookupKeybinding('history.showPrevious')?.getElectronAccelerator() === 'Up' && keybindingService.lookupKeybinding('history.showNext')?.getElectronAccelerator() === 'Down';\n}\n","//#endregion\n//#region Utilities\nexport var FileKind;\n(function (FileKind) {\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n})(FileKind || (FileKind = {}));\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const AccessibleViewRegistry = new class AccessibleViewRegistry {\n    constructor() {\n        this._implementations = [];\n    }\n    register(implementation) {\n        this._implementations.push(implementation);\n        return {\n            dispose: () => {\n                const idx = this._implementations.indexOf(implementation);\n                if (idx !== -1) {\n                    this._implementations.splice(idx, 1);\n                }\n            }\n        };\n    }\n    getImplementations() {\n        return this._implementations;\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './media/severityIcon.css';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport Severity from '../../../base/common/severity.js';\nexport var SeverityIcon;\n(function (SeverityIcon) {\n    function className(severity) {\n        switch (severity) {\n            case Severity.Ignore:\n                return 'severity-ignore ' + ThemeIcon.asClassName(Codicon.info);\n            case Severity.Info:\n                return ThemeIcon.asClassName(Codicon.info);\n            case Severity.Warning:\n                return ThemeIcon.asClassName(Codicon.warning);\n            case Severity.Error:\n                return ThemeIcon.asClassName(Codicon.error);\n            default:\n                return '';\n        }\n    }\n    SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isHotReloadEnabled } from '../../../base/common/hotReload.js';\nimport { readHotReloadableExport } from '../../../base/common/hotReloadHelpers.js';\nimport { autorunWithStore } from '../../../base/common/observable.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nclass BaseClass {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n    }\n    init(...params) { }\n}\nfunction createWrapper(getClass, B) {\n    return (class ReloadableWrapper extends B {\n        constructor() {\n            super(...arguments);\n            this._autorun = undefined;\n        }\n        init(...params) {\n            this._autorun = autorunWithStore((reader, store) => {\n                const clazz = readHotReloadableExport(getClass(), reader);\n                store.add(this.instantiationService.createInstance(clazz, ...params));\n            });\n        }\n        dispose() {\n            this._autorun?.dispose();\n        }\n    });\n}\n/**\n * Wrap a class in a reloadable wrapper.\n * When the wrapper is created, the original class is created.\n * When the original class changes, the instance is re-created.\n*/\nexport function wrapInReloadableClass1(getClass) {\n    return !isHotReloadEnabled() ? getClass() : createWrapper(getClass, BaseClass1);\n}\nlet BaseClass1 = class BaseClass1 extends BaseClass {\n    constructor(param1, i) { super(i); this.init(param1); }\n};\nBaseClass1 = __decorate([\n    __param(1, IInstantiationService)\n], BaseClass1);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize2 } from '../../../nls.js';\nexport const Categories = Object.freeze({\n    View: localize2('view', 'View'),\n    Help: localize2('help', 'Help'),\n    Test: localize2('test', 'Test'),\n    File: localize2('file', 'File'),\n    Preferences: localize2('preferences', 'Preferences'),\n    Developer: localize2({ key: 'developer', comment: ['A developer on Code itself or someone diagnosing issues in Code'] }, \"Developer\"),\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, append, EventHelper } from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../../base/browser/touch.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IOpenerService } from '../common/opener.js';\nimport './link.css';\nimport { getDefaultHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService } from '../../hover/browser/hover.js';\nlet Link = class Link extends Disposable {\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        if (enabled) {\n            this.el.setAttribute('aria-disabled', 'false');\n            this.el.tabIndex = 0;\n            this.el.style.pointerEvents = 'auto';\n            this.el.style.opacity = '1';\n            this.el.style.cursor = 'pointer';\n            this._enabled = false;\n        }\n        else {\n            this.el.setAttribute('aria-disabled', 'true');\n            this.el.tabIndex = -1;\n            this.el.style.pointerEvents = 'none';\n            this.el.style.opacity = '0.4';\n            this.el.style.cursor = 'default';\n            this._enabled = true;\n        }\n        this._enabled = enabled;\n    }\n    constructor(container, _link, options = {}, _hoverService, openerService) {\n        super();\n        this._link = _link;\n        this._hoverService = _hoverService;\n        this._enabled = true;\n        this.el = append(container, $('a.monaco-link', {\n            tabIndex: _link.tabIndex ?? 0,\n            href: _link.href,\n        }, _link.label));\n        this.hoverDelegate = options.hoverDelegate ?? getDefaultHoverDelegate('mouse');\n        this.setTooltip(_link.title);\n        this.el.setAttribute('role', 'button');\n        const onClickEmitter = this._register(new DomEmitter(this.el, 'click'));\n        const onKeyPress = this._register(new DomEmitter(this.el, 'keypress'));\n        const onEnterPress = Event.chain(onKeyPress.event, $ => $.map(e => new StandardKeyboardEvent(e))\n            .filter(e => e.keyCode === 3 /* KeyCode.Enter */));\n        const onTap = this._register(new DomEmitter(this.el, TouchEventType.Tap)).event;\n        this._register(Gesture.addTarget(this.el));\n        const onOpen = Event.any(onClickEmitter.event, onEnterPress, onTap);\n        this._register(onOpen(e => {\n            if (!this.enabled) {\n                return;\n            }\n            EventHelper.stop(e, true);\n            if (options?.opener) {\n                options.opener(this._link.href);\n            }\n            else {\n                openerService.open(this._link.href, { allowCommands: true });\n            }\n        }));\n        this.enabled = true;\n    }\n    setTooltip(title) {\n        if (this.hoverDelegate.showNativeHover) {\n            this.el.title = title ?? '';\n        }\n        else if (!this.hover && title) {\n            this.hover = this._register(this._hoverService.setupManagedHover(this.hoverDelegate, this.el, title));\n        }\n        else if (this.hover) {\n            this.hover.update(title);\n        }\n    }\n};\nLink = __decorate([\n    __param(3, IHoverService),\n    __param(4, IOpenerService)\n], Link);\nexport { Link };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar HelpQuickAccessProvider_1;\nimport { localize } from '../../../nls.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService } from '../common/quickInput.js';\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\n    static { HelpQuickAccessProvider_1 = this; }\n    static { this.PREFIX = '?'; }\n    constructor(quickInputService, keybindingService) {\n        this.quickInputService = quickInputService;\n        this.keybindingService = keybindingService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n    }\n    provide(picker) {\n        const disposables = new DisposableStore();\n        // Open a picker with the selected value if picked\n        disposables.add(picker.onDidAccept(() => {\n            const [item] = picker.selectedItems;\n            if (item) {\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\n            }\n        }));\n        // Also open a picker when we detect the user typed the exact\n        // name of a provider (e.g. `?term` for terminals)\n        disposables.add(picker.onDidChangeValue(value => {\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider_1.PREFIX.length));\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider_1.PREFIX) {\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\n            }\n        }));\n        // Fill in all providers\n        picker.items = this.getQuickAccessProviders().filter(p => p.prefix !== HelpQuickAccessProvider_1.PREFIX);\n        return disposables;\n    }\n    getQuickAccessProviders() {\n        const providers = this.registry\n            .getQuickAccessProviders()\n            .sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))\n            .flatMap(provider => this.createPicks(provider));\n        return providers;\n    }\n    createPicks(provider) {\n        return provider.helpEntries.map(helpEntry => {\n            const prefix = helpEntry.prefix || provider.prefix;\n            const label = prefix || '\\u2026' /* ... */;\n            return {\n                prefix,\n                label,\n                keybinding: helpEntry.commandId ? this.keybindingService.lookupKeybinding(helpEntry.commandId) : undefined,\n                ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n                description: helpEntry.description\n            };\n        });\n    }\n};\nHelpQuickAccessProvider = HelpQuickAccessProvider_1 = __decorate([\n    __param(0, IQuickInputService),\n    __param(1, IKeybindingService)\n], HelpQuickAccessProvider);\nexport { HelpQuickAccessProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { isFunction } from '../../../base/common/types.js';\nexport var TriggerAction;\n(function (TriggerAction) {\n    /**\n     * Do nothing after the button was clicked.\n     */\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\n    /**\n     * Close the picker.\n     */\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\n    /**\n     * Update the results of the picker.\n     */\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\n    /**\n     * Remove the item from the picker.\n     */\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\n})(TriggerAction || (TriggerAction = {}));\nfunction isPicksWithActive(obj) {\n    const candidate = obj;\n    return Array.isArray(candidate.items);\n}\nfunction isFastAndSlowPicks(obj) {\n    const candidate = obj;\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\nexport class PickerQuickAccessProvider extends Disposable {\n    constructor(prefix, options) {\n        super();\n        this.prefix = prefix;\n        this.options = options;\n    }\n    provide(picker, token, runOptions) {\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!this.options?.canAcceptInBackground;\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Set initial picks and update on type\n        let picksCts = undefined;\n        const picksDisposable = disposables.add(new MutableDisposable());\n        const updatePickerItems = async () => {\n            const picksDisposables = picksDisposable.value = new DisposableStore();\n            // Cancel any previous ask for picks and busy\n            picksCts?.dispose(true);\n            picker.busy = false;\n            // Create new cancellation source for this run\n            picksCts = new CancellationTokenSource(token);\n            // Collect picks and support both long running and short or combined\n            const picksToken = picksCts.token;\n            let picksFilter = picker.value.substring(this.prefix.length);\n            if (!this.options?.shouldSkipTrimPickFilter) {\n                picksFilter = picksFilter.trim();\n            }\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken, runOptions);\n            const applyPicks = (picks, skipEmpty) => {\n                let items;\n                let activeItem = undefined;\n                if (isPicksWithActive(picks)) {\n                    items = picks.items;\n                    activeItem = picks.active;\n                }\n                else {\n                    items = picks;\n                }\n                if (items.length === 0) {\n                    if (skipEmpty) {\n                        return false;\n                    }\n                    // We show the no results pick if we have no input to prevent completely empty pickers #172613\n                    if ((picksFilter.length > 0 || picker.hideInput) && this.options?.noResultsPick) {\n                        if (isFunction(this.options.noResultsPick)) {\n                            items = [this.options.noResultsPick(picksFilter)];\n                        }\n                        else {\n                            items = [this.options.noResultsPick];\n                        }\n                    }\n                }\n                picker.items = items;\n                if (activeItem) {\n                    picker.activeItems = [activeItem];\n                }\n                return true;\n            };\n            const applyFastAndSlowPicks = async (fastAndSlowPicks) => {\n                let fastPicksApplied = false;\n                let slowPicksApplied = false;\n                await Promise.all([\n                    // Fast Picks: if `mergeDelay` is configured, in order to reduce\n                    // amount of flicker, we race against the slow picks over some delay\n                    // and then set the fast picks.\n                    // If the slow picks are faster, we reduce the flicker by only\n                    // setting the items once.\n                    (async () => {\n                        if (typeof fastAndSlowPicks.mergeDelay === 'number') {\n                            await timeout(fastAndSlowPicks.mergeDelay);\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                        }\n                        if (!slowPicksApplied) {\n                            fastPicksApplied = applyPicks(fastAndSlowPicks.picks, true /* skip over empty to reduce flicker */);\n                        }\n                    })(),\n                    // Slow Picks: we await the slow picks and then set them at\n                    // once together with the fast picks, but only if we actually\n                    // have additional results.\n                    (async () => {\n                        picker.busy = true;\n                        try {\n                            const awaitedAdditionalPicks = await fastAndSlowPicks.additionalPicks;\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                            let picks;\n                            let activePick = undefined;\n                            if (isPicksWithActive(fastAndSlowPicks.picks)) {\n                                picks = fastAndSlowPicks.picks.items;\n                                activePick = fastAndSlowPicks.picks.active;\n                            }\n                            else {\n                                picks = fastAndSlowPicks.picks;\n                            }\n                            let additionalPicks;\n                            let additionalActivePick = undefined;\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\n                                additionalPicks = awaitedAdditionalPicks.items;\n                                additionalActivePick = awaitedAdditionalPicks.active;\n                            }\n                            else {\n                                additionalPicks = awaitedAdditionalPicks;\n                            }\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\n                                // If we do not have any activePick or additionalActivePick\n                                // we try to preserve the currently active pick from the\n                                // fast results. This fixes an issue where the user might\n                                // have made a pick active before the additional results\n                                // kick in.\n                                // See https://github.com/microsoft/vscode/issues/102480\n                                let fallbackActivePick = undefined;\n                                if (!activePick && !additionalActivePick) {\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n                                        fallbackActivePick = fallbackActivePickCandidate;\n                                    }\n                                }\n                                applyPicks({\n                                    items: [...picks, ...additionalPicks],\n                                    active: activePick || additionalActivePick || fallbackActivePick\n                                });\n                            }\n                        }\n                        finally {\n                            if (!picksToken.isCancellationRequested) {\n                                picker.busy = false;\n                            }\n                            slowPicksApplied = true;\n                        }\n                    })()\n                ]);\n            };\n            // No Picks\n            if (providedPicks === null) {\n                // Ignore\n            }\n            // Fast and Slow Picks\n            else if (isFastAndSlowPicks(providedPicks)) {\n                await applyFastAndSlowPicks(providedPicks);\n            }\n            // Fast Picks\n            else if (!(providedPicks instanceof Promise)) {\n                applyPicks(providedPicks);\n            }\n            // Slow Picks\n            else {\n                picker.busy = true;\n                try {\n                    const awaitedPicks = await providedPicks;\n                    if (picksToken.isCancellationRequested) {\n                        return;\n                    }\n                    if (isFastAndSlowPicks(awaitedPicks)) {\n                        await applyFastAndSlowPicks(awaitedPicks);\n                    }\n                    else {\n                        applyPicks(awaitedPicks);\n                    }\n                }\n                finally {\n                    if (!picksToken.isCancellationRequested) {\n                        picker.busy = false;\n                    }\n                }\n            }\n        };\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n        updatePickerItems();\n        // Accept the pick on accept and hide picker\n        disposables.add(picker.onDidAccept(event => {\n            if (runOptions?.handleAccept) {\n                if (!event.inBackground) {\n                    picker.hide(); // hide picker unless we accept in background\n                }\n                runOptions.handleAccept?.(picker.activeItems[0]);\n                return;\n            }\n            const [item] = picker.selectedItems;\n            if (typeof item?.accept === 'function') {\n                if (!event.inBackground) {\n                    picker.hide(); // hide picker unless we accept in background\n                }\n                item.accept(picker.keyMods, event);\n            }\n        }));\n        const buttonTrigger = async (button, item) => {\n            if (typeof item.trigger !== 'function') {\n                return;\n            }\n            const buttonIndex = item.buttons?.indexOf(button) ?? -1;\n            if (buttonIndex >= 0) {\n                const result = item.trigger(buttonIndex, picker.keyMods);\n                const action = (typeof result === 'number') ? result : await result;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                switch (action) {\n                    case TriggerAction.NO_ACTION:\n                        break;\n                    case TriggerAction.CLOSE_PICKER:\n                        picker.hide();\n                        break;\n                    case TriggerAction.REFRESH_PICKER:\n                        updatePickerItems();\n                        break;\n                    case TriggerAction.REMOVE_ITEM: {\n                        const index = picker.items.indexOf(item);\n                        if (index !== -1) {\n                            const items = picker.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = picker.keepScrollPosition;\n                            picker.keepScrollPosition = true;\n                            picker.items = items;\n                            if (activeItems) {\n                                picker.activeItems = activeItems;\n                            }\n                            picker.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        // Trigger the pick with button index if button triggered\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => buttonTrigger(button, item)));\n        disposables.add(picker.onDidTriggerSeparatorButton(({ button, separator }) => buttonTrigger(button, separator)));\n        return disposables;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar AbstractCommandsQuickAccessProvider_1, CommandsHistory_1;\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { matchesContiguousSubString, matchesPrefix, matchesWords, or } from '../../../base/common/filters.js';\nimport { createSingleCallFunction } from '../../../base/common/functional.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { TfIdfCalculator, normalizeTfIdfScores } from '../../../base/common/tfIdf.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { PickerQuickAccessProvider } from './pickerQuickAccess.js';\nimport { IStorageService, WillSaveStateReason } from '../../storage/common/storage.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nlet AbstractCommandsQuickAccessProvider = class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider {\n    static { AbstractCommandsQuickAccessProvider_1 = this; }\n    static { this.PREFIX = '>'; }\n    static { this.TFIDF_THRESHOLD = 0.5; }\n    static { this.TFIDF_MAX_RESULTS = 5; }\n    static { this.WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString); }\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\n        super(AbstractCommandsQuickAccessProvider_1.PREFIX, options);\n        this.instantiationService = instantiationService;\n        this.keybindingService = keybindingService;\n        this.commandService = commandService;\n        this.telemetryService = telemetryService;\n        this.dialogService = dialogService;\n        this.commandsHistory = this._register(this.instantiationService.createInstance(CommandsHistory));\n        this.options = options;\n    }\n    async _getPicks(filter, _disposables, token, runOptions) {\n        // Ask subclass for all command picks\n        const allCommandPicks = await this.getCommandPicks(token);\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        const runTfidf = createSingleCallFunction(() => {\n            const tfidf = new TfIdfCalculator();\n            tfidf.updateDocuments(allCommandPicks.map(commandPick => ({\n                key: commandPick.commandId,\n                textChunks: [this.getTfIdfChunk(commandPick)]\n            })));\n            const result = tfidf.calculateScores(filter, token);\n            return normalizeTfIdfScores(result)\n                .filter(score => score.score > AbstractCommandsQuickAccessProvider_1.TFIDF_THRESHOLD)\n                .slice(0, AbstractCommandsQuickAccessProvider_1.TFIDF_MAX_RESULTS);\n        });\n        // Filter\n        const filteredCommandPicks = [];\n        for (const commandPick of allCommandPicks) {\n            const labelHighlights = AbstractCommandsQuickAccessProvider_1.WORD_FILTER(filter, commandPick.label) ?? undefined;\n            const aliasHighlights = commandPick.commandAlias ? AbstractCommandsQuickAccessProvider_1.WORD_FILTER(filter, commandPick.commandAlias) ?? undefined : undefined;\n            // Add if matching in label or alias\n            if (labelHighlights || aliasHighlights) {\n                commandPick.highlights = {\n                    label: labelHighlights,\n                    detail: this.options.showAlias ? aliasHighlights : undefined\n                };\n                filteredCommandPicks.push(commandPick);\n            }\n            // Also add if we have a 100% command ID match\n            else if (filter === commandPick.commandId) {\n                filteredCommandPicks.push(commandPick);\n            }\n            // Handle tf-idf scoring for the rest if there's a filter\n            else if (filter.length >= 3) {\n                const tfidf = runTfidf();\n                if (token.isCancellationRequested) {\n                    return [];\n                }\n                // Add if we have a tf-idf score\n                const tfidfScore = tfidf.find(score => score.key === commandPick.commandId);\n                if (tfidfScore) {\n                    commandPick.tfIdfScore = tfidfScore.score;\n                    filteredCommandPicks.push(commandPick);\n                }\n            }\n        }\n        // Add description to commands that have duplicate labels\n        const mapLabelToCommand = new Map();\n        for (const commandPick of filteredCommandPicks) {\n            const existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\n            if (existingCommandForLabel) {\n                commandPick.description = commandPick.commandId;\n                existingCommandForLabel.description = existingCommandForLabel.commandId;\n            }\n            else {\n                mapLabelToCommand.set(commandPick.label, commandPick);\n            }\n        }\n        // Sort by MRU order and fallback to name otherwise\n        filteredCommandPicks.sort((commandPickA, commandPickB) => {\n            // If a result came from tf-idf, we want to put that towards the bottom\n            if (commandPickA.tfIdfScore && commandPickB.tfIdfScore) {\n                if (commandPickA.tfIdfScore === commandPickB.tfIdfScore) {\n                    return commandPickA.label.localeCompare(commandPickB.label); // prefer lexicographically smaller command\n                }\n                return commandPickB.tfIdfScore - commandPickA.tfIdfScore; // prefer higher tf-idf score\n            }\n            else if (commandPickA.tfIdfScore) {\n                return 1; // first command has a score but other doesn't so other wins\n            }\n            else if (commandPickB.tfIdfScore) {\n                return -1; // other command has a score but first doesn't so first wins\n            }\n            const commandACounter = this.commandsHistory.peek(commandPickA.commandId);\n            const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\n            if (commandACounter && commandBCounter) {\n                return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\n            }\n            if (commandACounter) {\n                return -1; // first command was used, so it wins over the non used one\n            }\n            if (commandBCounter) {\n                return 1; // other command was used so it wins over the command\n            }\n            if (this.options.suggestedCommandIds) {\n                const commandASuggestion = this.options.suggestedCommandIds.has(commandPickA.commandId);\n                const commandBSuggestion = this.options.suggestedCommandIds.has(commandPickB.commandId);\n                if (commandASuggestion && commandBSuggestion) {\n                    return 0; // honor the order of the array\n                }\n                if (commandASuggestion) {\n                    return -1; // first command was suggested, so it wins over the non suggested one\n                }\n                if (commandBSuggestion) {\n                    return 1; // other command was suggested so it wins over the command\n                }\n            }\n            // both commands were never used, so we sort by name\n            return commandPickA.label.localeCompare(commandPickB.label);\n        });\n        const commandPicks = [];\n        let addOtherSeparator = false;\n        let addSuggestedSeparator = true;\n        let addCommonlyUsedSeparator = !!this.options.suggestedCommandIds;\n        for (let i = 0; i < filteredCommandPicks.length; i++) {\n            const commandPick = filteredCommandPicks[i];\n            // Separator: recently used\n            if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\n                commandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\n                addOtherSeparator = true;\n            }\n            if (addSuggestedSeparator && commandPick.tfIdfScore !== undefined) {\n                commandPicks.push({ type: 'separator', label: localize('suggested', \"similar commands\") });\n                addSuggestedSeparator = false;\n            }\n            // Separator: commonly used\n            if (addCommonlyUsedSeparator && commandPick.tfIdfScore === undefined && !this.commandsHistory.peek(commandPick.commandId) && this.options.suggestedCommandIds?.has(commandPick.commandId)) {\n                commandPicks.push({ type: 'separator', label: localize('commonlyUsed', \"commonly used\") });\n                addOtherSeparator = true;\n                addCommonlyUsedSeparator = false;\n            }\n            // Separator: other commands\n            if (addOtherSeparator && commandPick.tfIdfScore === undefined && !this.commandsHistory.peek(commandPick.commandId) && !this.options.suggestedCommandIds?.has(commandPick.commandId)) {\n                commandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\n                addOtherSeparator = false;\n            }\n            // Command\n            commandPicks.push(this.toCommandPick(commandPick, runOptions));\n        }\n        if (!this.hasAdditionalCommandPicks(filter, token)) {\n            return commandPicks;\n        }\n        return {\n            picks: commandPicks,\n            additionalPicks: (async () => {\n                const additionalCommandPicks = await this.getAdditionalCommandPicks(allCommandPicks, filteredCommandPicks, filter, token);\n                if (token.isCancellationRequested) {\n                    return [];\n                }\n                const commandPicks = additionalCommandPicks.map(commandPick => this.toCommandPick(commandPick, runOptions));\n                // Basically, if we haven't already added a separator, we add one before the additional picks so long\n                // as one hasn't been added to the start of the array.\n                if (addSuggestedSeparator && commandPicks[0]?.type !== 'separator') {\n                    commandPicks.unshift({ type: 'separator', label: localize('suggested', \"similar commands\") });\n                }\n                return commandPicks;\n            })()\n        };\n    }\n    toCommandPick(commandPick, runOptions) {\n        if (commandPick.type === 'separator') {\n            return commandPick;\n        }\n        const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\n        const ariaLabel = keybinding ?\n            localize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\n            commandPick.label;\n        return {\n            ...commandPick,\n            ariaLabel,\n            detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined,\n            keybinding,\n            accept: async () => {\n                // Add to history\n                this.commandsHistory.push(commandPick.commandId);\n                // Telementry\n                this.telemetryService.publicLog2('workbenchActionExecuted', {\n                    id: commandPick.commandId,\n                    from: runOptions?.from ?? 'quick open'\n                });\n                // Run\n                try {\n                    commandPick.args?.length\n                        ? await this.commandService.executeCommand(commandPick.commandId, ...commandPick.args)\n                        : await this.commandService.executeCommand(commandPick.commandId);\n                }\n                catch (error) {\n                    if (!isCancellationError(error)) {\n                        this.dialogService.error(localize('canNotRun', \"Command '{0}' resulted in an error\", commandPick.label), toErrorMessage(error));\n                    }\n                }\n            }\n        };\n    }\n    // TF-IDF string to be indexed\n    getTfIdfChunk({ label, commandAlias, commandDescription }) {\n        let chunk = label;\n        if (commandAlias && commandAlias !== label) {\n            chunk += ` - ${commandAlias}`;\n        }\n        if (commandDescription && commandDescription.value !== label) {\n            // If the original is the same as the value, don't add it\n            chunk += ` - ${commandDescription.value === commandDescription.original ? commandDescription.value : `${commandDescription.value} (${commandDescription.original})`}`;\n        }\n        return chunk;\n    }\n};\nAbstractCommandsQuickAccessProvider = AbstractCommandsQuickAccessProvider_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService),\n    __param(3, ICommandService),\n    __param(4, ITelemetryService),\n    __param(5, IDialogService)\n], AbstractCommandsQuickAccessProvider);\nexport { AbstractCommandsQuickAccessProvider };\nlet CommandsHistory = class CommandsHistory extends Disposable {\n    static { CommandsHistory_1 = this; }\n    static { this.DEFAULT_COMMANDS_HISTORY_LENGTH = 50; }\n    static { this.PREF_KEY_CACHE = 'commandPalette.mru.cache'; }\n    static { this.PREF_KEY_COUNTER = 'commandPalette.mru.counter'; }\n    static { this.counter = 1; }\n    static { this.hasChanges = false; }\n    constructor(storageService, configurationService, logService) {\n        super();\n        this.storageService = storageService;\n        this.configurationService = configurationService;\n        this.logService = logService;\n        this.configuredCommandsHistoryLength = 0;\n        this.updateConfiguration();\n        this.load();\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => this.updateConfiguration(e)));\n        this._register(this.storageService.onWillSaveState(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                // Commands history is very dynamic and so we limit impact\n                // on storage to only save on shutdown. This helps reduce\n                // the overhead of syncing this data across machines.\n                this.saveState();\n            }\n        }));\n    }\n    updateConfiguration(e) {\n        if (e && !e.affectsConfiguration('workbench.commandPalette.history')) {\n            return;\n        }\n        this.configuredCommandsHistoryLength = CommandsHistory_1.getConfiguredCommandHistoryLength(this.configurationService);\n        if (CommandsHistory_1.cache && CommandsHistory_1.cache.limit !== this.configuredCommandsHistoryLength) {\n            CommandsHistory_1.cache.limit = this.configuredCommandsHistoryLength;\n            CommandsHistory_1.hasChanges = true;\n        }\n    }\n    load() {\n        const raw = this.storageService.get(CommandsHistory_1.PREF_KEY_CACHE, 0 /* StorageScope.PROFILE */);\n        let serializedCache;\n        if (raw) {\n            try {\n                serializedCache = JSON.parse(raw);\n            }\n            catch (error) {\n                this.logService.error(`[CommandsHistory] invalid data: ${error}`);\n            }\n        }\n        const cache = CommandsHistory_1.cache = new LRUCache(this.configuredCommandsHistoryLength, 1);\n        if (serializedCache) {\n            let entries;\n            if (serializedCache.usesLRU) {\n                entries = serializedCache.entries;\n            }\n            else {\n                entries = serializedCache.entries.sort((a, b) => a.value - b.value);\n            }\n            entries.forEach(entry => cache.set(entry.key, entry.value));\n        }\n        CommandsHistory_1.counter = this.storageService.getNumber(CommandsHistory_1.PREF_KEY_COUNTER, 0 /* StorageScope.PROFILE */, CommandsHistory_1.counter);\n    }\n    push(commandId) {\n        if (!CommandsHistory_1.cache) {\n            return;\n        }\n        CommandsHistory_1.cache.set(commandId, CommandsHistory_1.counter++); // set counter to command\n        CommandsHistory_1.hasChanges = true;\n    }\n    peek(commandId) {\n        return CommandsHistory_1.cache?.peek(commandId);\n    }\n    saveState() {\n        if (!CommandsHistory_1.cache) {\n            return;\n        }\n        if (!CommandsHistory_1.hasChanges) {\n            return;\n        }\n        const serializedCache = { usesLRU: true, entries: [] };\n        CommandsHistory_1.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\n        this.storageService.store(CommandsHistory_1.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        this.storageService.store(CommandsHistory_1.PREF_KEY_COUNTER, CommandsHistory_1.counter, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        CommandsHistory_1.hasChanges = false;\n    }\n    static getConfiguredCommandHistoryLength(configurationService) {\n        const config = configurationService.getValue();\n        const configuredCommandHistoryLength = config.workbench?.commandPalette?.history;\n        if (typeof configuredCommandHistoryLength === 'number') {\n            return configuredCommandHistoryLength;\n        }\n        return CommandsHistory_1.DEFAULT_COMMANDS_HISTORY_LENGTH;\n    }\n};\nCommandsHistory = CommandsHistory_1 = __decorate([\n    __param(0, IStorageService),\n    __param(1, IConfigurationService),\n    __param(2, ILogService)\n], CommandsHistory);\nexport { CommandsHistory };\n"],"names":["Emitter","validateConstraints","LinkedList","toDisposable","Iterable","localize","illegalState","isMacintosh","isLinux","isWindows","isWeb","isEdge","isFirefox","isChrome","isSafari","isFalsyOrWhitespace","ok","isString","isObject","OS","DisposableStore","decodeKeybinding","combinedDisposable","MicrotaskEmitter","ThemeIcon","SubmenuAction","dispose","Disposable","isUndefined","isUndefinedOrNull","distinct","Severity$1","onUnexpectedError","isDisposable","Schemas","RunOnceScheduler","Color","assertNever","RGBA","ResourceMap","URI","deepClone","equals","equals$1","deepFreeze","Event","IntervalTimer","TimeoutTimer","IME","ResolvedKeybinding","illegalArgument","UILabelProvider","AriaLabelProvider","ElectronAcceleratorLabelProvider","UserSettingsLabelProvider","ResolvedChord","KeyCodeUtils","IMMUTABLE_CODE_TO_KEY_CODE","KeyCodeChord","basename","PauseableEmitter","Storage","InMemoryStorageDatabase","StorageHint","MutableDisposable","assertType","ActionRunner","Separator","isCancellationError","coalesce","DeferredPromise","CancellationTokenSource","parseLinkedText","IdGenerator","Codicon","isIOS","EventBufferer","isMobile","memoize","observableValue","observableValueOpts","ThrottledDelayer","matchesFuzzyIconAware","parseLabelWithIcons","transaction","compareAnything","ltrim","Lazy","getCodiconAriaLabel","CancellationToken","getCodiconFontCharacters","removeFastWithoutKeepingOrder","DebounceEmitter","toAction","hash","TernarySearchTree","cloneAndChange","GlobalIdleValue","isFalsyOrEmpty","isNonEmptyArray","intersection","coalesceInPlace","BugIndicatingError","autorunOpts","observableFromEventOpts","localize2","isHotReloadEnabled","autorunWithStore","readHotReloadableExport","isFunction","timeout","or","matchesContiguousSubString","matchesWords","matchesPrefix","createSingleCallFunction","toErrorMessage","LRUCache","TfIdfCalculator","normalizeTfIdfScores","ContextView","ActionViewItem","DropdownMenuActionViewItem","BaseActionViewItem","SelectActionViewItem","Menu","renderLabelWithIcons","Toggle","FindInput","List","PagedList","Table","ObjectTree","CompressibleObjectTree","DataTree","AsyncDataTree","CompressibleAsyncDataTree","TreeFindMode","TreeFindMatchType","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","TypeNavigationMode","DefaultStyleController","IconLabel","KeybindingLabel","ActionBar","RenderIndentGuides","CountBadge","Button","ProgressBar","ToolBar","ToggleMenuAction","ReplaceInput","getDefaultHoverDelegate","isHTMLElement","addStandardDisposableListener","getWindow","ModifierKeyEmitter","addDisposableListener","asCSSUrl","prepend","$$3","append","EventType","getActiveElement","isAncestor","reset","createCSSRule","isEventLike","EventHelper","isMouseEvent","isKeyboardEvent","createStyleSheet","isActiveElement","isHTMLAnchorElement","onDidRegisterWindow","onWillUnregisterWindow","trackFocus","isAncestorOfActiveElement","asCSSPropertyValue","getActiveWindow","getActiveDocument","setVisibility","StandardMouseEvent","DomEmitter","mainWindow","isSafari$1","isWebkitWebView","StandardKeyboardEvent","Gesture","EventType$1","_util","getServiceDependencies","ctor","IInstantiationService","createDecorator","storeServiceDependency","id","target","index","serviceId","key","ICommandService","CommandsRegistry","idOrCommand","handler","constraints","arg","actualHandler","accessor","args","commands","removeFn","ret","command","oldId","newId","list","result","hintDidYouMean","meant","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","_Scanner","token","value","isTripleEq","expected","type","additional","offset","lexeme","errToken","match","keyword","p","inEscape","inCharacterClass","ch","Scanner","CONSTANT_VALUES","hasOwnProperty","defaultConfig","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","_Parser","_config","input","expr","peek","additionalInfo","e","right","ContextKeyExpr","ContextKeyFalseExpr","ContextKeyTrueExpr","ContextKeyNotExpr","regexLexeme","closingSlashIndex","flags","regexp","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","i","serializedValue","regex","start","end","caseIgnoreFlag","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","message","got","Parser","_ContextKeyExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","expressionsAreEqualWithConstantSubstitution","a","b","aExpr","bExpr","cmp","_ContextKeyFalseExpr","other","context","_ContextKeyTrueExpr","negated","constantValue","cmp1","cmp2","trueValue","valueKey","source","item","falseValue","withFloatOrStr","callback","n","_value","thisSource","otherSource","ContextKeyNotRegexExpr","actual","_actual","eliminateConstantsInArray","arr","newArr","len","newExpr","j","_expr","extraRedundantCheck","r","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","all","left","getTerminals","_RawContextKey","defaultValue","metaOrHide","RawContextKey","IContextKeyService","key1","key2","value1","value2","implies","q","allElementsIncluded","element","pIndex","qIndex","node","RegistryImpl","data","Assert.ok","Types.isString","Types.isObject","Registry","KeybindingsRegistryImpl","kb","rule","actualKb","kk","k","desc","keybinding","commandId","commandArgs","weight1","weight2","when","remove","sorter","KeybindingsRegistry","Extensions","__decorate","decorators","c","d","__param","paramIndex","decorator","MenuItemAction_1","isIMenuItem","isISubmenuItem","_MenuId","identifier","MenuId","IMenuService","_MenuRegistryChangeEvent","events","ids","candidate","MenuRegistryChangeEvent","MenuRegistry","map","rm","items","set","SubmenuItemAction","hideActions","actions","MenuItemAction","action","options","alt","menuKeybinding","contextKeyService","_commandService","_a","icon","toggled","_b","runArgs","Action2","registerAction2","disposables","f1","menu","ITelemetryService","ILogService","LogLevel","DEFAULT_LOG_LEVEL","AbstractLogger","level","ConsoleLogger","logLevel","useColors","MultiplexLogger","loggers","logger","LogLevelToString","IConfigurationService","toValuesTree","properties","conflictReporter","root","addToValueTree","settingsTreeRoot","segments","last","curr","s","obj","removeFromValueTree","valueTree","doRemoveFromValueTree","first","getConfigurationValue","config","settingPath","accessSetting","path","current","component","getLanguageTagSettingPlainKey","settingKey","SyncDescriptor","staticArguments","supportsDelayedInstantiation","_registry","registerSingleton","ctorOrDescriptor","getSingletonServiceDescriptors","normalizeId","JSONContributionRegistry","uri","unresolvedSchemaContent","jsonContributionRegistry","platform.Registry","resourceLanguageSettingsSchemaId","contributionRegistry","JSONExtensions","ConfigurationRegistry","nls.localize","configuration","validate","configurations","configurationDefaults","bucket","overrideIdentifiers","overrides","configurationDefaultOverridesForKey","OVERRIDE_PROPERTY_REGEX","newDefaultOverride","overrideIdentifiersFromKey","property","overrideIdentifier","configurationValueObject","valueSource","existingDefaultOverride","propertyKey","propertyDefaultValue","types.isObject","types.isUndefined","objectKey","valuesSource","existingDefaultValue","extensionInfo","restrictedProperties","scope","types.isUndefinedOrNull","validateProperty","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","configurationdefaultOverride","defaultSource","getDefaultValue","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","OVERRIDE_PROPERTY_PATTERN","identifiers","matches","configurationRegistry","schema","_c","_d","ColorScheme","isHighContrast","scheme","isDark","IThemeService","themeColorFromId","getThemeTypeSelector","ThemingRegistry","participant","idx","themingRegistry","registerThemingParticipant","Themable","themeService","theme","ILayoutService","IDialogService","Severity","BaseSeverity","INotificationService","NoOpNotification","IUndoRedoService","ResourceEditStackSnapshot","resource","elements","_UndoRedoGroup","UndoRedoGroup","_UndoRedoSource","UndoRedoSource","getResourceLabel","stackElementCounter","ResourceStackElement","resourceLabel","strResource","groupId","groupOrder","sourceId","sourceOrder","isValid","ResourceReasonPair","reason","RemovedResources","externalRemoval","noParallelUniverses","messages","WorkspaceStackElement","resourceLabels","strResources","ResourceEditStack","filter","futureElement","snapshot","snapshotLength","isOK","snapshotIndex","removePastAfter","removeFutureBefore","past","future","toRemove","individualMap","EditStackSnapshot","editStacks","missingEditStack","UndoRedoService","_dialogService","_notificationService","uriComparisonKeyComputer","label","str","group","seen","editStack","closestPastElement","ignoreResources","individualArr","_element","matchedElement","matchedStrResource","resourceOrSource","err","editStackSnapshot","invoke","cleanup","continuation","releaseLocks","disposable","affectedEditStacks","WorkspaceVerificationError","checkInvalidatedResources","cannotUndoDueToResources","cannotLockDueToResources","undoConfirmed","verificationError","pastElement","secondPastElement","UndoChoice","verificationError1","verificationError2","cannotRedoDueToResources","returnValue","IEnvironmentService","asCssVariableName","colorIdent","asCssVariable","color","asCssVariableWithDefault","defaultCssValue","isColorDefaults","DEFAULT_COLOR_CONFIG_VALUE","ColorRegistry","defaults","description","needsTransparency","deprecationMessage","colorContribution","propertySchema","colorDesc","colorValue","resolveColorValue","cat1","cat2","colorRegistry","registerColor","executeTransform","transform","backgroundColor","from","darken","factor","lighten","transparent","oneOf","colorValues","ifDefinedThenElse","ifArg","thenArg","elseArg","lessProminent","backgroundColorValue","transparency","workbenchColorsSchemaId","schemaRegistry","delayer","foreground","iconForeground","focusBorder","contrastBorder","activeContrastBorder","textLinkForeground","badgeBackground","badgeForeground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","progressBarBackground","editorBackground","editorForeground","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorErrorForeground","editorErrorBorder","editorWarningBackground","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorActiveLinkForeground","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","editorFindMatchForeground","editorFindMatchHighlight","editorFindMatchHighlightForeground","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverBackground","editorHoverBorder","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","editorLightBulbForeground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffOverviewRulerInserted","diffOverviewRulerRemoved","widgetShadow","widgetBorder","toolbarHoverBackground","breadcrumbsForeground","breadcrumbsBackground","breadcrumbsFocusForeground","breadcrumbsActiveSelectionForeground","headerTransparency","currentBaseColor","incomingBaseColor","commonBaseColor","contentTransparency","rulerTransparency","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapInfo","minimapWarning","minimapError","minimapBackground","minimapForegroundOpacity","inputBackground","inputForeground","inputBorder","inputActiveOptionBorder","inputActiveOptionHoverBackground","inputActiveOptionBackground","inputActiveOptionForeground","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","selectBackground","selectListBackground","selectForeground","selectBorder","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonBorder","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","radioActiveForeground","radioActiveBackground","radioActiveBorder","radioInactiveForeground","radioInactiveBackground","radioInactiveBorder","radioInactiveHoverBackground","checkboxBackground","checkboxForeground","checkboxBorder","keybindingLabelBackground","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","listFocusBackground","listFocusForeground","listFocusOutline","listFocusAndSelectionOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveSelectionIconForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropOverBackground","listDropBetweenBackground","listHighlightForeground","listFocusHighlightForeground","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","quickInputBackground","quickInputForeground","quickInputTitleBackground","pickerGroupForeground","pickerGroupBorder","_deprecatedQuickInputListFocusBackground","quickInputListFocusForeground","quickInputListFocusIconForeground","quickInputListFocusBackground","IHoverService","WorkbenchHoverDelegate","placement","instantHover","overrideOptions","configurationService","hoverService","focus","targets","IContextViewService","IContextMenuService","IKeybindingService","IOpenerService","extractSelection","selection","IAccessibilityService","CONTEXT_ACCESSIBILITY_MODE_ENABLED","ContextViewHandler","layoutService","delegate","container","shadowRoot","domPosition","openContextView","ContextViewService","freeze","objects.deepFreeze","ConfigurationModel","logService","_contents","_keys","_overrides","raw","rawConfigurationModels","parser","ConfigurationModelParser","previous","section","that","contents","keys","overrideContents","overrideConfigurationModel","others","objects.deepClone","raws","otherOverride","override","o","arrays.equals","arrays.distinct","contentsForKey","overrideContentsForKey","contentsForIdentifierOnly","mergeContents","contentsToMerge","add","_name","restricted","hasExcludedProperties","configurationProperties","filtered","filterOverriddenProperties","overrideRaw","keyInOverrideRaw","ConfigurationInspectValue","defaultConfiguration","policyConfiguration","applicationConfiguration","userConfiguration","localUserConfiguration","remoteUserConfiguration","workspaceConfiguration","folderConfigurationModel","memoryConfigurationModel","inspectValue","Configuration","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","workspace","memoryConfiguration","consolidateConfigurationModel","configurationModel","consolidateConfiguration","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","folders","model","ConfigurationChangeEvent","change","currentConfiguraiton","currentWorkspace","needle","pos","code","objects.equals","NoMatchingKb","MoreChordsNeeded","KbFound","isBubble","KeybindingResolver","defaultKeybindings","log","defaultKeybinding","defaultKb","keypress","rules","removals","commandRemovals","isRemoved","commandRemoval","conflicts","conflict","isShorterKbPrefix","currentChords","pressedChords","kbCandidates","lookupMap","prefixMatches","printWhenExplanation","printSourceExplanation","HIGH_FREQ_COMMANDS","AbstractKeybindingService","_contextKeyService","_telemetryService","_logService","KeybindingModifierSet","firstChord","contextValue","chordLastInteractedTime","keypressLabel","fullKeypressLabel","singleModifier","userKeypress","isSingleModiferChord","shouldPreventDefault","userPressedChord","dispatchKeyname","resolveResult","currentChordsLabel","event","_KeybindingModifierSet","modifier","ResolvedKeybindingItem","resolvedKeybinding","isDefault","extensionId","isBuiltinExtension","toEmptyArrayIfContainsNull","BaseResolvedKeybinding","os","chords","USLayoutResolvedKeybinding","keyCode","chord","scanCode","immutableKeyCode","ILabelService","IProgressService","_Progress","Progress","IEditorProgressService","IWorkspaceContextService","isSingleFolderWorkspaceIdentifier","singleFolderIdentifier","isEmptyWorkspaceIdentifier","emptyWorkspaceIdentifier","isWorkspaceIdentifier","UNKNOWN_EMPTY_WINDOW_WORKSPACE","toWorkspaceIdentifier","arg0","isExtensionDevelopment","workspaceIdentifier","WorkspaceFolder","WORKSPACE_EXTENSION","STANDALONE_EDITOR_WORKSPACE_ID","isStandaloneEditorWorkspace","IWorkspaceTrustManagementService","isLocalizedString","thing","isICommandActionToggleInfo","TARGET_KEY","IStorageService","WillSaveStateReason","loadKeyTargets","storage","keysRaw","_AbstractStorageService","external","fallbackValue","fn","keyTargets","AbstractStorageService","InMemoryStorageService","overrideStyles","styles","val","defaultKeybindingLabelStyles","defaultButtonStyles","defaultProgressBarStyles","defaultToggleStyles","defaultInputBoxStyles","defaultFindWidgetStyles","defaultCountBadgeStyles","defaultListStyles","getListStyles","defaultSelectBoxStyles","defaultMenuStyles","createAndFillInContextMenuActions","optionsOrTarget","targetOrPrimaryGroup","primaryGroupOrUndefined","primaryGroup","groups","modifierKeyEmitter","useAlternativeActions","fillInActions","actionGroup","createAndFillInActionBarActions","primaryGroupOrShouldInlineSubmenu","shouldInlineSubmenuOrUseSeparatorsInPrimaryActions","useSeparatorsInPrimaryActionsOrUndefined","shouldInlineSubmenu","useSeparatorsInPrimaryActions","isPrimaryAction","primaryBucket","secondaryBucket","submenuInfo","newLen","submenuActions","MenuEntryActionViewItem","_options","_keybindingService","_themeService","_contextMenuService","_accessibilityService","isMouseOver","updateAltState","wantsAltCommand","_","keybindingLabel","tooltip","title","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","iconClasses","TextOnlyMenuEntryActionViewItem","kb2","SubmenuEntryActionViewItem","dropdownOptions","setBackgroundImage","DropdownWithDefaultActionViewItem","submenuAction","_menuService","_instaService","_storageService","defaultAction","defaultActionId","lastAction","$","defaultActionKeybinding","newContext","primaryContainer","dropdownContainer","fromRight","focusable","SubmenuEntrySelectActionViewItem","contextViewService","option","createActionViewItem","instaService","ContextMenuHandler","telemetryService","notificationService","keybindingService","shadowRootElement","className","menuDisposables","actionRunner","evt","targetWindow","didCancel","logTelemetry","ContextMenuService","menuService","ContextMenuMenuDelegate","is","globalContextKeyService","menuId","menuActionOptions","EditorOpenSource","MarkerSeverity","compare","_displayStrings","toString","fromSeverity","severity","toSeverity","IMarkerData","emptyString","makeKey","markerData","makeKeyOptionalMessage","useMessage","IMarkerService","DefaultQuickAccessFilterValue","QuickAccessRegistry","provider","providerA","providerB","prefix","NO_KEY_MODS","QuickInputHideReason","ItemActivation","QuickPickFocus","QuickInputButtonLocation","IQuickInputService","QuickAccessController","quickInputService","instantiationService","pick","descriptor","visibleQuickAccess","visibleDescriptor","newValue","newValueCandidateWithoutPrefix","defaultFilterValue","visibleSelection","visibleValue","picker","pickPromise","cts","valueSelection","providerForValue","enabledProviderPrefixes","providerDescriptor","iconPathToClass","iconClassGenerator","getIconClass","iconPath","iconClass","dom.createCSSRule","dom.asCSSUrl","quickInputButtonToAction","button","run","cssClasses","renderQuickInputDescription","actionHandler","dom.reset","parsed","tabIndex","anchor","dom.$","handleOpen","dom.isEventLike","dom.EventHelper","onClick","dom.EventType","onKeydown","onSpaceOrEnter","onTap","GestureEventType","inQuickInputContextKeyValue","InQuickInputContextKey","inQuickInputContext","quickInputTypeContextKeyValue","QuickInputTypeContextKey","endOfQuickInputBoxContextKeyValue","EndOfQuickInputBoxContextKey","endOfQuickInputBoxContext","backButton","_QuickInput","ui","step","totalSteps","enabled","contextKey","busy","ignoreFocusOut","shouldUpdate","buttons","toggles","validationMessage","leftButtons","rightButtons","inlineButtons","concreteToggles","opts","content","QuickInput","_QuickPick","quickNavigate","skipUpdate","ariaLabel","placeholder","scrollTop","canSelectMany","canAcceptInBackground","matchOnDescription","matchOnDetail","matchOnLabel","matchOnLabelMode","sortByLabel","keepScrollPosition","itemActivation","activeItems","selectedItems","showCustomButton","hover","showOkButton","hideInput","focusedItems","dom.isMouseEvent","checkedItems","inBackground","veto","dom.addDisposableListener","keyboardEvent","scrollTopBefore","hasDescription","visibilities","QuickPick","InputBox","password","QuickInputHoverDelegate","showHoverHint","dom.isHTMLElement","QuickInputBox","parent","inputBoxStyles","toggleStyles","dom.addStandardDisposableListener","dom.append","range","name","decoration","IsWindowsContext","IsWebContext","InputFocusedContextKey","InputFocusedContext","IListService","ListService","widget","extraContextKeys","l","registeredList","RawWorkbenchListScrollAtBoundaryContextKey","RawWorkbenchListFocusContextKey","WorkbenchTreeStickyScrollFocused","WorkbenchListSupportsMultiSelectContextKey","WorkbenchListFocusContextKey","WorkbenchListHasSelectionOrFocus","WorkbenchListDoubleSelection","WorkbenchListMultiSelection","WorkbenchListSelectionNavigation","WorkbenchListSupportsFind","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementHasParent","WorkbenchTreeElementCanExpand","WorkbenchTreeElementHasChild","WorkbenchTreeFindOpen","WorkbenchListTypeNavigationModeKey","WorkbenchListAutomaticKeyboardNavigationLegacyKey","createScopedContextKeyService","createScrollObserver","listScrollAt","update","atTop","atBottom","multiSelectModifierSettingKey","openModeSettingKey","horizontalScrollingKey","defaultFindModeSettingKey","typeNavigationModeSettingKey","keyboardNavigationSettingKey","scrollByPageKey","defaultFindMatchTypeSettingKey","treeIndentKey","treeRenderIndentGuidesKey","listSmoothScrolling","mouseWheelScrollSensitivityKey","fastScrollSensitivityKey","treeExpandMode","treeStickyScroll","treeStickyScrollMaxElements","useAltAsMultipleSelectionModifier","MultipleSelectionController","toWorkbenchListOptions","createKeyboardNavigationEventFilter","WorkbenchList","user","renderers","listService","horizontalScrolling","workbenchListOptions","workbenchListOptionsDisposable","scrollByPage","smoothScrolling","mouseWheelScrollSensitivity","fastScrollSensitivity","ListResourceNavigator","WorkbenchPagedList","WorkbenchTable","columns","TableResourceNavigator","ResourceNavigator","selectionKeyboardEvent","preserveFocus","pinned","browserEvent","isMiddleClick","sideBySide","TreeResourceNavigator","inMultiChord","WorkbenchObjectTree","treeOptions","getTypeNavigationMode","workbenchTreeDataPreamble","WorkbenchTreeInternals","WorkbenchCompressibleObjectTree","WorkbenchDataTree","dataSource","WorkbenchAsyncDataTree","WorkbenchCompressibleAsyncDataTree","virtualDelegate","compressionDelegate","getDefaultTreeFindMode","deprecatedValue","getDefaultTreeFindMatchType","modeString","configString","paddingBottom","renderIndentGuides","tree","updateCollapseContextKeys","interestingContextKeys","focused","newOptions","indent","defaultFindMode","typeNavigationMode","defaultFindMatchType","enableStickyScroll","stickyScrollMaxItemCount","ConfigurationExtensions","QuickPickItemElementRenderer_1","BaseQuickPickItemElement","hasCheckbox","mainItem","saneLabel","saneSortLabel","saneAriaLabel","QuickPickItemElement","fireButtonTriggered","_onChecked","_separator","QuickPickSeparatorFocusReason","QuickPickSeparatorElement","fireSeparatorButtonTriggered","separator","QuickInputItemDelegate","QuickPickItemElementRenderer","QuickPickSeparatorElementRenderer","QuickInputAccessibilityProvider","BaseQuickInputListRenderer","hoverDelegate","rows","row1","row2","dom.prepend","keybindingContainer","detailContainer","_index","checked","labelHighlights","descriptionHighlights","detailHighlights","iconUrl","descriptionTitle","frequency","_QuickPickSeparatorElementRenderer","QuickInputTree","linkOpenerDelegate","accessibilityService","otherElement","normalizedSearchValue","compareEntries","visibleCount","dom.isHTMLAnchorElement","dom.isAncestor","elementsWithoutSeparators","inputElements","currentSeparatorElement","qpi","focusedElement","nextSibling","what","isSecondItem","prevFocus","currentFocus","foundSeparatorAsItem","before","after","focusElement","foundSeparator","maxHeight","query","queryWithWhitespace","currentSeparator","matchesContiguousIconAware","allChecked","store","treeElements","whenNoneVisible","tx","checkedCount","url","text","iconOffsets","matchesContiguous","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","iconOffset","word","wordToMatchAgainst","matchIndex","elementA","elementB","lookFor","labelHighlightsA","labelHighlightsB","defaultCommandAndKeybindingRule","registerQuickPickCommandAndKeybindingRule","getSecondary","ctrlKeyMod","primary","secondary","focusHandler","focusOnQuickNatigate","currentQuickPick","nextSeparatorFallbackDesc","prevSeparatorFallbackDesc","QuickInputController_1","QuickInputController","dom.onDidRegisterWindow","window","dom.onWillUnregisterWindow","dom.getWindow","listener","showInActiveContainer","styleSheet","dom.createStyleSheet","titleBar","leftActionBar","rightActionBar","headerContainer","checkAll","inputBox","description2","inputContainer","filterContainer","visibleCountContainer","countContainer","count","inlineActionBar","okContainer","customButtonContainer","customButton","progressBar","description1","listId","focusTracker","dom.trackFocus","selectors","stops","controller","picks","doResolve","reject","resolve","activeItem","removed","keepScrollPositionBefore","_activeItem","oldController","backKeybindingLabel","focusChanged","dom.isAncestorOfActiveElement","currentElement","dimension","titleBarOffset","style","width","newStyles","QuickInputService","host","defaultOptions","IconContribution","getDefinition","contribution","registry","definition","iconRegistry","IconFontDefinition","toJSONObject","iconFont","fromJSONObject","json","stringOrUndef","IconRegistry","existing","enumIndex","iconContribution","i1","i2","classNames","reference","contributions","registerIcon","getIconRegistry","initialize","codiconFontCharacters","fontCharacter","iconsSchemaId","widgetClose","getIconsStyleSheet","onDidChangeEmmiter","productIconTheme","UnthemedProductIconTheme","usedFontIds","rootAttribs","fontContribution","fontFamilyVar","contentVar","fontWeight","fontStyle","src","AccessibilityService","_layoutService","_configurationService","updateContextKey","reduceMotionMatcher","updateRootClasses","reduce","linkUnderlinesEnabled","updateLinkUnderlineClasses","underlineLinks","PersistedMenuHideState_1","MenuInfo_1","MenuService","storageService","PersistedMenuHideState","MenuImpl","hidden","hiddenByDefault","state","entries","menus","MenuInfoSnapshot","_id","_collectContextKeysForSubmenus","menuItems","groupName","toggledExpression","exp","MenuInfo","_hiddenStates","activeActions","isMenuItem","menuHide","createMenuHide","createConfigureKeybindingAction","g","aGroup","bGroup","aPrio","bPrio","aStr","bStr","hiddenStates","commandService","rebuildMenuSoon","lazyListener","merge","isStructuralChange","isEnablementChange","isToggleChange","startLazyListener","states","hide","toggle","whenValue","BrowserClipboardService_1","vscodeResourcesMime","BrowserClipboardService","currentWritePromise","error","activeDocument","activeElement","textArea","blob","x","resourcesStateHash","clipboardText","IClipboardService","KEYBINDING_CONTEXT_ATTR","Context","_NullContext","NullContext","_ConfigAwareContextValuesContainer","emitter","allKeys","ArrayContextKeyChangeEvent","changedKeys","configKey","cachedItems","configValue","ConfigAwareContextValuesContainer","ContextKey","service","SimpleContextKeyChangeEvent","CompositeContextKeyChangeEvent","allEventKeysInContext","AbstractContextKeyService","myContextId","domNode","ScopedContextKeyService","myContext","findContextAttr","ContextKeyService","contextId","parentContextId","extraInfo","thisContextValues","attr","setContext","stringifyURIs","info","Node","Graph","_hashFn","to","fromNode","toNode","res","outgoing","ServiceCollection","instanceOrDescriptor","_enableAllTracing","CyclicDependencyError","graph","InstantiationService","_services","_strict","_parent","_enableTracing","services","_trace","Trace","_done","rest","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","delta","instance","instanceOrDesc","cycleCount","stack","roots","disposeBucket","child","earlyListeners","idle","values","thisArg","entry","prop","_target","msg","printWarning","_Trace","dur","causedCreation","printChild","trace","nested","lines","unsupportedSchemas","DoubleResourceMap","owner","ownerMap","resourceMap","removedA","removedB","MarkerStats","resources","oldStats","newStats","op","MarkerService","markers","marker","startLineNumber","startColumn","endLineNumber","endColumn","relatedInformation","tags","changes","array","severities","take","iterable","DefaultConfiguration","configurationDefaultsOverrides","defaultOverrideValue","IAccessibilitySignalService","_Sound","fileName","Sound","SoundSource","randomOneOf","_AccessibilitySignal","sound","legacySoundSettingsKey","settingsKey","legacyAnnouncementSettingsKey","announcementMessage","soundSource","signal","AccessibilitySignal","LogService","primaryLogger","otherLoggers","WorkbenchToolBar","telemetrySource","_primary","_secondary","menuIds","toggleActions","toggleActionsCheckedCount","extraSecondary","someAreHidden","exemptedIds","maxItems","_e","primaryActions","supportsKeybindings","noHide","MenuWorkbenchToolBar","contextMenuService","updateToolbar","observableConfigValue","handleChange","bindContextKey","computeValue","boundKey","reader","ExtensionIdentifier","ExtensionIdentifierSet","CodeDataTransfers","DragAndDropContributionRegistry","_LocalSelectionTransfer","proto","LocalSelectionTransfer","acceptSelectedActionCommand","previewSelectedActionCommand","HeaderRenderer","templateData","_templateData","ActionItemRenderer","_supportsPreview","stripNewlines","dom.setVisibility","actionTitle","previewTitle","AcceptSelectedEvent","PreviewSelectedEvent","getKeyboardNavigationLabel","ActionList","preview","_delegate","_contextViewService","minWidth","numHeaders","heightWithHeaders","maxWidth","itemWidths","height","focusIndex","ActionWidgetContextKeys","IActionWidgetService","ActionWidgetService","_instantiationService","supportsPreview","actionBarActions","visibleContext","renderDisposables","menuBlock","block","pointerBlockDiv","pointerBlock","actionBarWidth","actionBar","weight","widgetService","historyNavigationVisible","HistoryNavigationWidgetFocusContext","HistoryNavigationForwardsEnablementContext","HistoryNavigationBackwardsEnablementContext","lastFocusedWidget","widgets","registerAndCreateHistoryNavigationContext","scopedContextKeyService","disposableStore","historyNavigationWidgetFocus","historyNavigationForwardsEnablement","historyNavigationBackwardsEnablement","onDidFocus","onDidBlur","ContextScopedFindInput","contextViewProvider","ContextScopedReplaceInput","showReplaceOptions","showHistoryKeybindingHint","FileKind","AccessibleViewRegistry","implementation","SeverityIcon","BaseClass","params","createWrapper","getClass","B","clazz","wrapInReloadableClass1","BaseClass1","param1","Categories","Link","_link","_hoverService","openerService","onClickEmitter","onKeyPress","onEnterPress","TouchEventType","onOpen","HelpQuickAccessProvider_1","HelpQuickAccessProvider","helpEntry","TriggerAction","isPicksWithActive","isFastAndSlowPicks","PickerQuickAccessProvider","runOptions","picksCts","picksDisposable","updatePickerItems","picksDisposables","picksToken","picksFilter","providedPicks","applyPicks","skipEmpty","applyFastAndSlowPicks","fastAndSlowPicks","fastPicksApplied","slowPicksApplied","awaitedAdditionalPicks","activePick","additionalPicks","additionalActivePick","fallbackActivePick","fallbackActivePickCandidate","awaitedPicks","buttonTrigger","buttonIndex","AbstractCommandsQuickAccessProvider_1","CommandsHistory_1","AbstractCommandsQuickAccessProvider","dialogService","CommandsHistory","_disposables","allCommandPicks","runTfidf","tfidf","commandPick","score","filteredCommandPicks","aliasHighlights","tfidfScore","mapLabelToCommand","existingCommandForLabel","commandPickA","commandPickB","commandACounter","commandBCounter","commandASuggestion","commandBSuggestion","commandPicks","addOtherSeparator","addSuggestedSeparator","addCommonlyUsedSeparator","additionalCommandPicks","commandAlias","commandDescription","chunk","serializedCache","cache","configuredCommandHistoryLength"],"mappings":"AAAA,OAAA,KAAAA,EAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,EAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,EAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,EAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,EAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,EAAA,KAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,EAAA,MAAAC,GAAA,MAAAC,EAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,EAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99]}