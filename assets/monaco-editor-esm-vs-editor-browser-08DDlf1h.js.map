{"version":3,"file":"monaco-editor-esm-vs-editor-browser-08DDlf1h.js","sources":["../../../node_modules/monaco-editor/esm/vs/editor/browser/config/domFontInfo.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/config/fontMeasurements.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/codeEditorService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/markdownRenderer/browser/markdownRenderer.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/hoverService/hoverWidget.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/hoverService/updatableHoverWidget.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/hoverService/hoverService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/services/markerDecorations.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/config/tabFocus.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/config/editorConfiguration.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaInput.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/dynamicViewOverlay.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/coreCommands.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/domReadingContext.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/whitespace.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/view/domLineBreaksComputer.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditor/codeEditorContributions.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditor/codeEditorWidget.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/utils.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/registrations.contribution.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffProviderFactoryService.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditorViewModel.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/utils/editorGutter.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/multiDiffEditor/utils.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/features/gutterFeature.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/observableCodeEditor.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/features/hideUnchangedRegionsFeature.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/features/overviewRulerFeature.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/features/revertButtonsFeature.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/delegatingEditorImpl.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditorOptions.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditorWidget.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/multiDiffEditor/diffEditorItemTemplate.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/multiDiffEditor/objectPool.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidgetImpl.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/multiDiffEditor/colors.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidget.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/editorBrowser.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/commands.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditor.contribution.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/dnd.js","../../../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FastDomNode } from '../../../base/browser/fastDomNode.js';\nexport function applyFontInfo(domNode, fontInfo) {\n    if (domNode instanceof FastDomNode) {\n        domNode.setFontFamily(fontInfo.getMassagedFontFamily());\n        domNode.setFontWeight(fontInfo.fontWeight);\n        domNode.setFontSize(fontInfo.fontSize);\n        domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings);\n        domNode.setFontVariationSettings(fontInfo.fontVariationSettings);\n        domNode.setLineHeight(fontInfo.lineHeight);\n        domNode.setLetterSpacing(fontInfo.letterSpacing);\n    }\n    else {\n        domNode.style.fontFamily = fontInfo.getMassagedFontFamily();\n        domNode.style.fontWeight = fontInfo.fontWeight;\n        domNode.style.fontSize = fontInfo.fontSize + 'px';\n        domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n        domNode.style.fontVariationSettings = fontInfo.fontVariationSettings;\n        domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n        domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { applyFontInfo } from './domFontInfo.js';\nexport class CharWidthRequest {\n    constructor(chr, type) {\n        this.chr = chr;\n        this.type = type;\n        this.width = 0;\n    }\n    fulfill(width) {\n        this.width = width;\n    }\n}\nclass DomCharWidthReader {\n    constructor(bareFontInfo, requests) {\n        this._bareFontInfo = bareFontInfo;\n        this._requests = requests;\n        this._container = null;\n        this._testElements = null;\n    }\n    read(targetWindow) {\n        // Create a test container with all these test elements\n        this._createDomElements();\n        // Add the container to the DOM\n        targetWindow.document.body.appendChild(this._container);\n        // Read character widths\n        this._readFromDomElements();\n        // Remove the container from the DOM\n        this._container?.remove();\n        this._container = null;\n        this._testElements = null;\n    }\n    _createDomElements() {\n        const container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.top = '-50000px';\n        container.style.width = '50000px';\n        const regularDomNode = document.createElement('div');\n        applyFontInfo(regularDomNode, this._bareFontInfo);\n        container.appendChild(regularDomNode);\n        const boldDomNode = document.createElement('div');\n        applyFontInfo(boldDomNode, this._bareFontInfo);\n        boldDomNode.style.fontWeight = 'bold';\n        container.appendChild(boldDomNode);\n        const italicDomNode = document.createElement('div');\n        applyFontInfo(italicDomNode, this._bareFontInfo);\n        italicDomNode.style.fontStyle = 'italic';\n        container.appendChild(italicDomNode);\n        const testElements = [];\n        for (const request of this._requests) {\n            let parent;\n            if (request.type === 0 /* CharWidthRequestType.Regular */) {\n                parent = regularDomNode;\n            }\n            if (request.type === 2 /* CharWidthRequestType.Bold */) {\n                parent = boldDomNode;\n            }\n            if (request.type === 1 /* CharWidthRequestType.Italic */) {\n                parent = italicDomNode;\n            }\n            parent.appendChild(document.createElement('br'));\n            const testElement = document.createElement('span');\n            DomCharWidthReader._render(testElement, request);\n            parent.appendChild(testElement);\n            testElements.push(testElement);\n        }\n        this._container = container;\n        this._testElements = testElements;\n    }\n    static _render(testElement, request) {\n        if (request.chr === ' ') {\n            let htmlString = '\\u00a0';\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                htmlString += htmlString;\n            }\n            testElement.innerText = htmlString;\n        }\n        else {\n            let testString = request.chr;\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                testString += testString;\n            }\n            testElement.textContent = testString;\n        }\n    }\n    _readFromDomElements() {\n        for (let i = 0, len = this._requests.length; i < len; i++) {\n            const request = this._requests[i];\n            const testElement = this._testElements[i];\n            request.fulfill(testElement.offsetWidth / 256);\n        }\n    }\n}\nexport function readCharWidths(targetWindow, bareFontInfo, requests) {\n    const reader = new DomCharWidthReader(bareFontInfo, requests);\n    reader.read(targetWindow);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindowId } from '../../../base/browser/dom.js';\nimport { PixelRatio } from '../../../base/browser/pixelRatio.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\nexport class FontMeasurementsImpl extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._cache = new Map();\n        this._evictUntrustedReadingsTimeout = -1;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    dispose() {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        super.dispose();\n    }\n    /**\n     * Clear all cached font information and trigger a change event.\n     */\n    clearAllFontInfos() {\n        this._cache.clear();\n        this._onDidChange.fire();\n    }\n    _ensureCache(targetWindow) {\n        const windowId = getWindowId(targetWindow);\n        let cache = this._cache.get(windowId);\n        if (!cache) {\n            cache = new FontMeasurementsCache();\n            this._cache.set(windowId, cache);\n        }\n        return cache;\n    }\n    _writeToCache(targetWindow, item, value) {\n        const cache = this._ensureCache(targetWindow);\n        cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = targetWindow.setTimeout(() => {\n                this._evictUntrustedReadingsTimeout = -1;\n                this._evictUntrustedReadings(targetWindow);\n            }, 5000);\n        }\n    }\n    _evictUntrustedReadings(targetWindow) {\n        const cache = this._ensureCache(targetWindow);\n        const values = cache.getValues();\n        let somethingRemoved = false;\n        for (const item of values) {\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    }\n    /**\n     * Read font information.\n     */\n    readFontInfo(targetWindow, bareFontInfo) {\n        const cache = this._ensureCache(targetWindow);\n        if (!cache.has(bareFontInfo)) {\n            let readConfig = this._actualReadFontInfo(targetWindow, bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new FontInfo({\n                    pixelRatio: PixelRatio.getInstance(targetWindow).value,\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    fontFeatureSettings: readConfig.fontFeatureSettings,\n                    fontVariationSettings: readConfig.fontVariationSettings,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    middotWidth: Math.max(readConfig.middotWidth, 5),\n                    wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(targetWindow, bareFontInfo, readConfig);\n        }\n        return cache.get(bareFontInfo);\n    }\n    _createRequest(chr, type, all, monospace) {\n        const result = new CharWidthRequest(chr, type);\n        all.push(result);\n        monospace?.push(result);\n        return result;\n    }\n    _actualReadFontInfo(targetWindow, bareFontInfo) {\n        const all = [];\n        const monospace = [];\n        const typicalHalfwidthCharacter = this._createRequest('n', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const typicalFullwidthCharacter = this._createRequest('\\uff4d', 0 /* CharWidthRequestType.Regular */, all, null);\n        const space = this._createRequest(' ', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit0 = this._createRequest('0', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit1 = this._createRequest('1', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit2 = this._createRequest('2', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit3 = this._createRequest('3', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit4 = this._createRequest('4', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit5 = this._createRequest('5', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit6 = this._createRequest('6', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit7 = this._createRequest('7', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit8 = this._createRequest('8', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit9 = this._createRequest('9', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // monospace test: used for whitespace rendering\n        const rightwardsArrow = this._createRequest('→', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const halfwidthRightwardsArrow = this._createRequest('￫', 0 /* CharWidthRequestType.Regular */, all, null);\n        // U+00B7 - MIDDLE DOT\n        const middot = this._createRequest('·', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        const wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), 0 /* CharWidthRequestType.Regular */, all, null);\n        // monospace test: some characters\n        const monospaceTestChars = '|/-_ilm%';\n        for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n            this._createRequest(monospaceTestChars.charAt(i), 0 /* CharWidthRequestType.Regular */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 1 /* CharWidthRequestType.Italic */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 2 /* CharWidthRequestType.Bold */, all, monospace);\n        }\n        readCharWidths(targetWindow, bareFontInfo, all);\n        const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        let isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n        const referenceWidth = monospace[0].width;\n        for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n            const diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        let canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        return new FontInfo({\n            pixelRatio: PixelRatio.getInstance(targetWindow).value,\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n            fontVariationSettings: bareFontInfo.fontVariationSettings,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            middotWidth: middot.width,\n            wsmiddotWidth: wsmiddotWidth.width,\n            maxDigitWidth: maxDigitWidth\n        }, true);\n    }\n}\nclass FontMeasurementsCache {\n    constructor() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    has(item) {\n        const itemId = item.getId();\n        return !!this._values[itemId];\n    }\n    get(item) {\n        const itemId = item.getId();\n        return this._values[itemId];\n    }\n    put(item, value) {\n        const itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    }\n    remove(item) {\n        const itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    }\n    getValues() {\n        return Object.keys(this._keys).map(id => this._values[id]);\n    }\n}\nexport const FontMeasurements = new FontMeasurementsImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ICodeEditorService = createDecorator('codeEditorService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this.metadata = opts.metadata;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            metadata: this.metadata\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation, when) {\n        this._implementations.push({ priority, name, implementation, when });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            if (impl.when) {\n                const context = contextKeyService.getContext(getActiveElement());\n                const value = impl.when.evaluate(context);\n                if (!value) {\n                    continue;\n                }\n            }\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(precondition ?? undefined)) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            const logService = editorAccessor.get(ILogService);\n            const enabled = kbService.contextMatchesRules(this.desc.precondition ?? undefined);\n            if (!enabled) {\n                logService.debug(`[EditorAction2] NOT running command because its precondition is FALSE`, this.desc.id, this.desc.precondition?.serialize());\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, ...args);\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    static { this.INSTANCE = new EditorContributionRegistry(); }\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { createWebWorker } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { WindowIntervalTimer } from '../../../base/browser/dom.js';\nimport { WorkerTextModelSyncClient } from '../../common/services/textModelSync/textModelSync.impl.js';\nimport { EditorWorkerHost } from '../../common/services/editorWorkerHost.js';\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(workerDescriptor, modelService, configurationService, logService, _languageConfigurationService, languageFeaturesService) {\n        super();\n        this._languageConfigurationService = _languageConfigurationService;\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(workerDescriptor, this._modelService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: async (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                const worker = await this._workerWithResources([model.uri]);\n                const links = await worker.$computeLinks(model.uri.toString());\n                return links && { links };\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, this._languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    async computedUnicodeHighlights(uri, options, range) {\n        const worker = await this._workerWithResources([uri]);\n        return worker.$computeUnicodeHighlights(uri.toString(), options, range);\n    }\n    async computeDiff(original, modified, options, algorithm) {\n        const worker = await this._workerWithResources([original, modified], /* forceLargeModels */ true);\n        const result = await worker.$computeDiff(original.toString(), modified.toString(), options, algorithm);\n        if (!result) {\n            return null;\n        }\n        // Convert from space efficient JSON data to rich objects.\n        const diff = {\n            identical: result.identical,\n            quitEarly: result.quitEarly,\n            changes: toLineRangeMappings(result.changes),\n            moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n        };\n        return diff;\n        function toLineRangeMappings(changes) {\n            return changes.map((c) => new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), c[4]?.map((c) => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7])))));\n        }\n    }\n    async computeMoreMinimalEdits(resource, edits, pretty = false) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create();\n            const result = this._workerWithResources([resource]).then(worker => worker.$computeMoreMinimalEdits(resource.toString(), edits, pretty));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    async navigateValueSet(resource, range, up) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = this._languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        const worker = await this._workerWithResources([resource]);\n        return worker.$navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    async computeWordRanges(resource, range) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        const wordDefRegExp = this._languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        const worker = await this._workerWithResources([resource]);\n        return worker.$computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n    }\n    async findSectionHeaders(uri, options) {\n        const worker = await this._workerWithResources([uri]);\n        return worker.$findSectionHeaders(uri.toString(), options);\n    }\n    async computeDefaultDocumentColors(uri) {\n        const worker = await this._workerWithResources([uri]);\n        return worker.$computeDefaultDocumentColors(uri.toString());\n    }\n    async _workerWithResources(resources, forceLargeModels = false) {\n        const worker = await this._workerManager.withWorker();\n        return await worker.workerWithSyncedResources(resources, forceLargeModels);\n    }\n};\nEditorWorkerService = __decorate([\n    __param(1, IModelService),\n    __param(2, ITextResourceConfigurationService),\n    __param(3, ILogService),\n    __param(4, ILanguageConfigurationService),\n    __param(5, ILanguageFeaturesService)\n], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    async provideCompletionItems(model, position) {\n        const config = this._configurationService.getValue(model.uri, position, 'editor');\n        if (config.wordBasedSuggestions === 'off') {\n            return undefined;\n        }\n        const models = [];\n        if (config.wordBasedSuggestions === 'currentDocument') {\n            // only current file and only if not too large\n            if (canSyncModel(this._modelService, model.uri)) {\n                models.push(model.uri);\n            }\n        }\n        else {\n            // either all files or files of same language\n            for (const candidate of this._modelService.getModels()) {\n                if (!canSyncModel(this._modelService, candidate.uri)) {\n                    continue;\n                }\n                if (candidate === model) {\n                    models.unshift(candidate.uri);\n                }\n                else if (config.wordBasedSuggestions === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                    models.push(candidate.uri);\n                }\n            }\n        }\n        if (models.length === 0) {\n            return undefined; // File too large, no other files\n        }\n        const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const word = model.getWordAtPosition(position);\n        const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n        const insert = replace.setEndPosition(position.lineNumber, position.column);\n        const client = await this._workerManager.withWorker();\n        const data = await client.textualSuggest(models, word?.word, wordDefRegExp);\n        if (!data) {\n            return undefined;\n        }\n        return {\n            duration: data.duration,\n            suggestions: data.words.map((word) => {\n                return {\n                    kind: 18 /* languages.CompletionItemKind.Text */,\n                    label: word,\n                    insertText: word,\n                    range: { insert, replace }\n                };\n            }),\n        };\n    }\n}\nlet WorkerManager = class WorkerManager extends Disposable {\n    constructor(_workerDescriptor, modelService) {\n        super();\n        this._workerDescriptor = _workerDescriptor;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new WindowIntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2), mainWindow);\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._workerDescriptor, false, this._modelService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n};\nWorkerManager = __decorate([\n    __param(1, IModelService)\n], WorkerManager);\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this.proxy = this._instance;\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    setChannel(channel, handler) {\n        throw new Error(`Not supported`);\n    }\n}\nlet EditorWorkerClient = class EditorWorkerClient extends Disposable {\n    constructor(_workerDescriptor, keepIdleModels, modelService) {\n        super();\n        this._workerDescriptor = _workerDescriptor;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(createWebWorker(this._workerDescriptor));\n                EditorWorkerHost.setChannel(this._worker, this._createEditorWorkerHost());\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = this._createFallbackLocalWorker();\n            }\n        }\n        return this._worker;\n    }\n    async _getProxy() {\n        try {\n            const proxy = this._getOrCreateWorker().proxy;\n            await proxy.$ping();\n            return proxy;\n        }\n        catch (err) {\n            logOnceWebWorkerWarning(err);\n            this._worker = this._createFallbackLocalWorker();\n            return this._worker.proxy;\n        }\n    }\n    _createFallbackLocalWorker() {\n        return new SynchronousWorkerClient(new EditorSimpleWorker(this._createEditorWorkerHost(), null));\n    }\n    _createEditorWorkerHost() {\n        return {\n            $fhr: (method, args) => this.fhr(method, args)\n        };\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new WorkerTextModelSyncClient(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    async workerWithSyncedResources(resources, forceLargeModels = false) {\n        if (this._disposed) {\n            return Promise.reject(canceled());\n        }\n        const proxy = await this._getProxy();\n        this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n        return proxy;\n    }\n    async textualSuggest(resources, leadingWord, wordDefRegExp) {\n        const proxy = await this.workerWithSyncedResources(resources);\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        return proxy.$textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n};\nEditorWorkerClient = __decorate([\n    __param(2, IModelService)\n], EditorWorkerClient);\nexport { EditorWorkerClient };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nlet AbstractCodeEditorService = class AbstractCodeEditorService extends Disposable {\n    constructor(_themeService) {\n        super();\n        this._themeService = _themeService;\n        this._onWillCreateCodeEditor = this._register(new Emitter());\n        this._onCodeEditorAdd = this._register(new Emitter());\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n        this._onCodeEditorRemove = this._register(new Emitter());\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n        this._onWillCreateDiffEditor = this._register(new Emitter());\n        this._onDiffEditorAdd = this._register(new Emitter());\n        this.onDiffEditorAdd = this._onDiffEditorAdd.event;\n        this._onDiffEditorRemove = this._register(new Emitter());\n        this.onDiffEditorRemove = this._onDiffEditorRemove.event;\n        this._decorationOptionProviders = new Map();\n        this._codeEditorOpenHandlers = new LinkedList();\n        this._modelProperties = new Map();\n        this._codeEditors = Object.create(null);\n        this._diffEditors = Object.create(null);\n        this._globalStyleSheet = null;\n    }\n    willCreateCodeEditor() {\n        this._onWillCreateCodeEditor.fire();\n    }\n    addCodeEditor(editor) {\n        this._codeEditors[editor.getId()] = editor;\n        this._onCodeEditorAdd.fire(editor);\n    }\n    removeCodeEditor(editor) {\n        if (delete this._codeEditors[editor.getId()]) {\n            this._onCodeEditorRemove.fire(editor);\n        }\n    }\n    listCodeEditors() {\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n    }\n    willCreateDiffEditor() {\n        this._onWillCreateDiffEditor.fire();\n    }\n    addDiffEditor(editor) {\n        this._diffEditors[editor.getId()] = editor;\n        this._onDiffEditorAdd.fire(editor);\n    }\n    listDiffEditors() {\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n    }\n    getFocusedCodeEditor() {\n        let editorWithWidgetFocus = null;\n        const editors = this.listCodeEditors();\n        for (const editor of editors) {\n            if (editor.hasTextFocus()) {\n                // bingo!\n                return editor;\n            }\n            if (editor.hasWidgetFocus()) {\n                editorWithWidgetFocus = editor;\n            }\n        }\n        return editorWithWidgetFocus;\n    }\n    removeDecorationType(key) {\n        const provider = this._decorationOptionProviders.get(key);\n        if (provider) {\n            provider.refCount--;\n            if (provider.refCount <= 0) {\n                this._decorationOptionProviders.delete(key);\n                provider.dispose();\n                this.listCodeEditors().forEach((ed) => ed.removeDecorationsByType(key));\n            }\n        }\n    }\n    setModelProperty(resource, key, value) {\n        const key1 = resource.toString();\n        let dest;\n        if (this._modelProperties.has(key1)) {\n            dest = this._modelProperties.get(key1);\n        }\n        else {\n            dest = new Map();\n            this._modelProperties.set(key1, dest);\n        }\n        dest.set(key, value);\n    }\n    getModelProperty(resource, key) {\n        const key1 = resource.toString();\n        if (this._modelProperties.has(key1)) {\n            const innerMap = this._modelProperties.get(key1);\n            return innerMap.get(key);\n        }\n        return undefined;\n    }\n    async openCodeEditor(input, source, sideBySide) {\n        for (const handler of this._codeEditorOpenHandlers) {\n            const candidate = await handler(input, source, sideBySide);\n            if (candidate !== null) {\n                return candidate;\n            }\n        }\n        return null;\n    }\n    registerCodeEditorOpenHandler(handler) {\n        const rm = this._codeEditorOpenHandlers.unshift(handler);\n        return toDisposable(rm);\n    }\n};\nAbstractCodeEditorService = __decorate([\n    __param(0, IThemeService)\n], AbstractCodeEditorService);\nexport { AbstractCodeEditorService };\nexport class GlobalStyleSheet {\n    constructor(styleSheet) {\n        this._styleSheet = styleSheet;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MarkdownRenderer_1;\nimport { renderMarkdown } from '../../../../../base/browser/markdownRenderer.js';\nimport { createTrustedTypesPolicy } from '../../../../../base/browser/trustedTypes.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport './renderedMarkdown.css';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../common/languages/modesRegistry.js';\nimport { tokenizeToString } from '../../../../common/languages/textToHtmlTokenizer.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\n/**\n * Markdown renderer that can render codeblocks with the editor mechanics. This\n * renderer should always be preferred.\n */\nlet MarkdownRenderer = class MarkdownRenderer {\n    static { MarkdownRenderer_1 = this; }\n    static { this._ttpTokenizer = createTrustedTypesPolicy('tokenizeToString', {\n        createHTML(html) {\n            return html;\n        }\n    }); }\n    constructor(_options, _languageService, _openerService) {\n        this._options = _options;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._onDidRenderAsync = new Emitter();\n        this.onDidRenderAsync = this._onDidRenderAsync.event;\n    }\n    dispose() {\n        this._onDidRenderAsync.dispose();\n    }\n    render(markdown, options, markedOptions) {\n        if (!markdown) {\n            const element = document.createElement('span');\n            return { element, dispose: () => { } };\n        }\n        const disposables = new DisposableStore();\n        const rendered = disposables.add(renderMarkdown(markdown, { ...this._getRenderOptions(markdown, disposables), ...options }, markedOptions));\n        rendered.element.classList.add('rendered-markdown');\n        return {\n            element: rendered.element,\n            dispose: () => disposables.dispose()\n        };\n    }\n    _getRenderOptions(markdown, disposables) {\n        return {\n            codeBlockRenderer: async (languageAlias, value) => {\n                // In markdown,\n                // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\n                // it is possible no alias is given in which case we fall back to the current editor lang\n                let languageId;\n                if (languageAlias) {\n                    languageId = this._languageService.getLanguageIdByLanguageName(languageAlias);\n                }\n                else if (this._options.editor) {\n                    languageId = this._options.editor.getModel()?.getLanguageId();\n                }\n                if (!languageId) {\n                    languageId = PLAINTEXT_LANGUAGE_ID;\n                }\n                const html = await tokenizeToString(this._languageService, value, languageId);\n                const element = document.createElement('span');\n                element.innerHTML = (MarkdownRenderer_1._ttpTokenizer?.createHTML(html) ?? html);\n                // use \"good\" font\n                if (this._options.editor) {\n                    const fontInfo = this._options.editor.getOption(50 /* EditorOption.fontInfo */);\n                    applyFontInfo(element, fontInfo);\n                }\n                else if (this._options.codeBlockFontFamily) {\n                    element.style.fontFamily = this._options.codeBlockFontFamily;\n                }\n                if (this._options.codeBlockFontSize !== undefined) {\n                    element.style.fontSize = this._options.codeBlockFontSize;\n                }\n                return element;\n            },\n            asyncRenderCallback: () => this._onDidRenderAsync.fire(),\n            actionHandler: {\n                callback: (link) => openLinkFromMarkdown(this._openerService, link, markdown.isTrusted),\n                disposables: disposables\n            }\n        };\n    }\n};\nMarkdownRenderer = MarkdownRenderer_1 = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService)\n], MarkdownRenderer);\nexport { MarkdownRenderer };\nexport async function openLinkFromMarkdown(openerService, link, isTrusted) {\n    try {\n        return await openerService.open(link, {\n            fromUserGesture: true,\n            allowContributedOpeners: true,\n            allowCommands: toAllowCommandsOption(isTrusted),\n        });\n    }\n    catch (e) {\n        onUnexpectedError(e);\n        return false;\n    }\n}\nfunction toAllowCommandsOption(isTrusted) {\n    if (isTrusted === true) {\n        return true; // Allow all commands\n    }\n    if (isTrusted && Array.isArray(isTrusted.enabledCommands)) {\n        return isTrusted.enabledCommands; // Allow subset of commands\n    }\n    return false; // Block commands\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport './hover.css';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { HoverAction, HoverWidget as BaseHoverWidget, getHoverAccessibleViewHint } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { MarkdownRenderer, openLinkFromMarkdown } from '../../widget/markdownRenderer/browser/markdownRenderer.js';\nimport { isMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { localize } from '../../../../nls.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nconst $ = dom.$;\nlet HoverWidget = class HoverWidget extends Widget {\n    get _targetWindow() {\n        return dom.getWindow(this._target.targetElements[0]);\n    }\n    get _targetDocumentElement() {\n        return dom.getWindow(this._target.targetElements[0]).document.documentElement;\n    }\n    get isDisposed() { return this._isDisposed; }\n    get isMouseIn() { return this._lockMouseTracker.isMouseIn; }\n    get domNode() { return this._hover.containerDomNode; }\n    get onDispose() { return this._onDispose.event; }\n    get onRequestLayout() { return this._onRequestLayout.event; }\n    get anchor() { return this._hoverPosition === 2 /* HoverPosition.BELOW */ ? 0 /* AnchorPosition.BELOW */ : 1 /* AnchorPosition.ABOVE */; }\n    get x() { return this._x; }\n    get y() { return this._y; }\n    /**\n     * Whether the hover is \"locked\" by holding the alt/option key. When locked, the hover will not\n     * hide and can be hovered regardless of whether the `hideOnHover` hover option is set.\n     */\n    get isLocked() { return this._isLocked; }\n    set isLocked(value) {\n        if (this._isLocked === value) {\n            return;\n        }\n        this._isLocked = value;\n        this._hoverContainer.classList.toggle('locked', this._isLocked);\n    }\n    constructor(options, _keybindingService, _configurationService, _openerService, _instantiationService, _accessibilityService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._configurationService = _configurationService;\n        this._openerService = _openerService;\n        this._instantiationService = _instantiationService;\n        this._accessibilityService = _accessibilityService;\n        this._messageListeners = new DisposableStore();\n        this._isDisposed = false;\n        this._forcePosition = false;\n        this._x = 0;\n        this._y = 0;\n        this._isLocked = false;\n        this._enableFocusTraps = false;\n        this._addedFocusTrap = false;\n        this._onDispose = this._register(new Emitter());\n        this._onRequestLayout = this._register(new Emitter());\n        this._linkHandler = options.linkHandler || (url => {\n            return openLinkFromMarkdown(this._openerService, url, isMarkdownString(options.content) ? options.content.isTrusted : undefined);\n        });\n        this._target = 'targetElements' in options.target ? options.target : new ElementHoverTarget(options.target);\n        this._hoverPointer = options.appearance?.showPointer ? $('div.workbench-hover-pointer') : undefined;\n        this._hover = this._register(new BaseHoverWidget());\n        this._hover.containerDomNode.classList.add('workbench-hover', 'fadeIn');\n        if (options.appearance?.compact) {\n            this._hover.containerDomNode.classList.add('workbench-hover', 'compact');\n        }\n        if (options.appearance?.skipFadeInAnimation) {\n            this._hover.containerDomNode.classList.add('skip-fade-in');\n        }\n        if (options.additionalClasses) {\n            this._hover.containerDomNode.classList.add(...options.additionalClasses);\n        }\n        if (options.position?.forcePosition) {\n            this._forcePosition = true;\n        }\n        if (options.trapFocus) {\n            this._enableFocusTraps = true;\n        }\n        this._hoverPosition = options.position?.hoverPosition ?? 3 /* HoverPosition.ABOVE */;\n        // Don't allow mousedown out of the widget, otherwise preventDefault will call and text will\n        // not be selected.\n        this.onmousedown(this._hover.containerDomNode, e => e.stopPropagation());\n        // Hide hover on escape\n        this.onkeydown(this._hover.containerDomNode, e => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.dispose();\n            }\n        });\n        // Hide when the window loses focus\n        this._register(dom.addDisposableListener(this._targetWindow, 'blur', () => this.dispose()));\n        const rowElement = $('div.hover-row.markdown-hover');\n        const contentsElement = $('div.hover-contents');\n        if (typeof options.content === 'string') {\n            contentsElement.textContent = options.content;\n            contentsElement.style.whiteSpace = 'pre-wrap';\n        }\n        else if (dom.isHTMLElement(options.content)) {\n            contentsElement.appendChild(options.content);\n            contentsElement.classList.add('html-hover-contents');\n        }\n        else {\n            const markdown = options.content;\n            const mdRenderer = this._instantiationService.createInstance(MarkdownRenderer, { codeBlockFontFamily: this._configurationService.getValue('editor').fontFamily || EDITOR_FONT_DEFAULTS.fontFamily });\n            const { element } = mdRenderer.render(markdown, {\n                actionHandler: {\n                    callback: (content) => this._linkHandler(content),\n                    disposables: this._messageListeners\n                },\n                asyncRenderCallback: () => {\n                    contentsElement.classList.add('code-hover-contents');\n                    this.layout();\n                    // This changes the dimensions of the hover so trigger a layout\n                    this._onRequestLayout.fire();\n                }\n            });\n            contentsElement.appendChild(element);\n        }\n        rowElement.appendChild(contentsElement);\n        this._hover.contentsDomNode.appendChild(rowElement);\n        if (options.actions && options.actions.length > 0) {\n            const statusBarElement = $('div.hover-row.status-bar');\n            const actionsElement = $('div.actions');\n            options.actions.forEach(action => {\n                const keybinding = this._keybindingService.lookupKeybinding(action.commandId);\n                const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n                HoverAction.render(actionsElement, {\n                    label: action.label,\n                    commandId: action.commandId,\n                    run: e => {\n                        action.run(e);\n                        this.dispose();\n                    },\n                    iconClass: action.iconClass\n                }, keybindingLabel);\n            });\n            statusBarElement.appendChild(actionsElement);\n            this._hover.containerDomNode.appendChild(statusBarElement);\n        }\n        this._hoverContainer = $('div.workbench-hover-container');\n        if (this._hoverPointer) {\n            this._hoverContainer.appendChild(this._hoverPointer);\n        }\n        this._hoverContainer.appendChild(this._hover.containerDomNode);\n        // Determine whether to hide on hover\n        let hideOnHover;\n        if (options.actions && options.actions.length > 0) {\n            // If there are actions, require hover so they can be accessed\n            hideOnHover = false;\n        }\n        else {\n            if (options.persistence?.hideOnHover === undefined) {\n                // When unset, will default to true when it's a string or when it's markdown that\n                // appears to have a link using a naive check for '](' and '</a>'\n                hideOnHover = typeof options.content === 'string' ||\n                    isMarkdownString(options.content) && !options.content.value.includes('](') && !options.content.value.includes('</a>');\n            }\n            else {\n                // It's set explicitly\n                hideOnHover = options.persistence.hideOnHover;\n            }\n        }\n        // Show the hover hint if needed\n        if (options.appearance?.showHoverHint) {\n            const statusBarElement = $('div.hover-row.status-bar');\n            const infoElement = $('div.info');\n            infoElement.textContent = localize('hoverhint', 'Hold {0} key to mouse over', isMacintosh ? 'Option' : 'Alt');\n            statusBarElement.appendChild(infoElement);\n            this._hover.containerDomNode.appendChild(statusBarElement);\n        }\n        const mouseTrackerTargets = [...this._target.targetElements];\n        if (!hideOnHover) {\n            mouseTrackerTargets.push(this._hoverContainer);\n        }\n        const mouseTracker = this._register(new CompositeMouseTracker(mouseTrackerTargets));\n        this._register(mouseTracker.onMouseOut(() => {\n            if (!this._isLocked) {\n                this.dispose();\n            }\n        }));\n        // Setup another mouse tracker when hideOnHover is set in order to track the hover as well\n        // when it is locked. This ensures the hover will hide on mouseout after alt has been\n        // released to unlock the element.\n        if (hideOnHover) {\n            const mouseTracker2Targets = [...this._target.targetElements, this._hoverContainer];\n            this._lockMouseTracker = this._register(new CompositeMouseTracker(mouseTracker2Targets));\n            this._register(this._lockMouseTracker.onMouseOut(() => {\n                if (!this._isLocked) {\n                    this.dispose();\n                }\n            }));\n        }\n        else {\n            this._lockMouseTracker = mouseTracker;\n        }\n    }\n    addFocusTrap() {\n        if (!this._enableFocusTraps || this._addedFocusTrap) {\n            return;\n        }\n        this._addedFocusTrap = true;\n        // Add a hover tab loop if the hover has at least one element with a valid tabIndex\n        const firstContainerFocusElement = this._hover.containerDomNode;\n        const lastContainerFocusElement = this.findLastFocusableChild(this._hover.containerDomNode);\n        if (lastContainerFocusElement) {\n            const beforeContainerFocusElement = dom.prepend(this._hoverContainer, $('div'));\n            const afterContainerFocusElement = dom.append(this._hoverContainer, $('div'));\n            beforeContainerFocusElement.tabIndex = 0;\n            afterContainerFocusElement.tabIndex = 0;\n            this._register(dom.addDisposableListener(afterContainerFocusElement, 'focus', (e) => {\n                firstContainerFocusElement.focus();\n                e.preventDefault();\n            }));\n            this._register(dom.addDisposableListener(beforeContainerFocusElement, 'focus', (e) => {\n                lastContainerFocusElement.focus();\n                e.preventDefault();\n            }));\n        }\n    }\n    findLastFocusableChild(root) {\n        if (root.hasChildNodes()) {\n            for (let i = 0; i < root.childNodes.length; i++) {\n                const node = root.childNodes.item(root.childNodes.length - i - 1);\n                if (node.nodeType === node.ELEMENT_NODE) {\n                    const parsedNode = node;\n                    if (typeof parsedNode.tabIndex === 'number' && parsedNode.tabIndex >= 0) {\n                        return parsedNode;\n                    }\n                }\n                const recursivelyFoundElement = this.findLastFocusableChild(node);\n                if (recursivelyFoundElement) {\n                    return recursivelyFoundElement;\n                }\n            }\n        }\n        return undefined;\n    }\n    render(container) {\n        container.appendChild(this._hoverContainer);\n        const hoverFocused = this._hoverContainer.contains(this._hoverContainer.ownerDocument.activeElement);\n        const accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), this._keybindingService.lookupKeybinding('editor.action.accessibleView')?.getAriaLabel());\n        if (accessibleViewHint) {\n            status(accessibleViewHint);\n        }\n        this.layout();\n        this.addFocusTrap();\n    }\n    layout() {\n        this._hover.containerDomNode.classList.remove('right-aligned');\n        this._hover.contentsDomNode.style.maxHeight = '';\n        const getZoomAccountedBoundingClientRect = (e) => {\n            const zoom = dom.getDomNodeZoomLevel(e);\n            const boundingRect = e.getBoundingClientRect();\n            return {\n                top: boundingRect.top * zoom,\n                bottom: boundingRect.bottom * zoom,\n                right: boundingRect.right * zoom,\n                left: boundingRect.left * zoom,\n            };\n        };\n        const targetBounds = this._target.targetElements.map(e => getZoomAccountedBoundingClientRect(e));\n        const { top, right, bottom, left } = targetBounds[0];\n        const width = right - left;\n        const height = bottom - top;\n        const targetRect = {\n            top, right, bottom, left, width, height,\n            center: {\n                x: left + (width / 2),\n                y: top + (height / 2)\n            }\n        };\n        // These calls adjust the position depending on spacing.\n        this.adjustHorizontalHoverPosition(targetRect);\n        this.adjustVerticalHoverPosition(targetRect);\n        // This call limits the maximum height of the hover.\n        this.adjustHoverMaxHeight(targetRect);\n        // Offset the hover position if there is a pointer so it aligns with the target element\n        this._hoverContainer.style.padding = '';\n        this._hoverContainer.style.margin = '';\n        if (this._hoverPointer) {\n            switch (this._hoverPosition) {\n                case 1 /* HoverPosition.RIGHT */:\n                    targetRect.left += 3 /* Constants.PointerSize */;\n                    targetRect.right += 3 /* Constants.PointerSize */;\n                    this._hoverContainer.style.paddingLeft = `${3 /* Constants.PointerSize */}px`;\n                    this._hoverContainer.style.marginLeft = `${-3 /* Constants.PointerSize */}px`;\n                    break;\n                case 0 /* HoverPosition.LEFT */:\n                    targetRect.left -= 3 /* Constants.PointerSize */;\n                    targetRect.right -= 3 /* Constants.PointerSize */;\n                    this._hoverContainer.style.paddingRight = `${3 /* Constants.PointerSize */}px`;\n                    this._hoverContainer.style.marginRight = `${-3 /* Constants.PointerSize */}px`;\n                    break;\n                case 2 /* HoverPosition.BELOW */:\n                    targetRect.top += 3 /* Constants.PointerSize */;\n                    targetRect.bottom += 3 /* Constants.PointerSize */;\n                    this._hoverContainer.style.paddingTop = `${3 /* Constants.PointerSize */}px`;\n                    this._hoverContainer.style.marginTop = `${-3 /* Constants.PointerSize */}px`;\n                    break;\n                case 3 /* HoverPosition.ABOVE */:\n                    targetRect.top -= 3 /* Constants.PointerSize */;\n                    targetRect.bottom -= 3 /* Constants.PointerSize */;\n                    this._hoverContainer.style.paddingBottom = `${3 /* Constants.PointerSize */}px`;\n                    this._hoverContainer.style.marginBottom = `${-3 /* Constants.PointerSize */}px`;\n                    break;\n            }\n            targetRect.center.x = targetRect.left + (width / 2);\n            targetRect.center.y = targetRect.top + (height / 2);\n        }\n        this.computeXCordinate(targetRect);\n        this.computeYCordinate(targetRect);\n        if (this._hoverPointer) {\n            // reset\n            this._hoverPointer.classList.remove('top');\n            this._hoverPointer.classList.remove('left');\n            this._hoverPointer.classList.remove('right');\n            this._hoverPointer.classList.remove('bottom');\n            this.setHoverPointerPosition(targetRect);\n        }\n        this._hover.onContentsChanged();\n    }\n    computeXCordinate(target) {\n        const hoverWidth = this._hover.containerDomNode.clientWidth + 2 /* Constants.HoverBorderWidth */;\n        if (this._target.x !== undefined) {\n            this._x = this._target.x;\n        }\n        else if (this._hoverPosition === 1 /* HoverPosition.RIGHT */) {\n            this._x = target.right;\n        }\n        else if (this._hoverPosition === 0 /* HoverPosition.LEFT */) {\n            this._x = target.left - hoverWidth;\n        }\n        else {\n            if (this._hoverPointer) {\n                this._x = target.center.x - (this._hover.containerDomNode.clientWidth / 2);\n            }\n            else {\n                this._x = target.left;\n            }\n            // Hover is going beyond window towards right end\n            if (this._x + hoverWidth >= this._targetDocumentElement.clientWidth) {\n                this._hover.containerDomNode.classList.add('right-aligned');\n                this._x = Math.max(this._targetDocumentElement.clientWidth - hoverWidth - 2 /* Constants.HoverWindowEdgeMargin */, this._targetDocumentElement.clientLeft);\n            }\n        }\n        // Hover is going beyond window towards left end\n        if (this._x < this._targetDocumentElement.clientLeft) {\n            this._x = target.left + 2 /* Constants.HoverWindowEdgeMargin */;\n        }\n    }\n    computeYCordinate(target) {\n        if (this._target.y !== undefined) {\n            this._y = this._target.y;\n        }\n        else if (this._hoverPosition === 3 /* HoverPosition.ABOVE */) {\n            this._y = target.top;\n        }\n        else if (this._hoverPosition === 2 /* HoverPosition.BELOW */) {\n            this._y = target.bottom - 2;\n        }\n        else {\n            if (this._hoverPointer) {\n                this._y = target.center.y + (this._hover.containerDomNode.clientHeight / 2);\n            }\n            else {\n                this._y = target.bottom;\n            }\n        }\n        // Hover on bottom is going beyond window\n        if (this._y > this._targetWindow.innerHeight) {\n            this._y = target.bottom;\n        }\n    }\n    adjustHorizontalHoverPosition(target) {\n        // Do not adjust horizontal hover position if x cordiante is provided\n        if (this._target.x !== undefined) {\n            return;\n        }\n        const hoverPointerOffset = (this._hoverPointer ? 3 /* Constants.PointerSize */ : 0);\n        // When force position is enabled, restrict max width\n        if (this._forcePosition) {\n            const padding = hoverPointerOffset + 2 /* Constants.HoverBorderWidth */;\n            if (this._hoverPosition === 1 /* HoverPosition.RIGHT */) {\n                this._hover.containerDomNode.style.maxWidth = `${this._targetDocumentElement.clientWidth - target.right - padding}px`;\n            }\n            else if (this._hoverPosition === 0 /* HoverPosition.LEFT */) {\n                this._hover.containerDomNode.style.maxWidth = `${target.left - padding}px`;\n            }\n            return;\n        }\n        // Position hover on right to target\n        if (this._hoverPosition === 1 /* HoverPosition.RIGHT */) {\n            const roomOnRight = this._targetDocumentElement.clientWidth - target.right;\n            // Hover on the right is going beyond window.\n            if (roomOnRight < this._hover.containerDomNode.clientWidth + hoverPointerOffset) {\n                const roomOnLeft = target.left;\n                // There's enough room on the left, flip the hover position\n                if (roomOnLeft >= this._hover.containerDomNode.clientWidth + hoverPointerOffset) {\n                    this._hoverPosition = 0 /* HoverPosition.LEFT */;\n                }\n                // Hover on the left would go beyond window too\n                else {\n                    this._hoverPosition = 2 /* HoverPosition.BELOW */;\n                }\n            }\n        }\n        // Position hover on left to target\n        else if (this._hoverPosition === 0 /* HoverPosition.LEFT */) {\n            const roomOnLeft = target.left;\n            // Hover on the left is going beyond window.\n            if (roomOnLeft < this._hover.containerDomNode.clientWidth + hoverPointerOffset) {\n                const roomOnRight = this._targetDocumentElement.clientWidth - target.right;\n                // There's enough room on the right, flip the hover position\n                if (roomOnRight >= this._hover.containerDomNode.clientWidth + hoverPointerOffset) {\n                    this._hoverPosition = 1 /* HoverPosition.RIGHT */;\n                }\n                // Hover on the right would go beyond window too\n                else {\n                    this._hoverPosition = 2 /* HoverPosition.BELOW */;\n                }\n            }\n            // Hover on the left is going beyond window.\n            if (target.left - this._hover.containerDomNode.clientWidth - hoverPointerOffset <= this._targetDocumentElement.clientLeft) {\n                this._hoverPosition = 1 /* HoverPosition.RIGHT */;\n            }\n        }\n    }\n    adjustVerticalHoverPosition(target) {\n        // Do not adjust vertical hover position if the y coordinate is provided\n        // or the position is forced\n        if (this._target.y !== undefined || this._forcePosition) {\n            return;\n        }\n        const hoverPointerOffset = (this._hoverPointer ? 3 /* Constants.PointerSize */ : 0);\n        // Position hover on top of the target\n        if (this._hoverPosition === 3 /* HoverPosition.ABOVE */) {\n            // Hover on top is going beyond window\n            if (target.top - this._hover.containerDomNode.clientHeight - hoverPointerOffset < 0) {\n                this._hoverPosition = 2 /* HoverPosition.BELOW */;\n            }\n        }\n        // Position hover below the target\n        else if (this._hoverPosition === 2 /* HoverPosition.BELOW */) {\n            // Hover on bottom is going beyond window\n            if (target.bottom + this._hover.containerDomNode.clientHeight + hoverPointerOffset > this._targetWindow.innerHeight) {\n                this._hoverPosition = 3 /* HoverPosition.ABOVE */;\n            }\n        }\n    }\n    adjustHoverMaxHeight(target) {\n        let maxHeight = this._targetWindow.innerHeight / 2;\n        // When force position is enabled, restrict max height\n        if (this._forcePosition) {\n            const padding = (this._hoverPointer ? 3 /* Constants.PointerSize */ : 0) + 2 /* Constants.HoverBorderWidth */;\n            if (this._hoverPosition === 3 /* HoverPosition.ABOVE */) {\n                maxHeight = Math.min(maxHeight, target.top - padding);\n            }\n            else if (this._hoverPosition === 2 /* HoverPosition.BELOW */) {\n                maxHeight = Math.min(maxHeight, this._targetWindow.innerHeight - target.bottom - padding);\n            }\n        }\n        this._hover.containerDomNode.style.maxHeight = `${maxHeight}px`;\n        if (this._hover.contentsDomNode.clientHeight < this._hover.contentsDomNode.scrollHeight) {\n            // Add padding for a vertical scrollbar\n            const extraRightPadding = `${this._hover.scrollbar.options.verticalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingRight !== extraRightPadding) {\n                this._hover.contentsDomNode.style.paddingRight = extraRightPadding;\n            }\n        }\n    }\n    setHoverPointerPosition(target) {\n        if (!this._hoverPointer) {\n            return;\n        }\n        switch (this._hoverPosition) {\n            case 0 /* HoverPosition.LEFT */:\n            case 1 /* HoverPosition.RIGHT */: {\n                this._hoverPointer.classList.add(this._hoverPosition === 0 /* HoverPosition.LEFT */ ? 'right' : 'left');\n                const hoverHeight = this._hover.containerDomNode.clientHeight;\n                // If hover is taller than target, then show the pointer at the center of target\n                if (hoverHeight > target.height) {\n                    this._hoverPointer.style.top = `${target.center.y - (this._y - hoverHeight) - 3 /* Constants.PointerSize */}px`;\n                }\n                // Otherwise show the pointer at the center of hover\n                else {\n                    this._hoverPointer.style.top = `${Math.round((hoverHeight / 2)) - 3 /* Constants.PointerSize */}px`;\n                }\n                break;\n            }\n            case 3 /* HoverPosition.ABOVE */:\n            case 2 /* HoverPosition.BELOW */: {\n                this._hoverPointer.classList.add(this._hoverPosition === 3 /* HoverPosition.ABOVE */ ? 'bottom' : 'top');\n                const hoverWidth = this._hover.containerDomNode.clientWidth;\n                // Position pointer at the center of the hover\n                let pointerLeftPosition = Math.round((hoverWidth / 2)) - 3 /* Constants.PointerSize */;\n                // If pointer goes beyond target then position it at the center of the target\n                const pointerX = this._x + pointerLeftPosition;\n                if (pointerX < target.left || pointerX > target.right) {\n                    pointerLeftPosition = target.center.x - this._x - 3 /* Constants.PointerSize */;\n                }\n                this._hoverPointer.style.left = `${pointerLeftPosition}px`;\n                break;\n            }\n        }\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    dispose() {\n        if (!this._isDisposed) {\n            this._onDispose.fire();\n            this._hoverContainer.remove();\n            this._messageListeners.dispose();\n            this._target.dispose();\n            super.dispose();\n        }\n        this._isDisposed = true;\n    }\n};\nHoverWidget = __decorate([\n    __param(1, IKeybindingService),\n    __param(2, IConfigurationService),\n    __param(3, IOpenerService),\n    __param(4, IInstantiationService),\n    __param(5, IAccessibilityService)\n], HoverWidget);\nexport { HoverWidget };\nclass CompositeMouseTracker extends Widget {\n    get onMouseOut() { return this._onMouseOut.event; }\n    get isMouseIn() { return this._isMouseIn; }\n    constructor(_elements) {\n        super();\n        this._elements = _elements;\n        this._isMouseIn = true;\n        this._onMouseOut = this._register(new Emitter());\n        this._elements.forEach(n => this.onmouseover(n, () => this._onTargetMouseOver(n)));\n        this._elements.forEach(n => this.onmouseleave(n, () => this._onTargetMouseLeave(n)));\n    }\n    _onTargetMouseOver(target) {\n        this._isMouseIn = true;\n        this._clearEvaluateMouseStateTimeout(target);\n    }\n    _onTargetMouseLeave(target) {\n        this._isMouseIn = false;\n        this._evaluateMouseState(target);\n    }\n    _evaluateMouseState(target) {\n        this._clearEvaluateMouseStateTimeout(target);\n        // Evaluate whether the mouse is still outside asynchronously such that other mouse targets\n        // have the opportunity to first their mouse in event.\n        this._mouseTimeout = dom.getWindow(target).setTimeout(() => this._fireIfMouseOutside(), 0);\n    }\n    _clearEvaluateMouseStateTimeout(target) {\n        if (this._mouseTimeout) {\n            dom.getWindow(target).clearTimeout(this._mouseTimeout);\n            this._mouseTimeout = undefined;\n        }\n    }\n    _fireIfMouseOutside() {\n        if (!this._isMouseIn) {\n            this._onMouseOut.fire();\n        }\n    }\n}\nclass ElementHoverTarget {\n    constructor(_element) {\n        this._element = _element;\n        this.targetElements = [this._element];\n    }\n    dispose() {\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isHTMLElement } from '../../../../base/browser/dom.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { isMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { isFunction, isString } from '../../../../base/common/types.js';\nimport { localize } from '../../../../nls.js';\nexport class ManagedHoverWidget {\n    constructor(hoverDelegate, target, fadeInAnimation) {\n        this.hoverDelegate = hoverDelegate;\n        this.target = target;\n        this.fadeInAnimation = fadeInAnimation;\n    }\n    async update(content, focus, options) {\n        if (this._cancellationTokenSource) {\n            // there's an computation ongoing, cancel it\n            this._cancellationTokenSource.dispose(true);\n            this._cancellationTokenSource = undefined;\n        }\n        if (this.isDisposed) {\n            return;\n        }\n        let resolvedContent;\n        if (content === undefined || isString(content) || isHTMLElement(content)) {\n            resolvedContent = content;\n        }\n        else if (!isFunction(content.markdown)) {\n            resolvedContent = content.markdown ?? content.markdownNotSupportedFallback;\n        }\n        else {\n            // compute the content, potentially long-running\n            // show 'Loading' if no hover is up yet\n            if (!this._hoverWidget) {\n                this.show(localize('iconLabel.loading', \"Loading...\"), focus, options);\n            }\n            // compute the content\n            this._cancellationTokenSource = new CancellationTokenSource();\n            const token = this._cancellationTokenSource.token;\n            resolvedContent = await content.markdown(token);\n            if (resolvedContent === undefined) {\n                resolvedContent = content.markdownNotSupportedFallback;\n            }\n            if (this.isDisposed || token.isCancellationRequested) {\n                // either the widget has been closed in the meantime\n                // or there has been a new call to `update`\n                return;\n            }\n        }\n        this.show(resolvedContent, focus, options);\n    }\n    show(content, focus, options) {\n        const oldHoverWidget = this._hoverWidget;\n        if (this.hasContent(content)) {\n            const hoverOptions = {\n                content,\n                target: this.target,\n                actions: options?.actions,\n                linkHandler: options?.linkHandler,\n                trapFocus: options?.trapFocus,\n                appearance: {\n                    showPointer: this.hoverDelegate.placement === 'element',\n                    skipFadeInAnimation: !this.fadeInAnimation || !!oldHoverWidget, // do not fade in if the hover is already showing\n                    showHoverHint: options?.appearance?.showHoverHint,\n                },\n                position: {\n                    hoverPosition: 2 /* HoverPosition.BELOW */,\n                },\n            };\n            this._hoverWidget = this.hoverDelegate.showHover(hoverOptions, focus);\n        }\n        oldHoverWidget?.dispose();\n    }\n    hasContent(content) {\n        if (!content) {\n            return false;\n        }\n        if (isMarkdownString(content)) {\n            return !!content.value;\n        }\n        return true;\n    }\n    get isDisposed() {\n        return this._hoverWidget?.isDisposed;\n    }\n    dispose() {\n        this._hoverWidget?.dispose();\n        this._cancellationTokenSource?.dispose(true);\n        this._cancellationTokenSource = undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { HoverWidget } from './hoverWidget.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { addDisposableListener, EventType, getActiveElement, isAncestorOfActiveElement, isAncestor, getWindow, isHTMLElement } from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { ContextViewHandler } from '../../../../platform/contextview/browser/contextViewService.js';\nimport { ManagedHoverWidget } from './updatableHoverWidget.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nlet HoverService = class HoverService extends Disposable {\n    constructor(_instantiationService, contextMenuService, _keybindingService, _layoutService, _accessibilityService) {\n        super();\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._layoutService = _layoutService;\n        this._accessibilityService = _accessibilityService;\n        this._managedHovers = new Map();\n        contextMenuService.onDidShowContextMenu(() => this.hideHover());\n        this._contextViewHandler = this._register(new ContextViewHandler(this._layoutService));\n    }\n    showHover(options, focus, skipLastFocusedUpdate) {\n        if (getHoverOptionsIdentity(this._currentHoverOptions) === getHoverOptionsIdentity(options)) {\n            return undefined;\n        }\n        if (this._currentHover && this._currentHoverOptions?.persistence?.sticky) {\n            return undefined;\n        }\n        this._currentHoverOptions = options;\n        this._lastHoverOptions = options;\n        const trapFocus = options.trapFocus || this._accessibilityService.isScreenReaderOptimized();\n        const activeElement = getActiveElement();\n        // HACK, remove this check when #189076 is fixed\n        if (!skipLastFocusedUpdate) {\n            if (trapFocus && activeElement) {\n                if (!activeElement.classList.contains('monaco-hover')) {\n                    this._lastFocusedElementBeforeOpen = activeElement;\n                }\n            }\n            else {\n                this._lastFocusedElementBeforeOpen = undefined;\n            }\n        }\n        const hoverDisposables = new DisposableStore();\n        const hover = this._instantiationService.createInstance(HoverWidget, options);\n        if (options.persistence?.sticky) {\n            hover.isLocked = true;\n        }\n        hover.onDispose(() => {\n            const hoverWasFocused = this._currentHover?.domNode && isAncestorOfActiveElement(this._currentHover.domNode);\n            if (hoverWasFocused) {\n                // Required to handle cases such as closing the hover with the escape key\n                this._lastFocusedElementBeforeOpen?.focus();\n            }\n            // Only clear the current options if it's the current hover, the current options help\n            // reduce flickering when the same hover is shown multiple times\n            if (this._currentHoverOptions === options) {\n                this._currentHoverOptions = undefined;\n            }\n            hoverDisposables.dispose();\n        }, undefined, hoverDisposables);\n        // Set the container explicitly to enable aux window support\n        if (!options.container) {\n            const targetElement = isHTMLElement(options.target) ? options.target : options.target.targetElements[0];\n            options.container = this._layoutService.getContainer(getWindow(targetElement));\n        }\n        this._contextViewHandler.showContextView(new HoverContextViewDelegate(hover, focus), options.container);\n        hover.onRequestLayout(() => this._contextViewHandler.layout(), undefined, hoverDisposables);\n        if (options.persistence?.sticky) {\n            hoverDisposables.add(addDisposableListener(getWindow(options.container).document, EventType.MOUSE_DOWN, e => {\n                if (!isAncestor(e.target, hover.domNode)) {\n                    this.doHideHover();\n                }\n            }));\n        }\n        else {\n            if ('targetElements' in options.target) {\n                for (const element of options.target.targetElements) {\n                    hoverDisposables.add(addDisposableListener(element, EventType.CLICK, () => this.hideHover()));\n                }\n            }\n            else {\n                hoverDisposables.add(addDisposableListener(options.target, EventType.CLICK, () => this.hideHover()));\n            }\n            const focusedElement = getActiveElement();\n            if (focusedElement) {\n                const focusedElementDocument = getWindow(focusedElement).document;\n                hoverDisposables.add(addDisposableListener(focusedElement, EventType.KEY_DOWN, e => this._keyDown(e, hover, !!options.persistence?.hideOnKeyDown)));\n                hoverDisposables.add(addDisposableListener(focusedElementDocument, EventType.KEY_DOWN, e => this._keyDown(e, hover, !!options.persistence?.hideOnKeyDown)));\n                hoverDisposables.add(addDisposableListener(focusedElement, EventType.KEY_UP, e => this._keyUp(e, hover)));\n                hoverDisposables.add(addDisposableListener(focusedElementDocument, EventType.KEY_UP, e => this._keyUp(e, hover)));\n            }\n        }\n        if ('IntersectionObserver' in mainWindow) {\n            const observer = new IntersectionObserver(e => this._intersectionChange(e, hover), { threshold: 0 });\n            const firstTargetElement = 'targetElements' in options.target ? options.target.targetElements[0] : options.target;\n            observer.observe(firstTargetElement);\n            hoverDisposables.add(toDisposable(() => observer.disconnect()));\n        }\n        this._currentHover = hover;\n        return hover;\n    }\n    hideHover() {\n        if (this._currentHover?.isLocked || !this._currentHoverOptions) {\n            return;\n        }\n        this.doHideHover();\n    }\n    doHideHover() {\n        this._currentHover = undefined;\n        this._currentHoverOptions = undefined;\n        this._contextViewHandler.hideContextView();\n    }\n    _intersectionChange(entries, hover) {\n        const entry = entries[entries.length - 1];\n        if (!entry.isIntersecting) {\n            hover.dispose();\n        }\n    }\n    showAndFocusLastHover() {\n        if (!this._lastHoverOptions) {\n            return;\n        }\n        this.showHover(this._lastHoverOptions, true, true);\n    }\n    _keyDown(e, hover, hideOnKeyDown) {\n        if (e.key === 'Alt') {\n            hover.isLocked = true;\n            return;\n        }\n        const event = new StandardKeyboardEvent(e);\n        const keybinding = this._keybindingService.resolveKeyboardEvent(event);\n        if (keybinding.getSingleModifierDispatchChords().some(value => !!value) || this._keybindingService.softDispatch(event, event.target).kind !== 0 /* ResultKind.NoMatchingKb */) {\n            return;\n        }\n        if (hideOnKeyDown && (!this._currentHoverOptions?.trapFocus || e.key !== 'Tab')) {\n            this.hideHover();\n            this._lastFocusedElementBeforeOpen?.focus();\n        }\n    }\n    _keyUp(e, hover) {\n        if (e.key === 'Alt') {\n            hover.isLocked = false;\n            // Hide if alt is released while the mouse is not over hover/target\n            if (!hover.isMouseIn) {\n                this.hideHover();\n                this._lastFocusedElementBeforeOpen?.focus();\n            }\n        }\n    }\n    // TODO: Investigate performance of this function. There seems to be a lot of content created\n    //       and thrown away on start up\n    setupManagedHover(hoverDelegate, targetElement, content, options) {\n        targetElement.setAttribute('custom-hover', 'true');\n        if (targetElement.title !== '') {\n            console.warn('HTML element already has a title attribute, which will conflict with the custom hover. Please remove the title attribute.');\n            console.trace('Stack trace:', targetElement.title);\n            targetElement.title = '';\n        }\n        let hoverPreparation;\n        let hoverWidget;\n        const hideHover = (disposeWidget, disposePreparation) => {\n            const hadHover = hoverWidget !== undefined;\n            if (disposeWidget) {\n                hoverWidget?.dispose();\n                hoverWidget = undefined;\n            }\n            if (disposePreparation) {\n                hoverPreparation?.dispose();\n                hoverPreparation = undefined;\n            }\n            if (hadHover) {\n                hoverDelegate.onDidHideHover?.();\n                hoverWidget = undefined;\n            }\n        };\n        const triggerShowHover = (delay, focus, target, trapFocus) => {\n            return new TimeoutTimer(async () => {\n                if (!hoverWidget || hoverWidget.isDisposed) {\n                    hoverWidget = new ManagedHoverWidget(hoverDelegate, target || targetElement, delay > 0);\n                    await hoverWidget.update(typeof content === 'function' ? content() : content, focus, { ...options, trapFocus });\n                }\n            }, delay);\n        };\n        let isMouseDown = false;\n        const mouseDownEmitter = addDisposableListener(targetElement, EventType.MOUSE_DOWN, () => {\n            isMouseDown = true;\n            hideHover(true, true);\n        }, true);\n        const mouseUpEmitter = addDisposableListener(targetElement, EventType.MOUSE_UP, () => {\n            isMouseDown = false;\n        }, true);\n        const mouseLeaveEmitter = addDisposableListener(targetElement, EventType.MOUSE_LEAVE, (e) => {\n            isMouseDown = false;\n            hideHover(false, e.fromElement === targetElement);\n        }, true);\n        const onMouseOver = (e) => {\n            if (hoverPreparation) {\n                return;\n            }\n            const toDispose = new DisposableStore();\n            const target = {\n                targetElements: [targetElement],\n                dispose: () => { }\n            };\n            if (hoverDelegate.placement === undefined || hoverDelegate.placement === 'mouse') {\n                // track the mouse position\n                const onMouseMove = (e) => {\n                    target.x = e.x + 10;\n                    if ((isHTMLElement(e.target)) && getHoverTargetElement(e.target, targetElement) !== targetElement) {\n                        hideHover(true, true);\n                    }\n                };\n                toDispose.add(addDisposableListener(targetElement, EventType.MOUSE_MOVE, onMouseMove, true));\n            }\n            hoverPreparation = toDispose;\n            if ((isHTMLElement(e.target)) && getHoverTargetElement(e.target, targetElement) !== targetElement) {\n                return; // Do not show hover when the mouse is over another hover target\n            }\n            toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n        };\n        const mouseOverDomEmitter = addDisposableListener(targetElement, EventType.MOUSE_OVER, onMouseOver, true);\n        const onFocus = () => {\n            if (isMouseDown || hoverPreparation) {\n                return;\n            }\n            const target = {\n                targetElements: [targetElement],\n                dispose: () => { }\n            };\n            const toDispose = new DisposableStore();\n            const onBlur = () => hideHover(true, true);\n            toDispose.add(addDisposableListener(targetElement, EventType.BLUR, onBlur, true));\n            toDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n            hoverPreparation = toDispose;\n        };\n        // Do not show hover when focusing an input or textarea\n        let focusDomEmitter;\n        const tagName = targetElement.tagName.toLowerCase();\n        if (tagName !== 'input' && tagName !== 'textarea') {\n            focusDomEmitter = addDisposableListener(targetElement, EventType.FOCUS, onFocus, true);\n        }\n        const hover = {\n            show: focus => {\n                hideHover(false, true); // terminate a ongoing mouse over preparation\n                triggerShowHover(0, focus, undefined, focus); // show hover immediately\n            },\n            hide: () => {\n                hideHover(true, true);\n            },\n            update: async (newContent, hoverOptions) => {\n                content = newContent;\n                await hoverWidget?.update(content, undefined, hoverOptions);\n            },\n            dispose: () => {\n                this._managedHovers.delete(targetElement);\n                mouseOverDomEmitter.dispose();\n                mouseLeaveEmitter.dispose();\n                mouseDownEmitter.dispose();\n                mouseUpEmitter.dispose();\n                focusDomEmitter?.dispose();\n                hideHover(true, true);\n            }\n        };\n        this._managedHovers.set(targetElement, hover);\n        return hover;\n    }\n    showManagedHover(target) {\n        const hover = this._managedHovers.get(target);\n        if (hover) {\n            hover.show(true);\n        }\n    }\n    dispose() {\n        this._managedHovers.forEach(hover => hover.dispose());\n        super.dispose();\n    }\n};\nHoverService = __decorate([\n    __param(0, IInstantiationService),\n    __param(1, IContextMenuService),\n    __param(2, IKeybindingService),\n    __param(3, ILayoutService),\n    __param(4, IAccessibilityService)\n], HoverService);\nexport { HoverService };\nfunction getHoverOptionsIdentity(options) {\n    if (options === undefined) {\n        return undefined;\n    }\n    return options?.id ?? options;\n}\nclass HoverContextViewDelegate {\n    get anchorPosition() {\n        return this._hover.anchor;\n    }\n    constructor(_hover, _focus = false) {\n        this._hover = _hover;\n        this._focus = _focus;\n        // Render over all other context views\n        this.layer = 1;\n    }\n    render(container) {\n        this._hover.render(container);\n        if (this._focus) {\n            this._hover.focus();\n        }\n        return this._hover;\n    }\n    getAnchor() {\n        return {\n            x: this._hover.x,\n            y: this._hover.y\n        };\n    }\n    layout() {\n        this._hover.layout();\n    }\n}\nfunction getHoverTargetElement(element, stopElement) {\n    stopElement = stopElement ?? getWindow(element).document.body;\n    while (!element.hasAttribute('custom-hover') && element !== stopElement) {\n        element = element.parentElement;\n    }\n    return element;\n}\nregisterSingleton(IHoverService, HoverService, 1 /* InstantiationType.Delayed */);\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-workbench .workbench-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-workbench .workbench-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\nexport class ResourceEdit {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    static convert(edit) {\n        return edit.edits.map(edit => {\n            if (ResourceTextEdit.is(edit)) {\n                return ResourceTextEdit.lift(edit);\n            }\n            if (ResourceFileEdit.is(edit)) {\n                return ResourceFileEdit.lift(edit);\n            }\n            throw new Error('Unsupported edit');\n        });\n    }\n}\nexport class ResourceTextEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceTextEdit) {\n            return true;\n        }\n        return isObject(candidate)\n            && URI.isUri(candidate.resource)\n            && isObject(candidate.textEdit);\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceTextEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceTextEdit(edit.resource, edit.textEdit, edit.versionId, edit.metadata);\n        }\n    }\n    constructor(resource, textEdit, versionId = undefined, metadata) {\n        super(metadata);\n        this.resource = resource;\n        this.textEdit = textEdit;\n        this.versionId = versionId;\n    }\n}\nexport class ResourceFileEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceFileEdit) {\n            return true;\n        }\n        else {\n            return isObject(candidate)\n                && (Boolean(candidate.newResource) || Boolean(candidate.oldResource));\n        }\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceFileEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceFileEdit(edit.oldResource, edit.newResource, edit.options, edit.metadata);\n        }\n    }\n    constructor(oldResource, newResource, options = {}, metadata) {\n        super(metadata);\n        this.oldResource = oldResource;\n        this.newResource = newResource;\n        this.options = options;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { matchesScheme, matchesSomeScheme, Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n    }\n    async open(target, options) {\n        if (!matchesScheme(target, Schemas.command)) {\n            return false;\n        }\n        if (!options?.allowCommands) {\n            // silently ignore commands when command-links are disabled, also\n            // suppress other openers by returning TRUE\n            return true;\n        }\n        if (typeof target === 'string') {\n            target = URI.parse(target);\n        }\n        if (Array.isArray(options.allowCommands)) {\n            // Only allow specific commands\n            if (!options.allowCommands.includes(target.path)) {\n                // Suppress other openers by returning TRUE\n                return true;\n            }\n        }\n        // execute as command\n        let args = [];\n        try {\n            args = parse(decodeURIComponent(target.query));\n        }\n        catch {\n            // ignore and retry\n            try {\n                args = parse(target.query);\n            }\n            catch {\n                // ignore error\n            }\n        }\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n        await this._commandService.executeCommand(target.path, ...args);\n        return true;\n    }\n};\nCommandOpener = __decorate([\n    __param(0, ICommandService)\n], CommandOpener);\nlet EditorOpener = class EditorOpener {\n    constructor(_editorService) {\n        this._editorService = _editorService;\n    }\n    async open(target, options) {\n        if (typeof target === 'string') {\n            target = URI.parse(target);\n        }\n        const { selection, uri } = extractSelection(target);\n        target = uri;\n        if (target.scheme === Schemas.file) {\n            target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n        }\n        await this._editorService.openCodeEditor({\n            resource: target,\n            options: {\n                selection,\n                source: options?.fromUserGesture ? EditorOpenSource.USER : EditorOpenSource.API,\n                ...options?.editorOptions\n            }\n        }, this._editorService.getFocusedCodeEditor(), options?.openToSide);\n        return true;\n    }\n};\nEditorOpener = __decorate([\n    __param(0, ICodeEditorService)\n], EditorOpener);\nlet OpenerService = class OpenerService {\n    constructor(editorService, commandService) {\n        this._openers = new LinkedList();\n        this._validators = new LinkedList();\n        this._resolvers = new LinkedList();\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n        this._externalOpeners = new LinkedList();\n        // Default external opener is going through window.open()\n        this._defaultExternalOpener = {\n            openExternal: async (href) => {\n                // ensure to open HTTP/HTTPS links into new windows\n                // to not trigger a navigation. Any other link is\n                // safe to be set as HREF to prevent a blank window\n                // from opening.\n                if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n                    dom.windowOpenNoOpener(href);\n                }\n                else {\n                    mainWindow.location.href = href;\n                }\n                return true;\n            }\n        };\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\n        this._openers.push({\n            open: async (target, options) => {\n                if (options?.openExternal || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n                    // open externally\n                    await this._doOpenExternal(target, options);\n                    return true;\n                }\n                return false;\n            }\n        });\n        this._openers.push(new CommandOpener(commandService));\n        this._openers.push(new EditorOpener(editorService));\n    }\n    registerOpener(opener) {\n        const remove = this._openers.unshift(opener);\n        return { dispose: remove };\n    }\n    async open(target, options) {\n        // check with contributed validators\n        const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n        // validate against the original URI that this URI resolves to, if one exists\n        const validationTarget = this._resolvedUriTargets.get(targetURI) ?? target;\n        for (const validator of this._validators) {\n            if (!(await validator.shouldOpen(validationTarget, options))) {\n                return false;\n            }\n        }\n        // check with contributed openers\n        for (const opener of this._openers) {\n            const handled = await opener.open(target, options);\n            if (handled) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async resolveExternalUri(resource, options) {\n        for (const resolver of this._resolvers) {\n            try {\n                const result = await resolver.resolveExternalUri(resource, options);\n                if (result) {\n                    if (!this._resolvedUriTargets.has(result.resolved)) {\n                        this._resolvedUriTargets.set(result.resolved, resource);\n                    }\n                    return result;\n                }\n            }\n            catch {\n                // noop\n            }\n        }\n        throw new Error('Could not resolve external URI: ' + resource.toString());\n    }\n    async _doOpenExternal(resource, options) {\n        //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n        const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n        let externalUri;\n        try {\n            externalUri = (await this.resolveExternalUri(uri, options)).resolved;\n        }\n        catch {\n            externalUri = uri;\n        }\n        let href;\n        if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n            // open the url-string AS IS\n            href = resource;\n        }\n        else {\n            // open URI using the toString(noEncode)+encodeURI-trick\n            href = encodeURI(externalUri.toString(true));\n        }\n        if (options?.allowContributedOpeners) {\n            const preferredOpenerId = typeof options?.allowContributedOpeners === 'string' ? options?.allowContributedOpeners : undefined;\n            for (const opener of this._externalOpeners) {\n                const didOpen = await opener.openExternal(href, {\n                    sourceUri: uri,\n                    preferredOpenerId,\n                }, CancellationToken.None);\n                if (didOpen) {\n                    return true;\n                }\n            }\n        }\n        return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n    }\n    dispose() {\n        this._validators.clear();\n    }\n};\nOpenerService = __decorate([\n    __param(0, ICodeEditorService),\n    __param(1, ICommandService)\n], OpenerService);\nexport { OpenerService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { registerEditorContribution } from '../editorExtensions.js';\nlet MarkerDecorationsContribution = class MarkerDecorationsContribution {\n    static { this.ID = 'editor.contrib.markerDecorations'; }\n    constructor(_editor, _markerDecorationsService) {\n        // Doesn't do anything, just requires `IMarkerDecorationsService` to make sure it gets instantiated\n    }\n    dispose() {\n    }\n};\nMarkerDecorationsContribution = __decorate([\n    __param(1, IMarkerDecorationsService)\n], MarkerDecorationsContribution);\nexport { MarkerDecorationsContribution };\nregisterEditorContribution(MarkerDecorationsContribution.ID, MarkerDecorationsContribution, 0 /* EditorContributionInstantiation.Eager */); // eager because it instantiates IMarkerDecorationsService which is responsible for rendering squiggles\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { getWindow, scheduleAtNextAnimationFrame } from '../../../base/browser/dom.js';\nexport class ElementSizeObserver extends Disposable {\n    constructor(referenceDomElement, dimension) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._referenceDomElement = referenceDomElement;\n        this._width = -1;\n        this._height = -1;\n        this._resizeObserver = null;\n        this.measureReferenceDomElement(false, dimension);\n    }\n    dispose() {\n        this.stopObserving();\n        super.dispose();\n    }\n    getWidth() {\n        return this._width;\n    }\n    getHeight() {\n        return this._height;\n    }\n    startObserving() {\n        if (!this._resizeObserver && this._referenceDomElement) {\n            // We want to react to the resize observer only once per animation frame\n            // The first time the resize observer fires, we will react to it immediately.\n            // Otherwise we will postpone to the next animation frame.\n            // We'll use `observeContentRect` to store the content rect we received.\n            let observedDimenstion = null;\n            const observeNow = () => {\n                if (observedDimenstion) {\n                    this.observe({ width: observedDimenstion.width, height: observedDimenstion.height });\n                }\n                else {\n                    this.observe();\n                }\n            };\n            let shouldObserve = false;\n            let alreadyObservedThisAnimationFrame = false;\n            const update = () => {\n                if (shouldObserve && !alreadyObservedThisAnimationFrame) {\n                    try {\n                        shouldObserve = false;\n                        alreadyObservedThisAnimationFrame = true;\n                        observeNow();\n                    }\n                    finally {\n                        scheduleAtNextAnimationFrame(getWindow(this._referenceDomElement), () => {\n                            alreadyObservedThisAnimationFrame = false;\n                            update();\n                        });\n                    }\n                }\n            };\n            this._resizeObserver = new ResizeObserver((entries) => {\n                if (entries && entries[0] && entries[0].contentRect) {\n                    observedDimenstion = { width: entries[0].contentRect.width, height: entries[0].contentRect.height };\n                }\n                else {\n                    observedDimenstion = null;\n                }\n                shouldObserve = true;\n                update();\n            });\n            this._resizeObserver.observe(this._referenceDomElement);\n        }\n    }\n    stopObserving() {\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    observe(dimension) {\n        this.measureReferenceDomElement(true, dimension);\n    }\n    measureReferenceDomElement(emitEvent, dimension) {\n        let observedWidth = 0;\n        let observedHeight = 0;\n        if (dimension) {\n            observedWidth = dimension.width;\n            observedHeight = dimension.height;\n        }\n        else if (this._referenceDomElement) {\n            observedWidth = this._referenceDomElement.clientWidth;\n            observedHeight = this._referenceDomElement.clientHeight;\n        }\n        observedWidth = Math.max(5, observedWidth);\n        observedHeight = Math.max(5, observedHeight);\n        if (this._width !== observedWidth || this._height !== observedHeight) {\n            this._width = observedWidth;\n            this._height = observedHeight;\n            if (emitEvent) {\n                this._onDidChange.fire();\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorSettingMigration {\n    static { this.items = []; }\n    constructor(key, migrate) {\n        this.key = key;\n        this.migrate = migrate;\n    }\n    apply(options) {\n        const value = EditorSettingMigration._read(options, this.key);\n        const read = (key) => EditorSettingMigration._read(options, key);\n        const write = (key, value) => EditorSettingMigration._write(options, key, value);\n        this.migrate(value, read, write);\n    }\n    static _read(source, key) {\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            return this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n        }\n        return source[key];\n    }\n    static _write(target, key, value) {\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            target[firstSegment] = target[firstSegment] || {};\n            this._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n            return;\n        }\n        target[key] = value;\n    }\n}\nfunction registerEditorSettingMigration(key, migrate) {\n    EditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\nfunction registerSimpleEditorSettingMigration(key, values) {\n    registerEditorSettingMigration(key, (value, read, write) => {\n        if (typeof value !== 'undefined') {\n            for (const [oldValue, newValue] of values) {\n                if (value === oldValue) {\n                    write(key, newValue);\n                    return;\n                }\n            }\n        }\n    });\n}\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    EditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('occurrencesHighlight', [[true, 'singleFile'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('wordBasedSuggestions', [[true, 'matchingDocuments'], [false, 'off']]);\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n    if (value === false) {\n        write('autoClosingBrackets', 'never');\n        if (typeof read('autoClosingQuotes') === 'undefined') {\n            write('autoClosingQuotes', 'never');\n        }\n        if (typeof read('autoSurround') === 'undefined') {\n            write('autoSurround', 'never');\n        }\n    }\n});\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('renderIndentGuides', undefined);\n        if (typeof read('guides.indentation') === 'undefined') {\n            write('guides.indentation', !!value);\n        }\n    }\n});\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('highlightActiveIndentGuide', undefined);\n        if (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n            write('guides.highlightActiveIndentation', !!value);\n        }\n    }\n});\nconst suggestFilteredTypesMapping = {\n    method: 'showMethods',\n    function: 'showFunctions',\n    constructor: 'showConstructors',\n    deprecated: 'showDeprecated',\n    field: 'showFields',\n    variable: 'showVariables',\n    class: 'showClasses',\n    struct: 'showStructs',\n    interface: 'showInterfaces',\n    module: 'showModules',\n    property: 'showProperties',\n    event: 'showEvents',\n    operator: 'showOperators',\n    unit: 'showUnits',\n    value: 'showValues',\n    constant: 'showConstants',\n    enum: 'showEnums',\n    enumMember: 'showEnumMembers',\n    keyword: 'showKeywords',\n    text: 'showWords',\n    color: 'showColors',\n    file: 'showFiles',\n    reference: 'showReferences',\n    folder: 'showFolders',\n    typeParameter: 'showTypeParameters',\n    snippet: 'showSnippets',\n};\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        for (const entry of Object.entries(suggestFilteredTypesMapping)) {\n            const v = value[entry[0]];\n            if (v === false) {\n                if (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n                    write(`suggest.${entry[1]}`, false);\n                }\n            }\n        }\n        write('suggest.filteredTypes', undefined);\n    }\n});\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n    if (typeof input === 'boolean') {\n        const value = input ? 'on' : 'off';\n        const newValue = { comments: value, strings: value, other: value };\n        write('quickSuggestions', newValue);\n    }\n});\n// Sticky Scroll\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('experimental.stickyScroll.enabled', undefined);\n        if (typeof read('stickyScroll.enabled') === 'undefined') {\n            write('stickyScroll.enabled', value);\n        }\n    }\n});\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n    if (typeof value === 'number') {\n        write('experimental.stickyScroll.maxLineCount', undefined);\n        if (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n            write('stickyScroll.maxLineCount', value);\n        }\n    }\n});\n// Code Actions on Save\nregisterEditorSettingMigration('codeActionsOnSave', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        let toBeModified = false;\n        const newValue = {};\n        for (const entry of Object.entries(value)) {\n            if (typeof entry[1] === 'boolean') {\n                toBeModified = true;\n                newValue[entry[0]] = entry[1] ? 'explicit' : 'never';\n            }\n            else {\n                newValue[entry[0]] = entry[1];\n            }\n        }\n        if (toBeModified) {\n            write(`codeActionsOnSave`, newValue);\n        }\n    }\n});\n// Migrate Quick Fix Settings\nregisterEditorSettingMigration('codeActionWidget.includeNearbyQuickfixes', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('codeActionWidget.includeNearbyQuickfixes', undefined);\n        if (typeof read('codeActionWidget.includeNearbyQuickFixes') === 'undefined') {\n            write('codeActionWidget.includeNearbyQuickFixes', value);\n        }\n    }\n});\n// Migrate the lightbulb settings\nregisterEditorSettingMigration('lightbulb.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('lightbulb.enabled', value ? undefined : 'off');\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n    constructor() {\n        this._tabFocus = false;\n        this._onDidChangeTabFocus = new Emitter();\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n    }\n    getTabFocusMode() {\n        return this._tabFocus;\n    }\n    setTabFocusMode(tabFocusMode) {\n        this._tabFocus = tabFocusMode;\n        this._onDidChangeTabFocus.fire(this._tabFocus);\n    }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as browser from '../../../base/browser/browser.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { FontMeasurements } from './fontMeasurements.js';\nimport { migrateOptions } from './migrateOptions.js';\nimport { TabFocus } from './tabFocus.js';\nimport { ComputeOptionsMemory, ConfigurationChangedEvent, editorOptionsRegistry } from '../../common/config/editorOptions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { BareFontInfo } from '../../common/config/fontInfo.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { getWindow, getWindowById } from '../../../base/browser/dom.js';\nimport { PixelRatio } from '../../../base/browser/pixelRatio.js';\nlet EditorConfiguration = class EditorConfiguration extends Disposable {\n    constructor(isSimpleWidget, contextMenuId, options, container, _accessibilityService) {\n        super();\n        this._accessibilityService = _accessibilityService;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeFast = this._register(new Emitter());\n        this.onDidChangeFast = this._onDidChangeFast.event;\n        this._isDominatedByLongLines = false;\n        this._viewLineCount = 1;\n        this._lineNumbersDigitCount = 1;\n        this._reservedHeight = 0;\n        this._glyphMarginDecorationLaneCount = 1;\n        this._computeOptionsMemory = new ComputeOptionsMemory();\n        this.isSimpleWidget = isSimpleWidget;\n        this.contextMenuId = contextMenuId;\n        this._containerObserver = this._register(new ElementSizeObserver(container, options.dimension));\n        this._targetWindowId = getWindow(container).vscodeWindowId;\n        this._rawOptions = deepCloneAndMigrateOptions(options);\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this.options = this._computeOptions();\n        if (this.options.get(13 /* EditorOption.automaticLayout */)) {\n            this._containerObserver.startObserving();\n        }\n        this._register(EditorZoom.onDidChangeZoomLevel(() => this._recomputeOptions()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._recomputeOptions()));\n        this._register(this._containerObserver.onDidChange(() => this._recomputeOptions()));\n        this._register(FontMeasurements.onDidChange(() => this._recomputeOptions()));\n        this._register(PixelRatio.getInstance(getWindow(container)).onDidChange(() => this._recomputeOptions()));\n        this._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n    }\n    _recomputeOptions() {\n        const newOptions = this._computeOptions();\n        const changeEvent = EditorOptionsUtil.checkEquals(this.options, newOptions);\n        if (changeEvent === null) {\n            // nothing changed!\n            return;\n        }\n        this.options = newOptions;\n        this._onDidChangeFast.fire(changeEvent);\n        this._onDidChange.fire(changeEvent);\n    }\n    _computeOptions() {\n        const partialEnv = this._readEnvConfiguration();\n        const bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.pixelRatio, this.isSimpleWidget);\n        const fontInfo = this._readFontInfo(bareFontInfo);\n        const env = {\n            memory: this._computeOptionsMemory,\n            outerWidth: partialEnv.outerWidth,\n            outerHeight: partialEnv.outerHeight - this._reservedHeight,\n            fontInfo: fontInfo,\n            extraEditorClassName: partialEnv.extraEditorClassName,\n            isDominatedByLongLines: this._isDominatedByLongLines,\n            viewLineCount: this._viewLineCount,\n            lineNumbersDigitCount: this._lineNumbersDigitCount,\n            emptySelectionClipboard: partialEnv.emptySelectionClipboard,\n            pixelRatio: partialEnv.pixelRatio,\n            tabFocusMode: TabFocus.getTabFocusMode(),\n            accessibilitySupport: partialEnv.accessibilitySupport,\n            glyphMarginDecorationLaneCount: this._glyphMarginDecorationLaneCount\n        };\n        return EditorOptionsUtil.computeOptions(this._validatedOptions, env);\n    }\n    _readEnvConfiguration() {\n        return {\n            extraEditorClassName: getExtraEditorClassName(),\n            outerWidth: this._containerObserver.getWidth(),\n            outerHeight: this._containerObserver.getHeight(),\n            emptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n            pixelRatio: PixelRatio.getInstance(getWindowById(this._targetWindowId, true).window).value,\n            accessibilitySupport: (this._accessibilityService.isScreenReaderOptimized()\n                ? 2 /* AccessibilitySupport.Enabled */\n                : this._accessibilityService.getAccessibilitySupport())\n        };\n    }\n    _readFontInfo(bareFontInfo) {\n        return FontMeasurements.readFontInfo(getWindowById(this._targetWindowId, true).window, bareFontInfo);\n    }\n    getRawOptions() {\n        return this._rawOptions;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = deepCloneAndMigrateOptions(_newOptions);\n        const didChange = EditorOptionsUtil.applyUpdate(this._rawOptions, newOptions);\n        if (!didChange) {\n            return;\n        }\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this._recomputeOptions();\n    }\n    observeContainer(dimension) {\n        this._containerObserver.observe(dimension);\n    }\n    setIsDominatedByLongLines(isDominatedByLongLines) {\n        if (this._isDominatedByLongLines === isDominatedByLongLines) {\n            return;\n        }\n        this._isDominatedByLongLines = isDominatedByLongLines;\n        this._recomputeOptions();\n    }\n    setModelLineCount(modelLineCount) {\n        const lineNumbersDigitCount = digitCount(modelLineCount);\n        if (this._lineNumbersDigitCount === lineNumbersDigitCount) {\n            return;\n        }\n        this._lineNumbersDigitCount = lineNumbersDigitCount;\n        this._recomputeOptions();\n    }\n    setViewLineCount(viewLineCount) {\n        if (this._viewLineCount === viewLineCount) {\n            return;\n        }\n        this._viewLineCount = viewLineCount;\n        this._recomputeOptions();\n    }\n    setReservedHeight(reservedHeight) {\n        if (this._reservedHeight === reservedHeight) {\n            return;\n        }\n        this._reservedHeight = reservedHeight;\n        this._recomputeOptions();\n    }\n    setGlyphMarginDecorationLaneCount(decorationLaneCount) {\n        if (this._glyphMarginDecorationLaneCount === decorationLaneCount) {\n            return;\n        }\n        this._glyphMarginDecorationLaneCount = decorationLaneCount;\n        this._recomputeOptions();\n    }\n};\nEditorConfiguration = __decorate([\n    __param(4, IAccessibilityService)\n], EditorConfiguration);\nexport { EditorConfiguration };\nfunction digitCount(n) {\n    let r = 0;\n    while (n) {\n        n = Math.floor(n / 10);\n        r++;\n    }\n    return r ? r : 1;\n}\nfunction getExtraEditorClassName() {\n    let extra = '';\n    if (!browser.isSafari && !browser.isWebkitWebView) {\n        // Use user-select: none in all browsers except Safari and native macOS WebView\n        extra += 'no-user-select ';\n    }\n    if (browser.isSafari) {\n        // See https://github.com/microsoft/vscode/issues/108822\n        extra += 'no-minimap-shadow ';\n        extra += 'enable-user-select ';\n    }\n    if (platform.isMacintosh) {\n        extra += 'mac ';\n    }\n    return extra;\n}\nclass ValidatedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(option) {\n        return this._values[option];\n    }\n    get(id) {\n        return this._values[id];\n    }\n    _write(option, value) {\n        this._values[option] = value;\n    }\n}\nexport class ComputedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(id) {\n        if (id >= this._values.length) {\n            throw new Error('Cannot read uninitialized value');\n        }\n        return this._values[id];\n    }\n    get(id) {\n        return this._read(id);\n    }\n    _write(id, value) {\n        this._values[id] = value;\n    }\n}\nclass EditorOptionsUtil {\n    static validateOptions(options) {\n        const result = new ValidatedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            const value = (editorOption.name === '_never_' ? undefined : options[editorOption.name]);\n            result._write(editorOption.id, editorOption.validate(value));\n        }\n        return result;\n    }\n    static computeOptions(options, env) {\n        const result = new ComputedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n        }\n        return result;\n    }\n    static _deepEquals(a, b) {\n        if (typeof a !== 'object' || typeof b !== 'object' || !a || !b) {\n            return a === b;\n        }\n        if (Array.isArray(a) || Array.isArray(b)) {\n            return (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\n        }\n        if (Object.keys(a).length !== Object.keys(b).length) {\n            return false;\n        }\n        for (const key in a) {\n            if (!EditorOptionsUtil._deepEquals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static checkEquals(a, b) {\n        const result = [];\n        let somethingChanged = false;\n        for (const editorOption of editorOptionsRegistry) {\n            const changed = !EditorOptionsUtil._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n            result[editorOption.id] = changed;\n            if (changed) {\n                somethingChanged = true;\n            }\n        }\n        return (somethingChanged ? new ConfigurationChangedEvent(result) : null);\n    }\n    /**\n     * Returns true if something changed.\n     * Modifies `options`.\n    */\n    static applyUpdate(options, update) {\n        let changed = false;\n        for (const editorOption of editorOptionsRegistry) {\n            if (update.hasOwnProperty(editorOption.name)) {\n                const result = editorOption.applyUpdate(options[editorOption.name], update[editorOption.name]);\n                options[editorOption.name] = result.newValue;\n                changed = changed || result.didChange;\n            }\n        }\n        return changed;\n    }\n}\nfunction deepCloneAndMigrateOptions(_options) {\n    const options = objects.deepClone(_options);\n    migrateOptions(options);\n    return options;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates(targetWindow) {\n        return new ClientCoordinates(this.x - targetWindow.scrollX, this.y - targetWindow.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates(targetWindow) {\n        return new PageCoordinates(this.clientX + targetWindow.scrollX, this.clientY + targetWindow.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(dom.getWindow(editorViewDomNode), e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    static { this._idPool = 0; }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElementDisposables = new DisposableStore();\n        this._styleElement = dom.createStyleSheet(_containerElement, undefined, this._styleElementDisposables);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElementDisposables.dispose();\n        this._styleElement = undefined;\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== child.ownerDocument.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges, \n    /**\n     * Indicates if the requested range does not end in this line, but continues on the next line.\n     */\n    continuesOnNextLine) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n        this.continuesOnNextLine = continuesOnNextLine;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nexport class RangeUtil {\n    static _createRange() {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    }\n    static _detachRange(range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    }\n    static _readClientRects(startElement, startOffset, endElement, endOffset, endNode) {\n        const range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    }\n    static _mergeAdjacentRanges(ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return ranges;\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        const result = [];\n        let resultLen = 0;\n        let prev = ranges[0];\n        for (let i = 1, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            if (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n                prev.width = Math.max(prev.width, range.left + range.width - prev.left);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = range;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft, clientRectScale) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        const result = [];\n        for (let i = 0, len = clientRects.length; i < len; i++) {\n            const clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n        }\n        return this._mergeAdjacentRanges(result);\n    }\n    static readHorizontalRanges(domNode, startChildIndex, startOffset, endChildIndex, endOffset, context) {\n        // Panic check\n        const min = 0;\n        const max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        if (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n            // We must find the position at the beginning of a <span>\n            // To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n            const clientRects = domNode.children[startChildIndex].getClientRects();\n            context.markDidDomLayout();\n            return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n        }\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        let startElement = domNode.children[startChildIndex].firstChild;\n        let endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        const clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n        context.markDidDomLayout();\n        return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n        }\n        else {\n            // whitespace is rendered in a different layer\n            this.renderWhitespace = 'none';\n        }\n        this.renderControlCharacters = options.get(95 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(33 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(118 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(51 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    static { this.CLASS_NAME = 'view-line'; }\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType)) {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    if (this._options.renderWhitespace === 'selection') {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(lineHeight));\n        sb.appendString('px;\" class=\"');\n        sb.appendString(ViewLine.CLASS_NAME);\n        sb.appendString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop, lineHeight) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth(context) {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth(context);\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            return new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(false, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n    }\n}\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this._cachedWidth = -1;\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        const keyColumnCount = Math.floor(renderLineInput.lineContent.length / 300 /* Constants.MaxMonospaceDistance */);\n        if (keyColumnCount > 0) {\n            this._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n            for (let i = 0; i < keyColumnCount; i++) {\n                this._keyColumnPixelOffsetCache[i] = -1;\n            }\n        }\n        else {\n            this._keyColumnPixelOffsetCache = null;\n        }\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth(context) {\n        if (!this.domNode || this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n            return Math.round(this._charWidth * horizontalOffset);\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context?.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        return (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) || this._cachedWidth !== -1;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const expectedWidth = this.getWidth(null);\n            const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n            if (Math.abs(expectedWidth - actualWidth) >= 2) {\n                // more than 2px off\n                console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n                monospaceAssumptionsAreValid = false;\n            }\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n        const endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getColumnPixelOffset(lineNumber, column, context) {\n        if (column <= 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnOrdinal = Math.floor((column - 1) / 300 /* Constants.MaxMonospaceDistance */) - 1;\n        const keyColumn = (keyColumnOrdinal + 1) * 300 /* Constants.MaxMonospaceDistance */ + 1;\n        let keyColumnPixelOffset = -1;\n        if (this._keyColumnPixelOffsetCache) {\n            keyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n            if (keyColumnPixelOffset === -1) {\n                keyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n                this._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n            }\n        }\n        if (keyColumnPixelOffset === -1) {\n            // Could not read actual key column pixel offset\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n    }\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    _actualReadPixelOffset(lineNumber, column, context) {\n        if (!this.domNode) {\n            return -1;\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        return r[0].left;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth(context) {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context?.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth(context);\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                context.markDidDomLayout();\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth(context);\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth(context))];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nexport function getColumnOfNodeOffset(characterMapping, spanNode, offset) {\n    const spanNodeTextContentLength = spanNode.textContent.length;\n    let spanIndex = -1;\n    while (spanNode) {\n        spanNode = spanNode.previousSibling;\n        spanIndex++;\n    }\n    return characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations } from '../../common/cursor/cursorAtomicMoveOperations.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nclass UnknownHitTestResult {\n    constructor(hitTarget = null) {\n        this.hitTarget = hitTarget;\n        this.type = 0 /* HitTestResultType.Unknown */;\n    }\n}\nclass ContentHitTestResult {\n    get hitTarget() { return this.spanNode; }\n    constructor(position, spanNode, injectedText) {\n        this.position = position;\n        this.spanNode = spanNode;\n        this.injectedText = injectedText;\n        this.type = 1 /* HitTestResultType.Content */;\n    }\n}\nvar HitTestResult;\n(function (HitTestResult) {\n    function createFromDOMInfo(ctx, spanNode, offset) {\n        const position = ctx.getPositionFromDOMInfo(spanNode, offset);\n        if (position) {\n            return new ContentHitTestResult(position, spanNode, null);\n        }\n        return new UnknownHitTestResult(spanNode);\n    }\n    HitTestResult.createFromDOMInfo = createFromDOMInfo;\n})(HitTestResult || (HitTestResult = {}));\nexport class PointerHandlerLastRenderData {\n    constructor(lastViewCursorsRenderData, lastTextareaPosition) {\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n        this.lastTextareaPosition = lastTextareaPosition;\n    }\n}\nexport class MouseTarget {\n    static _deduceRage(position, range = null) {\n        if (!range && position) {\n            return new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n        return range ?? null;\n    }\n    static createUnknown(element, mouseColumn, position) {\n        return { type: 0 /* MouseTargetType.UNKNOWN */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createTextarea(element, mouseColumn) {\n        return { type: 1 /* MouseTargetType.TEXTAREA */, element, mouseColumn, position: null, range: null };\n    }\n    static createMargin(type, element, mouseColumn, position, range, detail) {\n        return { type, element, mouseColumn, position, range, detail };\n    }\n    static createViewZone(type, element, mouseColumn, position, detail) {\n        return { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentText(element, mouseColumn, position, range, detail) {\n        return { type: 6 /* MouseTargetType.CONTENT_TEXT */, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n    }\n    static createContentEmpty(element, mouseColumn, position, detail) {\n        return { type: 7 /* MouseTargetType.CONTENT_EMPTY */, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentWidget(element, mouseColumn, detail) {\n        return { type: 9 /* MouseTargetType.CONTENT_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createScrollbar(element, mouseColumn, position) {\n        return { type: 11 /* MouseTargetType.SCROLLBAR */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createOverlayWidget(element, mouseColumn, detail) {\n        return { type: 12 /* MouseTargetType.OVERLAY_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createOutsideEditor(mouseColumn, position, outsidePosition, outsideDistance) {\n        return { type: 13 /* MouseTargetType.OUTSIDE_EDITOR */, element: null, mouseColumn, position, range: this._deduceRage(position), outsidePosition, outsideDistance };\n    }\n    static _typeToString(type) {\n        if (type === 1 /* MouseTargetType.TEXTAREA */) {\n            return 'TEXTAREA';\n        }\n        if (type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */) {\n            return 'GUTTER_GLYPH_MARGIN';\n        }\n        if (type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */) {\n            return 'GUTTER_LINE_NUMBERS';\n        }\n        if (type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */) {\n            return 'GUTTER_LINE_DECORATIONS';\n        }\n        if (type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            return 'GUTTER_VIEW_ZONE';\n        }\n        if (type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return 'CONTENT_TEXT';\n        }\n        if (type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            return 'CONTENT_EMPTY';\n        }\n        if (type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            return 'CONTENT_VIEW_ZONE';\n        }\n        if (type === 9 /* MouseTargetType.CONTENT_WIDGET */) {\n            return 'CONTENT_WIDGET';\n        }\n        if (type === 10 /* MouseTargetType.OVERVIEW_RULER */) {\n            return 'OVERVIEW_RULER';\n        }\n        if (type === 11 /* MouseTargetType.SCROLLBAR */) {\n            return 'SCROLLBAR';\n        }\n        if (type === 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            return 'OVERLAY_WIDGET';\n        }\n        return 'UNKNOWN';\n    }\n    static toString(target) {\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify(target.detail);\n    }\n}\nclass ElementPath {\n    static isTextArea(path) {\n        return (path.length === 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 7 /* PartFingerprint.TextArea */);\n    }\n    static isChildOfViewLines(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 8 /* PartFingerprint.ViewLines */);\n    }\n    static isStrictChildOfViewLines(path) {\n        return (path.length > 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 8 /* PartFingerprint.ViewLines */);\n    }\n    static isChildOfScrollableElement(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 6 /* PartFingerprint.ScrollableElement */);\n    }\n    static isChildOfMinimap(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 9 /* PartFingerprint.Minimap */);\n    }\n    static isChildOfContentWidgets(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 1 /* PartFingerprint.ContentWidgets */);\n    }\n    static isChildOfOverflowGuard(path) {\n        return (path.length >= 1\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */);\n    }\n    static isChildOfOverflowingContentWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 2 /* PartFingerprint.OverflowingContentWidgets */);\n    }\n    static isChildOfOverlayWidgets(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 4 /* PartFingerprint.OverlayWidgets */);\n    }\n    static isChildOfOverflowingOverlayWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 5 /* PartFingerprint.OverflowingOverlayWidgets */);\n    }\n}\nexport class HitTestContext {\n    constructor(context, viewHelper, lastRenderData) {\n        this.viewModel = context.viewModel;\n        const options = context.configuration.options;\n        this.layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.viewDomNode = viewHelper.viewDomNode;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stickyTabStops = options.get(117 /* EditorOption.stickyTabStops */);\n        this.typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this.lastRenderData = lastRenderData;\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    getZoneAtCoord(mouseVerticalOffset) {\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n    }\n    static getZoneAtCoord(context, mouseVerticalOffset) {\n        // The target is either a view zone or the empty space after the last view-line\n        const viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n        if (viewZoneWhitespace) {\n            const viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n            const lineCount = context.viewModel.getLineCount();\n            let positionBefore = null;\n            let position;\n            let positionAfter = null;\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n                // There are more lines after this view zone\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n            }\n            if (viewZoneWhitespace.afterLineNumber > 0) {\n                // There are more lines above this view zone\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n            }\n            if (positionAfter === null) {\n                position = positionBefore;\n            }\n            else if (positionBefore === null) {\n                position = positionAfter;\n            }\n            else if (mouseVerticalOffset < viewZoneMiddle) {\n                position = positionBefore;\n            }\n            else {\n                position = positionAfter;\n            }\n            return {\n                viewZoneId: viewZoneWhitespace.id,\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\n                positionBefore: positionBefore,\n                positionAfter: positionAfter,\n                position: position\n            };\n        }\n        return null;\n    }\n    getFullLineRangeAtCoord(mouseVerticalOffset) {\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n            // Below the last line\n            const lineNumber = this._context.viewModel.getLineCount();\n            const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n            return {\n                range: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n                isAfterLines: true\n            };\n        }\n        const lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n        const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n        return {\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n            isAfterLines: false\n        };\n    }\n    getLineNumberAtVerticalOffset(mouseVerticalOffset) {\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n    }\n    isAfterLines(mouseVerticalOffset) {\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n    }\n    isInTopPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n    }\n    isInBottomPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    findAttribute(element, attr) {\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n    }\n    static _findAttribute(element, attr, stopAt) {\n        while (element && element !== element.ownerDocument.body) {\n            if (element.hasAttribute && element.hasAttribute(attr)) {\n                return element.getAttribute(attr);\n            }\n            if (element === stopAt) {\n                return null;\n            }\n            element = element.parentNode;\n        }\n        return null;\n    }\n    getLineWidth(lineNumber) {\n        return this._viewHelper.getLineWidth(lineNumber);\n    }\n    visibleRangeForPosition(lineNumber, column) {\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n    }\n    getPositionFromDOMInfo(spanNode, offset) {\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n    }\n    getCurrentScrollTop() {\n        return this._context.viewLayout.getCurrentScrollTop();\n    }\n    getCurrentScrollLeft() {\n        return this._context.viewLayout.getCurrentScrollLeft();\n    }\n}\nclass BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos) {\n        this.editorPos = editorPos;\n        this.pos = pos;\n        this.relativePos = relativePos;\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n        this.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n        this.isInContentArea = !this.isInMarginArea;\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n    }\n}\nclass HitTestRequest extends BareHitTestRequest {\n    get target() {\n        if (this._useHitTestTarget) {\n            return this.hitTestResult.value.hitTarget;\n        }\n        return this._eventTarget;\n    }\n    get targetPath() {\n        if (this._targetPathCacheElement !== this.target) {\n            this._targetPathCacheElement = this.target;\n            this._targetPathCacheValue = PartFingerprints.collect(this.target, this._ctx.viewDomNode);\n        }\n        return this._targetPathCacheValue;\n    }\n    constructor(ctx, editorPos, pos, relativePos, eventTarget) {\n        super(ctx, editorPos, pos, relativePos);\n        this.hitTestResult = new Lazy(() => MouseTargetFactory.doHitTest(this._ctx, this));\n        this._targetPathCacheElement = null;\n        this._targetPathCacheValue = new Uint8Array(0);\n        this._ctx = ctx;\n        this._eventTarget = eventTarget;\n        // If no event target is passed in, we will use the hit test target\n        const hasEventTarget = Boolean(this._eventTarget);\n        this._useHitTestTarget = !hasEventTarget;\n    }\n    toString() {\n        return `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? this.target.outerHTML : null}`;\n    }\n    get wouldBenefitFromHitTestTargetSwitch() {\n        return (!this._useHitTestTarget\n            && this.hitTestResult.value.hitTarget !== null\n            && this.target !== this.hitTestResult.value.hitTarget);\n    }\n    switchToHitTestTarget() {\n        this._useHitTestTarget = true;\n    }\n    _getMouseColumn(position = null) {\n        if (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n            // Most likely, the line contains foreign decorations...\n            return CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n        }\n        return this.mouseColumn;\n    }\n    fulfillUnknown(position = null) {\n        return MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillTextarea() {\n        return MouseTarget.createTextarea(this.target, this._getMouseColumn());\n    }\n    fulfillMargin(type, position, range, detail) {\n        return MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillViewZone(type, position, detail) {\n        return MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentText(position, range, detail) {\n        return MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillContentEmpty(position, detail) {\n        return MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentWidget(detail) {\n        return MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n    }\n    fulfillScrollbar(position) {\n        return MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillOverlayWidget(detail) {\n        return MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n    }\n}\nconst EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n    return {\n        isAfterLines: false,\n        horizontalDistanceToText: horizontalDistanceToText\n    };\n}\nexport class MouseTargetFactory {\n    constructor(context, viewHelper) {\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    mouseTargetIsWidget(e) {\n        const t = e.target;\n        const path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n            return true;\n        }\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(path) || ElementPath.isChildOfOverflowingOverlayWidgets(path)) {\n            return true;\n        }\n        return false;\n    }\n    createMouseTarget(lastRenderData, editorPos, pos, relativePos, target) {\n        const ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n        const request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n        try {\n            const r = MouseTargetFactory._createMouseTarget(ctx, request);\n            if (r.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n                // Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n                if (ctx.stickyTabStops && r.position !== null) {\n                    const position = MouseTargetFactory._snapToSoftTabBoundary(r.position, ctx.viewModel);\n                    const range = EditorRange.fromPositions(position, position).plusRange(r.range);\n                    return request.fulfillContentText(position, range, r.detail);\n                }\n            }\n            // console.log(MouseTarget.toString(r));\n            return r;\n        }\n        catch (err) {\n            // console.log(err);\n            return request.fulfillUnknown();\n        }\n    }\n    static _createMouseTarget(ctx, request) {\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n        if (request.target === null) {\n            // No target\n            return request.fulfillUnknown();\n        }\n        // we know for a fact that request.target is not null\n        const resolvedRequest = request;\n        let result = null;\n        if (!ElementPath.isChildOfOverflowGuard(request.targetPath) && !ElementPath.isChildOfOverflowingContentWidgets(request.targetPath) && !ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n            // We only render dom nodes inside the overflow guard or in the overflowing content widgets\n            result = result || request.fulfillUnknown();\n        }\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n        return (result || request.fulfillUnknown());\n    }\n    static _hitTestContentWidget(ctx, request) {\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillContentWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestOverlayWidget(ctx, request) {\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath) || ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillOverlayWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestViewCursor(ctx, request) {\n        if (request.target) {\n            // Check if we've hit a painted cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            for (const d of lastViewCursorsRenderData) {\n                if (request.target === d.domNode) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        if (request.isInContentArea) {\n            // Edge has a bug when hit-testing the exact position of a cursor,\n            // instead of returning the correct dom node, it returns the\n            // first or last rendered view line dom node, therefore help it out\n            // and first check if we are on top of a cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            const mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n            const mouseVerticalOffset = request.mouseVerticalOffset;\n            for (const d of lastViewCursorsRenderData) {\n                if (mouseContentHorizontalOffset < d.contentLeft) {\n                    // mouse position is to the left of the cursor\n                    continue;\n                }\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n                    // mouse position is to the right of the cursor\n                    continue;\n                }\n                const cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n                if (cursorVerticalOffset <= mouseVerticalOffset\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestViewZone(ctx, request) {\n        const viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n        if (viewZoneData) {\n            const mouseTargetType = (request.isInContentArea ? 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ : 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n            return request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n        }\n        return null;\n    }\n    static _hitTestTextArea(ctx, request) {\n        // Is it the textarea?\n        if (ElementPath.isTextArea(request.targetPath)) {\n            if (ctx.lastRenderData.lastTextareaPosition) {\n                return request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n            }\n            return request.fulfillTextarea();\n        }\n        return null;\n    }\n    static _hitTestMargin(ctx, request) {\n        if (request.isInMarginArea) {\n            const res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n            const pos = res.range.getStartPosition();\n            let offset = Math.abs(request.relativePos.x);\n            const detail = {\n                isAfterLines: res.isAfterLines,\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n                offsetX: offset\n            };\n            offset -= ctx.layoutInfo.glyphMarginLeft;\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n                // On the glyph margin\n                const modelCoordinate = ctx.viewModel.coordinatesConverter.convertViewPositionToModelPosition(res.range.getStartPosition());\n                const lanes = ctx.viewModel.glyphLanes.getLanesAtLine(modelCoordinate.lineNumber);\n                detail.glyphMarginLane = lanes[Math.floor(offset / ctx.lineHeight)];\n                return request.fulfillMargin(2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.glyphMarginWidth;\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n                // On the line numbers\n                return request.fulfillMargin(3 /* MouseTargetType.GUTTER_LINE_NUMBERS */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.lineNumbersWidth;\n            // On the line decorations\n            return request.fulfillMargin(4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\n        }\n        return null;\n    }\n    static _hitTestViewLines(ctx, request) {\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n            return null;\n        }\n        if (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n            return request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if it is below any lines and any view zones\n        if (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n            // This most likely indicates it happened after the last view-line\n            const lineCount = ctx.viewModel.getLineCount();\n            const maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n            return request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n        // See https://github.com/microsoft/vscode/issues/46942\n        if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n            const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            if (ctx.viewModel.getLineLength(lineNumber) === 0) {\n                const lineWidth = ctx.getLineWidth(lineNumber);\n                const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                return request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n            }\n            const lineWidth = ctx.getLineWidth(lineNumber);\n            if (request.mouseContentHorizontalOffset >= lineWidth) {\n                // TODO: This is wrong for RTL\n                const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                const pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n                return request.fulfillContentEmpty(pos, detail);\n            }\n        }\n        // Do the hit test (if not already done)\n        const hitTestResult = request.hitTestResult.value;\n        if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n        }\n        // We didn't hit content...\n        if (request.wouldBenefitFromHitTestTargetSwitch) {\n            // We actually hit something different... Give it one last change by trying again with this new target\n            request.switchToHitTestTarget();\n            return this._createMouseTarget(ctx, request);\n        }\n        // We have tried everything...\n        return request.fulfillUnknown();\n    }\n    static _hitTestMinimap(ctx, request) {\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    static _hitTestScrollbarSlider(ctx, request) {\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            if (request.target && request.target.nodeType === 1) {\n                const className = request.target.className;\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n                    const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                    const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n                    return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestScrollbar(ctx, request) {\n        // Is it the overview ruler?\n        // Is it a child of the scrollable element?\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    getMouseColumn(relativePos) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth);\n    }\n    static _getMouseColumn(mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n        if (mouseContentHorizontalOffset < 0) {\n            return 1;\n        }\n        const chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n        return (chars + 1);\n    }\n    static createMouseTargetFromHitTestPosition(ctx, request, spanNode, pos, injectedText) {\n        const lineNumber = pos.lineNumber;\n        const column = pos.column;\n        const lineWidth = ctx.getLineWidth(lineNumber);\n        if (request.mouseContentHorizontalOffset > lineWidth) {\n            const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n            return request.fulfillContentEmpty(pos, detail);\n        }\n        const visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n        if (!visibleRange) {\n            return request.fulfillUnknown(pos);\n        }\n        const columnHorizontalOffset = visibleRange.left;\n        if (Math.abs(request.mouseContentHorizontalOffset - columnHorizontalOffset) < 1) {\n            return request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n        }\n        const points = [];\n        points.push({ offset: visibleRange.left, column: column });\n        if (column > 1) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column - 1 });\n            }\n        }\n        const lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n        if (column < lineMaxColumn) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column + 1 });\n            }\n        }\n        points.sort((a, b) => a.offset - b.offset);\n        const mouseCoordinates = request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode));\n        const spanNodeClientRect = spanNode.getBoundingClientRect();\n        const mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n        let rng = null;\n        for (let i = 1; i < points.length; i++) {\n            const prev = points[i - 1];\n            const curr = points[i];\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n                rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n                // See https://github.com/microsoft/vscode/issues/152819\n                // Due to the use of zwj, the browser's hit test result is skewed towards the left\n                // Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n                const prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n                const nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n                pos = (prevDelta < nextDelta\n                    ? new Position(lineNumber, prev.column)\n                    : new Position(lineNumber, curr.column));\n                break;\n            }\n        }\n        return request.fulfillContentText(pos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n    }\n    /**\n     * Most probably WebKit browsers and Edge\n     */\n    static _doHitTestWithCaretRangeFromPoint(ctx, request) {\n        // In Chrome, especially on Linux it is possible to click between lines,\n        // so try to adjust the `hity` below so that it lands in the center of a line\n        const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n        const lineStartVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n        const lineEndVerticalOffset = lineStartVerticalOffset + ctx.lineHeight;\n        const isBelowLastLine = (lineNumber === ctx.viewModel.getLineCount()\n            && request.mouseVerticalOffset > lineEndVerticalOffset);\n        if (!isBelowLastLine) {\n            const lineCenteredVerticalOffset = Math.floor((lineStartVerticalOffset + lineEndVerticalOffset) / 2);\n            let adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n            if (adjustedPageY <= request.editorPos.y) {\n                adjustedPageY = request.editorPos.y + 1;\n            }\n            if (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n                adjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n            }\n            const adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n            const r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n            if (r.type === 1 /* HitTestResultType.Content */) {\n                return r;\n            }\n        }\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n    }\n    static _actualDoHitTestWithCaretRangeFromPoint(ctx, coords) {\n        const shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n        let range;\n        if (shadowRoot) {\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n            }\n            else {\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n            }\n        }\n        else {\n            range = ctx.viewDomNode.ownerDocument.caretRangeFromPoint(coords.clientX, coords.clientY);\n        }\n        if (!range || !range.startContainer) {\n            return new UnknownHitTestResult();\n        }\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n        const startContainer = range.startContainer;\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\n            // startContainer is expected to be the token text\n            const parent1 = startContainer.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, parent1, range.startOffset);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer.parentNode);\n            }\n        }\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n            // startContainer is expected to be the token span\n            const parent1 = startContainer.parentNode; // expected to be the view line container span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, startContainer, startContainer.textContent.length);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer);\n            }\n        }\n        return new UnknownHitTestResult();\n    }\n    /**\n     * Most probably Gecko\n     */\n    static _doHitTestWithCaretPositionFromPoint(ctx, coords) {\n        const hitResult = ctx.viewDomNode.ownerDocument.caretPositionFromPoint(coords.clientX, coords.clientY);\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n            // offsetNode is expected to be the token text\n            const parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode.parentNode, hitResult.offset);\n            }\n            else {\n                return new UnknownHitTestResult(hitResult.offsetNode.parentNode);\n            }\n        }\n        // For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n        // Some other times, it returns the `<span>` with the inline decoration\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n            const parent1 = hitResult.offsetNode.parentNode;\n            const parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? parent1.className : null;\n            const parent2 = parent1 ? parent1.parentNode : null;\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent1ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n                const tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n                if (tokenSpan) {\n                    return HitTestResult.createFromDOMInfo(ctx, tokenSpan, 0);\n                }\n            }\n            else if (parent2ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` with the inline decoration\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode, 0);\n            }\n        }\n        return new UnknownHitTestResult(hitResult.offsetNode);\n    }\n    static _snapToSoftTabBoundary(position, viewModel) {\n        const lineContent = viewModel.getLineContent(position.lineNumber);\n        const { tabSize } = viewModel.model.getOptions();\n        const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, 2 /* Direction.Nearest */);\n        if (newPosition !== -1) {\n            return new Position(position.lineNumber, newPosition + 1);\n        }\n        return position;\n    }\n    static doHitTest(ctx, request) {\n        let result = new UnknownHitTestResult();\n        if (typeof ctx.viewDomNode.ownerDocument.caretRangeFromPoint === 'function') {\n            result = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n        }\n        else if (ctx.viewDomNode.ownerDocument.caretPositionFromPoint) {\n            result = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n        }\n        if (result.type === 1 /* HitTestResultType.Content */) {\n            const injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n            const normalizedPosition = ctx.viewModel.normalizePosition(result.position, 2 /* PositionAffinity.None */);\n            if (injectedText || !normalizedPosition.equals(result.position)) {\n                result = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n            }\n        }\n        return result;\n    }\n}\nfunction shadowCaretRangeFromPoint(shadowRoot, x, y) {\n    const range = document.createRange();\n    // Get the element under the point\n    let el = shadowRoot.elementFromPoint(x, y);\n    if (el !== null) {\n        // Get the last child of the element until its firstChild is a text node\n        // This assumes that the pointer is on the right of the line, out of the tokens\n        // and that we want to get the offset of the last token of the line\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n            el = el.lastChild;\n        }\n        // Grab its rect\n        const rect = el.getBoundingClientRect();\n        // And its font (the computed shorthand font property might be empty, see #3217)\n        const elWindow = dom.getWindow(el);\n        const fontStyle = elWindow.getComputedStyle(el, null).getPropertyValue('font-style');\n        const fontVariant = elWindow.getComputedStyle(el, null).getPropertyValue('font-variant');\n        const fontWeight = elWindow.getComputedStyle(el, null).getPropertyValue('font-weight');\n        const fontSize = elWindow.getComputedStyle(el, null).getPropertyValue('font-size');\n        const lineHeight = elWindow.getComputedStyle(el, null).getPropertyValue('line-height');\n        const fontFamily = elWindow.getComputedStyle(el, null).getPropertyValue('font-family');\n        const font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n        // And also its txt content\n        const text = el.innerText;\n        // Position the pixel cursor at the left of the element\n        let pixelCursor = rect.left;\n        let offset = 0;\n        let step;\n        // If the point is on the right of the box put the cursor after the last character\n        if (x > rect.left + rect.width) {\n            offset = text.length;\n        }\n        else {\n            const charWidthReader = CharWidthReader.getInstance();\n            // Goes through all the characters of the innerText, and checks if the x of the point\n            // belongs to the character.\n            for (let i = 0; i < text.length + 1; i++) {\n                // The step is half the width of the character\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n                // Move to the center of the character\n                pixelCursor += step;\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\n                if (x < pixelCursor) {\n                    offset = i;\n                    break;\n                }\n                // Move between the current character and the next\n                pixelCursor += step;\n            }\n        }\n        // Creates a range with the text node of the element and set the offset found\n        range.setStart(el.firstChild, offset);\n        range.setEnd(el.firstChild, offset);\n    }\n    return range;\n}\nclass CharWidthReader {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!CharWidthReader._INSTANCE) {\n            CharWidthReader._INSTANCE = new CharWidthReader();\n        }\n        return CharWidthReader._INSTANCE;\n    }\n    constructor() {\n        this._cache = {};\n        this._canvas = document.createElement('canvas');\n    }\n    getCharWidth(char, font) {\n        const cacheKey = char + font;\n        if (this._cache[cacheKey]) {\n            return this._cache[cacheKey];\n        }\n        const context = this._canvas.getContext('2d');\n        context.font = font;\n        const metrics = context.measureText(char);\n        const width = metrics.width;\n        this._cache[cacheKey] = width;\n        return width;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor, PageCoordinates } from '../editorDom.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nexport class MouseHandler extends ViewEventHandler {\n    constructor(context, viewController, viewHelper) {\n        super();\n        this._mouseLeaveMonitor = null;\n        this._context = context;\n        this.viewController = viewController;\n        this.viewHelper = viewHelper;\n        this.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n        this._mouseDownOperation = this._register(new MouseDownOperation(this._context, this.viewController, this.viewHelper, this.mouseTargetFactory, (e, testEventTarget) => this._createMouseTarget(e, testEventTarget), (e) => this._getMouseColumn(e)));\n        this.lastMouseLeaveTime = -1;\n        this._height = this._context.configuration.options.get(146 /* EditorOption.layoutInfo */).height;\n        const mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n        this._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n        this._register(mouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n            this._onMouseMove(e);\n            // See https://github.com/microsoft/vscode/issues/138789\n            // When moving the mouse really quickly, the browser sometimes forgets to\n            // send us a `mouseleave` or `mouseout` event. We therefore install here\n            // a global `mousemove` listener to manually recover if the mouse goes outside\n            // the editor. As soon as the mouse leaves outside of the editor, we\n            // remove this listener\n            if (!this._mouseLeaveMonitor) {\n                this._mouseLeaveMonitor = dom.addDisposableListener(this.viewHelper.viewDomNode.ownerDocument, 'mousemove', (e) => {\n                    if (!this.viewHelper.viewDomNode.contains(e.target)) {\n                        // went outside the editor!\n                        this._onMouseLeave(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode));\n                    }\n                });\n            }\n        }));\n        this._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        // `pointerdown` events can't be used to determine if there's a double click, or triple click\n        // because their `e.detail` is always 0.\n        // We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n        // for `element.setPointerCapture`.\n        let capturePointerId = 0;\n        this._register(mouseEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => {\n            capturePointerId = pointerId;\n        }));\n        // The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n        // I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n        // the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n        // See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n        // To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, (e) => {\n            this._mouseDownOperation.onPointerUp();\n        }));\n        this._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e, capturePointerId)));\n        this._setupMouseWheelZoomListener();\n        this._context.addEventHandler(this);\n    }\n    _setupMouseWheelZoomListener() {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        let prevMouseWheelTime = 0;\n        let gestureStartZoomLevel = EditorZoom.getZoomLevel();\n        let gestureHasZoomModifiers = false;\n        let gestureAccumulatedDelta = 0;\n        const onMouseWheel = (browserEvent) => {\n            this.viewController.emitMouseWheel(browserEvent);\n            if (!this._context.configuration.options.get(76 /* EditorOption.mouseWheelZoom */)) {\n                return;\n            }\n            const e = new StandardWheelEvent(browserEvent);\n            classifier.acceptStandardWheelEvent(e);\n            if (classifier.isPhysicalMouseWheel()) {\n                if (hasMouseWheelZoomModifiers(browserEvent)) {\n                    const zoomLevel = EditorZoom.getZoomLevel();\n                    const delta = e.deltaY > 0 ? 1 : -1;\n                    EditorZoom.setZoomLevel(zoomLevel + delta);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n            else {\n                // we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n                // we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n                // we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n                if (Date.now() - prevMouseWheelTime > 50) {\n                    // reset if more than 50ms have passed\n                    gestureStartZoomLevel = EditorZoom.getZoomLevel();\n                    gestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n                    gestureAccumulatedDelta = 0;\n                }\n                prevMouseWheelTime = Date.now();\n                gestureAccumulatedDelta += e.deltaY;\n                if (gestureHasZoomModifiers) {\n                    EditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n        };\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\n        function hasMouseWheelZoomModifiers(browserEvent) {\n            return (platform.isMacintosh\n                // on macOS we support cmd + two fingers scroll (`metaKey` set)\n                // and also the two fingers pinch gesture (`ctrKey` set)\n                ? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n                : (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey));\n        }\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            // layout change\n            const height = this._context.configuration.options.get(146 /* EditorOption.layoutInfo */).height;\n            if (this._height !== height) {\n                this._height = height;\n                this._mouseDownOperation.onHeightChanged();\n            }\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._mouseDownOperation.onCursorStateChanged(e);\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    getTargetAtClientPoint(clientX, clientY) {\n        const clientPos = new ClientCoordinates(clientX, clientY);\n        const pos = clientPos.toPageCoordinates(dom.getWindow(this.viewHelper.viewDomNode));\n        const editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n        if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n            return null;\n        }\n        const relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n    }\n    _createMouseTarget(e, testEventTarget) {\n        let target = e.target;\n        if (!this.viewHelper.viewDomNode.contains(target)) {\n            const shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n            if (shadowRoot) {\n                target = shadowRoot.elementsFromPoint(e.posx, e.posy).find((el) => this.viewHelper.viewDomNode.contains(el));\n            }\n        }\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n    }\n    _getMouseColumn(e) {\n        return this.mouseTargetFactory.getMouseColumn(e.relativePos);\n    }\n    _onContextMenu(e, testEventTarget) {\n        this.viewController.emitContextMenu({\n            event: e,\n            target: this._createMouseTarget(e, testEventTarget)\n        });\n    }\n    _onMouseMove(e) {\n        const targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n        if (!targetIsWidget) {\n            e.preventDefault();\n        }\n        if (this._mouseDownOperation.isActive()) {\n            // In selection/drag operation\n            return;\n        }\n        const actualMouseMoveTime = e.timestamp;\n        if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n            // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n            return;\n        }\n        this.viewController.emitMouseMove({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseLeave(e) {\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        this.lastMouseLeaveTime = (new Date()).getTime();\n        this.viewController.emitMouseLeave({\n            event: e,\n            target: null\n        });\n    }\n    _onMouseUp(e) {\n        this.viewController.emitMouseUp({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseDown(e, pointerId) {\n        const t = this._createMouseTarget(e, true);\n        const targetIsContent = (t.type === 6 /* MouseTargetType.CONTENT_TEXT */ || t.type === 7 /* MouseTargetType.CONTENT_EMPTY */);\n        const targetIsGutter = (t.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ || t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ || t.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */);\n        const targetIsLineNumbers = (t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        const selectOnLineNumbers = this._context.configuration.options.get(110 /* EditorOption.selectOnLineNumbers */);\n        const targetIsViewZone = (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n        const targetIsWidget = (t.type === 9 /* MouseTargetType.CONTENT_WIDGET */);\n        let shouldHandle = e.leftButton || e.middleButton;\n        if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n            shouldHandle = false;\n        }\n        const focus = () => {\n            e.preventDefault();\n            this.viewHelper.focusTextArea();\n        };\n        if (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n            focus();\n            this._mouseDownOperation.start(t.type, e, pointerId);\n        }\n        else if (targetIsGutter) {\n            // Do not steal focus\n            e.preventDefault();\n        }\n        else if (targetIsViewZone) {\n            const viewZoneData = t.detail;\n            if (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n                focus();\n                this._mouseDownOperation.start(t.type, e, pointerId);\n                e.preventDefault();\n            }\n        }\n        else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n            focus();\n            e.preventDefault();\n        }\n        this.viewController.emitMouseDown({\n            event: e,\n            target: t\n        });\n    }\n}\nclass MouseDownOperation extends Disposable {\n    constructor(_context, _viewController, _viewHelper, _mouseTargetFactory, createMouseTarget, getMouseColumn) {\n        super();\n        this._context = _context;\n        this._viewController = _viewController;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._createMouseTarget = createMouseTarget;\n        this._getMouseColumn = getMouseColumn;\n        this._mouseMoveMonitor = this._register(new GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode));\n        this._topBottomDragScrolling = this._register(new TopBottomDragScrolling(this._context, this._viewHelper, this._mouseTargetFactory, (position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)));\n        this._mouseState = new MouseDownState();\n        this._currentSelection = new Selection(1, 1, 1, 1);\n        this._isActive = false;\n        this._lastMouseEvent = null;\n    }\n    dispose() {\n        super.dispose();\n    }\n    isActive() {\n        return this._isActive;\n    }\n    _onMouseDownThenMove(e) {\n        this._lastMouseEvent = e;\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, false);\n        if (!position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        if (this._mouseState.isDragAndDrop) {\n            this._viewController.emitMouseDrag({\n                event: e,\n                target: position\n            });\n        }\n        else {\n            if (position.type === 13 /* MouseTargetType.OUTSIDE_EDITOR */ && (position.outsidePosition === 'above' || position.outsidePosition === 'below')) {\n                this._topBottomDragScrolling.start(position, e);\n            }\n            else {\n                this._topBottomDragScrolling.stop();\n                this._dispatchMouse(position, true, 1 /* NavigationCommandRevealType.Minimal */);\n            }\n        }\n    }\n    start(targetType, e, pointerId) {\n        this._lastMouseEvent = e;\n        this._mouseState.setStartedOnLineNumbers(targetType === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        this._mouseState.setStartButtons(e);\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, true);\n        if (!position || !position.position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        this._mouseState.trySetCount(e.detail, position.position);\n        // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n        e.detail = this._mouseState.count;\n        const options = this._context.configuration.options;\n        if (!options.get(92 /* EditorOption.readOnly */)\n            && options.get(35 /* EditorOption.dragAndDrop */)\n            && !options.get(22 /* EditorOption.columnSelection */)\n            && !this._mouseState.altKey // we don't support multiple mouse\n            && e.detail < 2 // only single click on a selection can work\n            && !this._isActive // the mouse is not down yet\n            && !this._currentSelection.isEmpty() // we don't drag single cursor\n            && (position.type === 6 /* MouseTargetType.CONTENT_TEXT */) // single click on text\n            && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n        ) {\n            this._mouseState.isDragAndDrop = true;\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), (browserEvent) => {\n                const position = this._findMousePosition(this._lastMouseEvent, false);\n                if (dom.isKeyboardEvent(browserEvent)) {\n                    // cancel\n                    this._viewController.emitMouseDropCanceled();\n                }\n                else {\n                    this._viewController.emitMouseDrop({\n                        event: this._lastMouseEvent,\n                        target: (position ? this._createMouseTarget(this._lastMouseEvent, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n                    });\n                }\n                this._stop();\n            });\n            return;\n        }\n        this._mouseState.isDragAndDrop = false;\n        this._dispatchMouse(position, e.shiftKey, 1 /* NavigationCommandRevealType.Minimal */);\n        if (!this._isActive) {\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), () => this._stop());\n        }\n    }\n    _stop() {\n        this._isActive = false;\n        this._topBottomDragScrolling.stop();\n    }\n    onHeightChanged() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onPointerUp() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onCursorStateChanged(e) {\n        this._currentSelection = e.selections[0];\n    }\n    _getPositionOutsideEditor(e) {\n        const editorContent = e.editorPos;\n        const model = this._context.viewModel;\n        const viewLayout = this._context.viewLayout;\n        const mouseColumn = this._getMouseColumn(e);\n        if (e.posy < editorContent.y) {\n            const outsideDistance = editorContent.y - e.posy;\n            const verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n                }\n            }\n            const aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n        }\n        if (e.posy > editorContent.y + editorContent.height) {\n            const outsideDistance = e.posy - editorContent.y - editorContent.height;\n            const verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'below', outsideDistance);\n                }\n            }\n            const belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', outsideDistance);\n        }\n        const possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n        if (e.posx < editorContent.x) {\n            const outsideDistance = editorContent.x - e.posx;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', outsideDistance);\n        }\n        if (e.posx > editorContent.x + editorContent.width) {\n            const outsideDistance = e.posx - editorContent.x - editorContent.width;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', outsideDistance);\n        }\n        return null;\n    }\n    _findMousePosition(e, testEventTarget) {\n        const positionOutsideEditor = this._getPositionOutsideEditor(e);\n        if (positionOutsideEditor) {\n            return positionOutsideEditor;\n        }\n        const t = this._createMouseTarget(e, testEventTarget);\n        const hintedPosition = t.position;\n        if (!hintedPosition) {\n            return null;\n        }\n        if (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            const newPosition = this._helpPositionJumpOverViewZone(t.detail);\n            if (newPosition) {\n                return MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n            }\n        }\n        return t;\n    }\n    _helpPositionJumpOverViewZone(viewZoneData) {\n        // Force position on view zones to go above or below depending on where selection started from\n        const selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n        const positionBefore = viewZoneData.positionBefore;\n        const positionAfter = viewZoneData.positionAfter;\n        if (positionBefore && positionAfter) {\n            if (positionBefore.isBefore(selectionStart)) {\n                return positionBefore;\n            }\n            else {\n                return positionAfter;\n            }\n        }\n        return null;\n    }\n    _dispatchMouse(position, inSelectionMode, revealType) {\n        if (!position.position) {\n            return;\n        }\n        this._viewController.dispatchMouse({\n            position: position.position,\n            mouseColumn: position.mouseColumn,\n            startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n            revealType,\n            inSelectionMode: inSelectionMode,\n            mouseDownCount: this._mouseState.count,\n            altKey: this._mouseState.altKey,\n            ctrlKey: this._mouseState.ctrlKey,\n            metaKey: this._mouseState.metaKey,\n            shiftKey: this._mouseState.shiftKey,\n            leftButton: this._mouseState.leftButton,\n            middleButton: this._mouseState.middleButton,\n            onInjectedText: position.type === 6 /* MouseTargetType.CONTENT_TEXT */ && position.detail.injectedText !== null\n        });\n    }\n}\nclass TopBottomDragScrolling extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._operation = null;\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n    start(position, mouseEvent) {\n        if (this._operation) {\n            this._operation.setPosition(position, mouseEvent);\n        }\n        else {\n            this._operation = new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n        }\n    }\n    stop() {\n        if (this._operation) {\n            this._operation.dispose();\n            this._operation = null;\n        }\n    }\n}\nclass TopBottomDragScrollingOperation extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse, position, mouseEvent) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n        this._lastTime = Date.now();\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseEvent.browserEvent), () => this._execute());\n    }\n    dispose() {\n        this._animationFrameDisposable.dispose();\n        super.dispose();\n    }\n    setPosition(position, mouseEvent) {\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n    }\n    /**\n     * update internal state and return elapsed ms since last time\n     */\n    _tick() {\n        const now = Date.now();\n        const elapsed = now - this._lastTime;\n        this._lastTime = now;\n        return elapsed;\n    }\n    /**\n     * get the number of lines per second to auto-scroll\n     */\n    _getScrollSpeed() {\n        const lineHeight = this._context.configuration.options.get(67 /* EditorOption.lineHeight */);\n        const viewportInLines = this._context.configuration.options.get(146 /* EditorOption.layoutInfo */).height / lineHeight;\n        const outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n        if (outsideDistanceInLines <= 1.5) {\n            return Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n        }\n        if (outsideDistanceInLines <= 3) {\n            return Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n        }\n        return Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n    }\n    _execute() {\n        const lineHeight = this._context.configuration.options.get(67 /* EditorOption.lineHeight */);\n        const scrollSpeedInLines = this._getScrollSpeed();\n        const elapsed = this._tick();\n        const scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n        const scrollValue = (this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels);\n        this._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n        this._viewHelper.renderNow();\n        const viewportData = this._context.viewLayout.getLinesViewportData();\n        const edgeLineNumber = (this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber);\n        // First, try to find a position that matches the horizontal position of the mouse\n        let mouseTarget;\n        {\n            const editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n            const horizontalScrollbarHeight = this._context.configuration.options.get(146 /* EditorOption.layoutInfo */).horizontalScrollbarHeight;\n            const pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n            const relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n            mouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n        }\n        if (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n            if (this._position.outsidePosition === 'above') {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n            }\n            else {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n            }\n        }\n        this._dispatchMouse(mouseTarget, true, 2 /* NavigationCommandRevealType.None */);\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), () => this._execute());\n    }\n}\nclass MouseDownState {\n    static { this.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; } // ms\n    get altKey() { return this._altKey; }\n    get ctrlKey() { return this._ctrlKey; }\n    get metaKey() { return this._metaKey; }\n    get shiftKey() { return this._shiftKey; }\n    get leftButton() { return this._leftButton; }\n    get middleButton() { return this._middleButton; }\n    get startedOnLineNumbers() { return this._startedOnLineNumbers; }\n    constructor() {\n        this._altKey = false;\n        this._ctrlKey = false;\n        this._metaKey = false;\n        this._shiftKey = false;\n        this._leftButton = false;\n        this._middleButton = false;\n        this._startedOnLineNumbers = false;\n        this._lastMouseDownPosition = null;\n        this._lastMouseDownPositionEqualCount = 0;\n        this._lastMouseDownCount = 0;\n        this._lastSetMouseDownCountTime = 0;\n        this.isDragAndDrop = false;\n    }\n    get count() {\n        return this._lastMouseDownCount;\n    }\n    setModifiers(source) {\n        this._altKey = source.altKey;\n        this._ctrlKey = source.ctrlKey;\n        this._metaKey = source.metaKey;\n        this._shiftKey = source.shiftKey;\n    }\n    setStartButtons(source) {\n        this._leftButton = source.leftButton;\n        this._middleButton = source.middleButton;\n    }\n    setStartedOnLineNumbers(startedOnLineNumbers) {\n        this._startedOnLineNumbers = startedOnLineNumbers;\n    }\n    trySetCount(setMouseDownCount, newMouseDownPosition) {\n        // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        const currentTime = (new Date()).getTime();\n        if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n            setMouseDownCount = 1;\n        }\n        this._lastSetMouseDownCountTime = currentTime;\n        // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        if (setMouseDownCount > this._lastMouseDownCount + 1) {\n            setMouseDownCount = this._lastMouseDownCount + 1;\n        }\n        // c. Invalidate multiple clicking if the logical position is different\n        if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n            this._lastMouseDownPositionEqualCount++;\n        }\n        else {\n            this._lastMouseDownPositionEqualCount = 1;\n        }\n        this._lastMouseDownPosition = newMouseDownPosition;\n        // Finally set the lastMouseDownCount\n        this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../../common/core/range.js';\nexport const _debugComposition = false;\nexport class TextAreaState {\n    static { this.EMPTY = new TextAreaState('', 0, 0, null, undefined); }\n    constructor(value, \n    /** the offset where selection starts inside `value` */\n    selectionStart, \n    /** the offset where selection ends inside `value` */\n    selectionEnd, \n    /** the editor range in the view coordinate system that matches the selection inside `value` */\n    selection, \n    /** the visible line count (wrapped, not necessarily matching \\n characters) for the text in `value` before `selectionStart` */\n    newlineCountBeforeSelection) {\n        this.value = value;\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n        this.selection = selection;\n        this.newlineCountBeforeSelection = newlineCountBeforeSelection;\n    }\n    toString() {\n        return `[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`;\n    }\n    static readFromTextArea(textArea, previousState) {\n        const value = textArea.getValue();\n        const selectionStart = textArea.getSelectionStart();\n        const selectionEnd = textArea.getSelectionEnd();\n        let newlineCountBeforeSelection = undefined;\n        if (previousState) {\n            const valueBeforeSelectionStart = value.substring(0, selectionStart);\n            const previousValueBeforeSelectionStart = previousState.value.substring(0, previousState.selectionStart);\n            if (valueBeforeSelectionStart === previousValueBeforeSelectionStart) {\n                newlineCountBeforeSelection = previousState.newlineCountBeforeSelection;\n            }\n        }\n        return new TextAreaState(value, selectionStart, selectionEnd, null, newlineCountBeforeSelection);\n    }\n    collapseSelection() {\n        if (this.selectionStart === this.value.length) {\n            return this;\n        }\n        return new TextAreaState(this.value, this.value.length, this.value.length, null, undefined);\n    }\n    writeToTextArea(reason, textArea, select) {\n        if (_debugComposition) {\n            console.log(`writeToTextArea ${reason}: ${this.toString()}`);\n        }\n        textArea.setValue(reason, this.value);\n        if (select) {\n            textArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n        }\n    }\n    deduceEditorPosition(offset) {\n        if (offset <= this.selectionStart) {\n            const str = this.value.substring(offset, this.selectionStart);\n            return this._finishDeduceEditorPosition(this.selection?.getStartPosition() ?? null, str, -1);\n        }\n        if (offset >= this.selectionEnd) {\n            const str = this.value.substring(this.selectionEnd, offset);\n            return this._finishDeduceEditorPosition(this.selection?.getEndPosition() ?? null, str, 1);\n        }\n        const str1 = this.value.substring(this.selectionStart, offset);\n        if (str1.indexOf(String.fromCharCode(8230)) === -1) {\n            return this._finishDeduceEditorPosition(this.selection?.getStartPosition() ?? null, str1, 1);\n        }\n        const str2 = this.value.substring(offset, this.selectionEnd);\n        return this._finishDeduceEditorPosition(this.selection?.getEndPosition() ?? null, str2, -1);\n    }\n    _finishDeduceEditorPosition(anchor, deltaText, signum) {\n        let lineFeedCnt = 0;\n        let lastLineFeedIndex = -1;\n        while ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n            lineFeedCnt++;\n        }\n        return [anchor, signum * deltaText.length, lineFeedCnt];\n    }\n    static deduceInput(previousState, currentState, couldBeEmojiInput) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionStart, currentState.selectionStart);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd, currentState.value.length - currentState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        if (currentSelectionStart === currentSelectionEnd) {\n            // no current selection\n            const replacePreviousCharacters = (previousState.selectionStart - prefixLength);\n            if (_debugComposition) {\n                console.log(`REMOVE PREVIOUS: ${replacePreviousCharacters} chars`);\n            }\n            return {\n                text: currentValue,\n                replacePrevCharCnt: replacePreviousCharacters,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        // there is a current selection => composition case\n        const replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n        return {\n            text: currentValue,\n            replacePrevCharCnt: replacePreviousCharacters,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n    }\n    static deduceAndroidCompositionInput(previousState, currentState) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceAndroidCompositionInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        if (previousState.value === currentState.value) {\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: currentState.selectionEnd - previousState.selectionEnd\n            };\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        return {\n            text: currentValue,\n            replacePrevCharCnt: previousSelectionEnd,\n            replaceNextCharCnt: previousValue.length - previousSelectionEnd,\n            positionDelta: currentSelectionEnd - currentValue.length\n        };\n    }\n}\nexport class PagedScreenReaderStrategy {\n    static _getPageOfLine(lineNumber, linesPerPage) {\n        return Math.floor((lineNumber - 1) / linesPerPage);\n    }\n    static _getRangeForPage(page, linesPerPage) {\n        const offset = page * linesPerPage;\n        const startLineNumber = offset + 1;\n        const endLineNumber = offset + linesPerPage;\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n    }\n    static fromEditorSelection(model, selection, linesPerPage, trimLongText) {\n        // Chromium handles very poorly text even of a few thousand chars\n        // Cut text to avoid stalling the entire UI\n        const LIMIT_CHARS = 500;\n        const selectionStartPage = PagedScreenReaderStrategy._getPageOfLine(selection.startLineNumber, linesPerPage);\n        const selectionStartPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionStartPage, linesPerPage);\n        const selectionEndPage = PagedScreenReaderStrategy._getPageOfLine(selection.endLineNumber, linesPerPage);\n        const selectionEndPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionEndPage, linesPerPage);\n        let pretextRange = selectionStartPageRange.intersectRanges(new Range(1, 1, selection.startLineNumber, selection.startColumn));\n        if (trimLongText && model.getValueLengthInRange(pretextRange, 1 /* EndOfLinePreference.LF */) > LIMIT_CHARS) {\n            const pretextStart = model.modifyPosition(pretextRange.getEndPosition(), -LIMIT_CHARS);\n            pretextRange = Range.fromPositions(pretextStart, pretextRange.getEndPosition());\n        }\n        const pretext = model.getValueInRange(pretextRange, 1 /* EndOfLinePreference.LF */);\n        const lastLine = model.getLineCount();\n        const lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n        let posttextRange = selectionEndPageRange.intersectRanges(new Range(selection.endLineNumber, selection.endColumn, lastLine, lastLineMaxColumn));\n        if (trimLongText && model.getValueLengthInRange(posttextRange, 1 /* EndOfLinePreference.LF */) > LIMIT_CHARS) {\n            const posttextEnd = model.modifyPosition(posttextRange.getStartPosition(), LIMIT_CHARS);\n            posttextRange = Range.fromPositions(posttextRange.getStartPosition(), posttextEnd);\n        }\n        const posttext = model.getValueInRange(posttextRange, 1 /* EndOfLinePreference.LF */);\n        let text;\n        if (selectionStartPage === selectionEndPage || selectionStartPage + 1 === selectionEndPage) {\n            // take full selection\n            text = model.getValueInRange(selection, 1 /* EndOfLinePreference.LF */);\n        }\n        else {\n            const selectionRange1 = selectionStartPageRange.intersectRanges(selection);\n            const selectionRange2 = selectionEndPageRange.intersectRanges(selection);\n            text = (model.getValueInRange(selectionRange1, 1 /* EndOfLinePreference.LF */)\n                + String.fromCharCode(8230)\n                + model.getValueInRange(selectionRange2, 1 /* EndOfLinePreference.LF */));\n        }\n        if (trimLongText && text.length > 2 * LIMIT_CHARS) {\n            text = text.substring(0, LIMIT_CHARS) + String.fromCharCode(8230) + text.substring(text.length - LIMIT_CHARS, text.length);\n        }\n        return new TextAreaState(pretext + text + posttext, pretext.length, pretext.length + text.length, selection, pretextRange.endLineNumber - pretextRange.startLineNumber);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as browser from '../../../base/browser/browser.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { inputLatency } from '../../../base/browser/performance.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TextAreaState, _debugComposition } from './textAreaState.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nexport var TextAreaSyntethicEvents;\n(function (TextAreaSyntethicEvents) {\n    TextAreaSyntethicEvents.Tap = '-monaco-textarea-synthetic-tap';\n})(TextAreaSyntethicEvents || (TextAreaSyntethicEvents = {}));\nexport const CopyOptions = {\n    forceCopyWithSyntaxHighlighting: false\n};\n/**\n * Every time we write to the clipboard, we record a bit of extra metadata here.\n * Every time we read from the cipboard, if the text matches our last written text,\n * we can fetch the previous metadata.\n */\nexport class InMemoryClipboardMetadataManager {\n    static { this.INSTANCE = new InMemoryClipboardMetadataManager(); }\n    constructor() {\n        this._lastState = null;\n    }\n    set(lastCopiedValue, data) {\n        this._lastState = { lastCopiedValue, data };\n    }\n    get(pastedText) {\n        if (this._lastState && this._lastState.lastCopiedValue === pastedText) {\n            // match!\n            return this._lastState.data;\n        }\n        this._lastState = null;\n        return null;\n    }\n}\nclass CompositionContext {\n    constructor() {\n        this._lastTypeTextLength = 0;\n    }\n    handleCompositionUpdate(text) {\n        text = text || '';\n        const typeInput = {\n            text: text,\n            replacePrevCharCnt: this._lastTypeTextLength,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n        this._lastTypeTextLength = text.length;\n        return typeInput;\n    }\n}\n/**\n * Writes screen reader content to the textarea and is able to analyze its input events to generate:\n *  - onCut\n *  - onPaste\n *  - onType\n *\n * Composition events are generated for presentation purposes (composition input is reflected in onType).\n */\nlet TextAreaInput = class TextAreaInput extends Disposable {\n    get textAreaState() {\n        return this._textAreaState;\n    }\n    constructor(_host, _textArea, _OS, _browser, _accessibilityService, _logService) {\n        super();\n        this._host = _host;\n        this._textArea = _textArea;\n        this._OS = _OS;\n        this._browser = _browser;\n        this._accessibilityService = _accessibilityService;\n        this._logService = _logService;\n        this._onFocus = this._register(new Emitter());\n        this.onFocus = this._onFocus.event;\n        this._onBlur = this._register(new Emitter());\n        this.onBlur = this._onBlur.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onKeyUp = this._register(new Emitter());\n        this.onKeyUp = this._onKeyUp.event;\n        this._onCut = this._register(new Emitter());\n        this.onCut = this._onCut.event;\n        this._onPaste = this._register(new Emitter());\n        this.onPaste = this._onPaste.event;\n        this._onType = this._register(new Emitter());\n        this.onType = this._onType.event;\n        this._onCompositionStart = this._register(new Emitter());\n        this.onCompositionStart = this._onCompositionStart.event;\n        this._onCompositionUpdate = this._register(new Emitter());\n        this.onCompositionUpdate = this._onCompositionUpdate.event;\n        this._onCompositionEnd = this._register(new Emitter());\n        this.onCompositionEnd = this._onCompositionEnd.event;\n        this._onSelectionChangeRequest = this._register(new Emitter());\n        this.onSelectionChangeRequest = this._onSelectionChangeRequest.event;\n        this._asyncFocusGainWriteScreenReaderContent = this._register(new MutableDisposable());\n        this._asyncTriggerCut = this._register(new RunOnceScheduler(() => this._onCut.fire(), 0));\n        this._textAreaState = TextAreaState.EMPTY;\n        this._selectionChangeListener = null;\n        if (this._accessibilityService.isScreenReaderOptimized()) {\n            this.writeNativeTextAreaContent('ctor');\n        }\n        this._register(Event.runAndSubscribe(this._accessibilityService.onDidChangeScreenReaderOptimized, () => {\n            if (this._accessibilityService.isScreenReaderOptimized() && !this._asyncFocusGainWriteScreenReaderContent.value) {\n                this._asyncFocusGainWriteScreenReaderContent.value = this._register(new RunOnceScheduler(() => this.writeNativeTextAreaContent('asyncFocusGain'), 0));\n            }\n            else {\n                this._asyncFocusGainWriteScreenReaderContent.clear();\n            }\n        }));\n        this._hasFocus = false;\n        this._currentComposition = null;\n        let lastKeyDown = null;\n        this._register(this._textArea.onKeyDown((_e) => {\n            const e = new StandardKeyboardEvent(_e);\n            if (e.keyCode === 114 /* KeyCode.KEY_IN_COMPOSITION */\n                || (this._currentComposition && e.keyCode === 1 /* KeyCode.Backspace */)) {\n                // Stop propagation for keyDown events if the IME is processing key input\n                e.stopPropagation();\n            }\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                // Prevent default always for `Esc`, otherwise it will generate a keypress\n                // See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n                e.preventDefault();\n            }\n            lastKeyDown = e;\n            this._onKeyDown.fire(e);\n        }));\n        this._register(this._textArea.onKeyUp((_e) => {\n            const e = new StandardKeyboardEvent(_e);\n            this._onKeyUp.fire(e);\n        }));\n        this._register(this._textArea.onCompositionStart((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionstart]`, e);\n            }\n            const currentComposition = new CompositionContext();\n            if (this._currentComposition) {\n                // simply reset the composition context\n                this._currentComposition = currentComposition;\n                return;\n            }\n            this._currentComposition = currentComposition;\n            if (this._OS === 2 /* OperatingSystem.Macintosh */\n                && lastKeyDown\n                && lastKeyDown.equals(114 /* KeyCode.KEY_IN_COMPOSITION */)\n                && this._textAreaState.selectionStart === this._textAreaState.selectionEnd\n                && this._textAreaState.selectionStart > 0\n                && this._textAreaState.value.substr(this._textAreaState.selectionStart - 1, 1) === e.data\n                && (lastKeyDown.code === 'ArrowRight' || lastKeyDown.code === 'ArrowLeft')) {\n                // Handling long press case on Chromium/Safari macOS + arrow key => pretend the character was selected\n                if (_debugComposition) {\n                    console.log(`[compositionstart] Handling long press case on macOS + arrow key`, e);\n                }\n                // Pretend the previous character was composed (in order to get it removed by subsequent compositionupdate events)\n                currentComposition.handleCompositionUpdate('x');\n                this._onCompositionStart.fire({ data: e.data });\n                return;\n            }\n            if (this._browser.isAndroid) {\n                // when tapping on the editor, Android enters composition mode to edit the current word\n                // so we cannot clear the textarea on Android and we must pretend the current word was selected\n                this._onCompositionStart.fire({ data: e.data });\n                return;\n            }\n            this._onCompositionStart.fire({ data: e.data });\n        }));\n        this._register(this._textArea.onCompositionUpdate((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionupdate]`, e);\n            }\n            const currentComposition = this._currentComposition;\n            if (!currentComposition) {\n                // should not be possible to receive a 'compositionupdate' without a 'compositionstart'\n                return;\n            }\n            if (this._browser.isAndroid) {\n                // On Android, the data sent with the composition update event is unusable.\n                // For example, if the cursor is in the middle of a word like Mic|osoft\n                // and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n                // This is not really usable because it doesn't tell us where the edit began and where it ended.\n                const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n                const typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n                this._textAreaState = newState;\n                this._onType.fire(typeInput);\n                this._onCompositionUpdate.fire(e);\n                return;\n            }\n            const typeInput = currentComposition.handleCompositionUpdate(e.data);\n            this._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            this._onType.fire(typeInput);\n            this._onCompositionUpdate.fire(e);\n        }));\n        this._register(this._textArea.onCompositionEnd((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionend]`, e);\n            }\n            const currentComposition = this._currentComposition;\n            if (!currentComposition) {\n                // https://github.com/microsoft/monaco-editor/issues/1663\n                // On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data\n                return;\n            }\n            this._currentComposition = null;\n            if (this._browser.isAndroid) {\n                // On Android, the data sent with the composition update event is unusable.\n                // For example, if the cursor is in the middle of a word like Mic|osoft\n                // and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n                // This is not really usable because it doesn't tell us where the edit began and where it ended.\n                const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n                const typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n                this._textAreaState = newState;\n                this._onType.fire(typeInput);\n                this._onCompositionEnd.fire();\n                return;\n            }\n            const typeInput = currentComposition.handleCompositionUpdate(e.data);\n            this._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            this._onType.fire(typeInput);\n            this._onCompositionEnd.fire();\n        }));\n        this._register(this._textArea.onInput((e) => {\n            if (_debugComposition) {\n                console.log(`[input]`, e);\n            }\n            // Pretend here we touched the text area, as the `input` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received input event');\n            if (this._currentComposition) {\n                return;\n            }\n            const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            const typeInput = TextAreaState.deduceInput(this._textAreaState, newState, /*couldBeEmojiInput*/ this._OS === 2 /* OperatingSystem.Macintosh */);\n            if (typeInput.replacePrevCharCnt === 0 && typeInput.text.length === 1) {\n                // one character was typed\n                if (strings.isHighSurrogate(typeInput.text.charCodeAt(0))\n                    || typeInput.text.charCodeAt(0) === 0x7f /* Delete */) {\n                    // Ignore invalid input but keep it around for next time\n                    return;\n                }\n            }\n            this._textAreaState = newState;\n            if (typeInput.text !== ''\n                || typeInput.replacePrevCharCnt !== 0\n                || typeInput.replaceNextCharCnt !== 0\n                || typeInput.positionDelta !== 0) {\n                this._onType.fire(typeInput);\n            }\n        }));\n        // --- Clipboard operations\n        this._register(this._textArea.onCut((e) => {\n            // Pretend here we touched the text area, as the `cut` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received cut event');\n            this._ensureClipboardGetsEditorSelection(e);\n            this._asyncTriggerCut.schedule();\n        }));\n        this._register(this._textArea.onCopy((e) => {\n            this._ensureClipboardGetsEditorSelection(e);\n        }));\n        this._register(this._textArea.onPaste((e) => {\n            // Pretend here we touched the text area, as the `paste` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received paste event');\n            e.preventDefault();\n            if (!e.clipboardData) {\n                return;\n            }\n            let [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n            if (!text) {\n                return;\n            }\n            // try the in-memory store\n            metadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n            this._onPaste.fire({\n                text: text,\n                metadata: metadata\n            });\n        }));\n        this._register(this._textArea.onFocus(() => {\n            const hadFocus = this._hasFocus;\n            this._setHasFocus(true);\n            if (this._accessibilityService.isScreenReaderOptimized() && this._browser.isSafari && !hadFocus && this._hasFocus) {\n                // When \"tabbing into\" the textarea, immediately after dispatching the 'focus' event,\n                // Safari will always move the selection at offset 0 in the textarea\n                if (!this._asyncFocusGainWriteScreenReaderContent.value) {\n                    this._asyncFocusGainWriteScreenReaderContent.value = new RunOnceScheduler(() => this.writeNativeTextAreaContent('asyncFocusGain'), 0);\n                }\n                this._asyncFocusGainWriteScreenReaderContent.value.schedule();\n            }\n        }));\n        this._register(this._textArea.onBlur(() => {\n            if (this._currentComposition) {\n                // See https://github.com/microsoft/vscode/issues/112621\n                // where compositionend is not triggered when the editor\n                // is taken off-dom during a composition\n                // Clear the flag to be able to write to the textarea\n                this._currentComposition = null;\n                // Clear the textarea to avoid an unwanted cursor type\n                this.writeNativeTextAreaContent('blurWithoutCompositionEnd');\n                // Fire artificial composition end\n                this._onCompositionEnd.fire();\n            }\n            this._setHasFocus(false);\n        }));\n        this._register(this._textArea.onSyntheticTap(() => {\n            if (this._browser.isAndroid && this._currentComposition) {\n                // on Android, tapping does not cancel the current composition, so the\n                // textarea is stuck showing the old composition\n                // Clear the flag to be able to write to the textarea\n                this._currentComposition = null;\n                // Clear the textarea to avoid an unwanted cursor type\n                this.writeNativeTextAreaContent('tapWithoutCompositionEnd');\n                // Fire artificial composition end\n                this._onCompositionEnd.fire();\n            }\n        }));\n    }\n    _installSelectionChangeListener() {\n        // See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n        // When using a Braille display, it is possible for users to reposition the\n        // system caret. This is reflected in Chrome as a `selectionchange` event.\n        //\n        // The `selectionchange` event appears to be emitted under numerous other circumstances,\n        // so it is quite a challenge to distinguish a `selectionchange` coming in from a user\n        // using a Braille display from all the other cases.\n        //\n        // The problems with the `selectionchange` event are:\n        //  * the event is emitted when the textarea is focused programmatically -- textarea.focus()\n        //  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)\n        //  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'\n        //  * the event is emitted when tabbing into the textarea\n        //  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)\n        //  * the event sometimes comes in bursts for a single logical textarea operation\n        // `selectionchange` events often come multiple times for a single logical change\n        // so throttle multiple `selectionchange` events that burst in a short period of time.\n        let previousSelectionChangeEventTime = 0;\n        return dom.addDisposableListener(this._textArea.ownerDocument, 'selectionchange', (e) => {\n            inputLatency.onSelectionChange();\n            if (!this._hasFocus) {\n                return;\n            }\n            if (this._currentComposition) {\n                return;\n            }\n            if (!this._browser.isChrome) {\n                // Support only for Chrome until testing happens on other browsers\n                return;\n            }\n            const now = Date.now();\n            const delta1 = now - previousSelectionChangeEventTime;\n            previousSelectionChangeEventTime = now;\n            if (delta1 < 5) {\n                // received another `selectionchange` event within 5ms of the previous `selectionchange` event\n                // => ignore it\n                return;\n            }\n            const delta2 = now - this._textArea.getIgnoreSelectionChangeTime();\n            this._textArea.resetSelectionChangeTime();\n            if (delta2 < 100) {\n                // received a `selectionchange` event within 100ms since we touched the textarea\n                // => ignore it, since we caused it\n                return;\n            }\n            if (!this._textAreaState.selection) {\n                // Cannot correlate a position in the textarea with a position in the editor...\n                return;\n            }\n            const newValue = this._textArea.getValue();\n            if (this._textAreaState.value !== newValue) {\n                // Cannot correlate a position in the textarea with a position in the editor...\n                return;\n            }\n            const newSelectionStart = this._textArea.getSelectionStart();\n            const newSelectionEnd = this._textArea.getSelectionEnd();\n            if (this._textAreaState.selectionStart === newSelectionStart && this._textAreaState.selectionEnd === newSelectionEnd) {\n                // Nothing to do...\n                return;\n            }\n            const _newSelectionStartPosition = this._textAreaState.deduceEditorPosition(newSelectionStart);\n            const newSelectionStartPosition = this._host.deduceModelPosition(_newSelectionStartPosition[0], _newSelectionStartPosition[1], _newSelectionStartPosition[2]);\n            const _newSelectionEndPosition = this._textAreaState.deduceEditorPosition(newSelectionEnd);\n            const newSelectionEndPosition = this._host.deduceModelPosition(_newSelectionEndPosition[0], _newSelectionEndPosition[1], _newSelectionEndPosition[2]);\n            const newSelection = new Selection(newSelectionStartPosition.lineNumber, newSelectionStartPosition.column, newSelectionEndPosition.lineNumber, newSelectionEndPosition.column);\n            this._onSelectionChangeRequest.fire(newSelection);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._selectionChangeListener) {\n            this._selectionChangeListener.dispose();\n            this._selectionChangeListener = null;\n        }\n    }\n    focusTextArea() {\n        // Setting this._hasFocus and writing the screen reader content\n        // will result in a focus() and setSelectionRange() in the textarea\n        this._setHasFocus(true);\n        // If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n        this.refreshFocusState();\n    }\n    isFocused() {\n        return this._hasFocus;\n    }\n    refreshFocusState() {\n        this._setHasFocus(this._textArea.hasFocus());\n    }\n    _setHasFocus(newHasFocus) {\n        if (this._hasFocus === newHasFocus) {\n            // no change\n            return;\n        }\n        this._hasFocus = newHasFocus;\n        if (this._selectionChangeListener) {\n            this._selectionChangeListener.dispose();\n            this._selectionChangeListener = null;\n        }\n        if (this._hasFocus) {\n            this._selectionChangeListener = this._installSelectionChangeListener();\n        }\n        if (this._hasFocus) {\n            this.writeNativeTextAreaContent('focusgain');\n        }\n        if (this._hasFocus) {\n            this._onFocus.fire();\n        }\n        else {\n            this._onBlur.fire();\n        }\n    }\n    _setAndWriteTextAreaState(reason, textAreaState) {\n        if (!this._hasFocus) {\n            textAreaState = textAreaState.collapseSelection();\n        }\n        textAreaState.writeToTextArea(reason, this._textArea, this._hasFocus);\n        this._textAreaState = textAreaState;\n    }\n    writeNativeTextAreaContent(reason) {\n        if ((!this._accessibilityService.isScreenReaderOptimized() && reason === 'render') || this._currentComposition) {\n            // Do not write to the text on render unless a screen reader is being used #192278\n            // Do not write to the text area when doing composition\n            return;\n        }\n        this._logService.trace(`writeTextAreaState(reason: ${reason})`);\n        this._setAndWriteTextAreaState(reason, this._host.getScreenReaderContent());\n    }\n    _ensureClipboardGetsEditorSelection(e) {\n        const dataToCopy = this._host.getDataToCopy();\n        const storedMetadata = {\n            version: 1,\n            isFromEmptySelection: dataToCopy.isFromEmptySelection,\n            multicursorText: dataToCopy.multicursorText,\n            mode: dataToCopy.mode\n        };\n        InMemoryClipboardMetadataManager.INSTANCE.set(\n        // When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n        // Firefox pastes \"LINE\\n\", so let's work around this quirk\n        (this._browser.isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text), storedMetadata);\n        e.preventDefault();\n        if (e.clipboardData) {\n            ClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n        }\n    }\n};\nTextAreaInput = __decorate([\n    __param(4, IAccessibilityService),\n    __param(5, ILogService)\n], TextAreaInput);\nexport { TextAreaInput };\nexport const ClipboardEventUtils = {\n    getTextData(clipboardData) {\n        const text = clipboardData.getData(Mimes.text);\n        let metadata = null;\n        const rawmetadata = clipboardData.getData('vscode-editor-data');\n        if (typeof rawmetadata === 'string') {\n            try {\n                metadata = JSON.parse(rawmetadata);\n                if (metadata.version !== 1) {\n                    metadata = null;\n                }\n            }\n            catch (err) {\n                // no problem!\n            }\n        }\n        if (text.length === 0 && metadata === null && clipboardData.files.length > 0) {\n            // no textual data pasted, generate text from file names\n            const files = Array.prototype.slice.call(clipboardData.files, 0);\n            return [files.map(file => file.name).join('\\n'), null];\n        }\n        return [text, metadata];\n    },\n    setTextData(clipboardData, text, html, metadata) {\n        clipboardData.setData(Mimes.text, text);\n        if (typeof html === 'string') {\n            clipboardData.setData('text/html', html);\n        }\n        clipboardData.setData('vscode-editor-data', JSON.stringify(metadata));\n    }\n};\nexport class TextAreaWrapper extends Disposable {\n    get ownerDocument() {\n        return this._actual.ownerDocument;\n    }\n    constructor(_actual) {\n        super();\n        this._actual = _actual;\n        this.onKeyDown = this._register(new DomEmitter(this._actual, 'keydown')).event;\n        this.onKeyUp = this._register(new DomEmitter(this._actual, 'keyup')).event;\n        this.onCompositionStart = this._register(new DomEmitter(this._actual, 'compositionstart')).event;\n        this.onCompositionUpdate = this._register(new DomEmitter(this._actual, 'compositionupdate')).event;\n        this.onCompositionEnd = this._register(new DomEmitter(this._actual, 'compositionend')).event;\n        this.onBeforeInput = this._register(new DomEmitter(this._actual, 'beforeinput')).event;\n        this.onInput = this._register(new DomEmitter(this._actual, 'input')).event;\n        this.onCut = this._register(new DomEmitter(this._actual, 'cut')).event;\n        this.onCopy = this._register(new DomEmitter(this._actual, 'copy')).event;\n        this.onPaste = this._register(new DomEmitter(this._actual, 'paste')).event;\n        this.onFocus = this._register(new DomEmitter(this._actual, 'focus')).event;\n        this.onBlur = this._register(new DomEmitter(this._actual, 'blur')).event;\n        this._onSyntheticTap = this._register(new Emitter());\n        this.onSyntheticTap = this._onSyntheticTap.event;\n        this._ignoreSelectionChangeTime = 0;\n        this._register(this.onKeyDown(() => inputLatency.onKeyDown()));\n        this._register(this.onBeforeInput(() => inputLatency.onBeforeInput()));\n        this._register(this.onInput(() => inputLatency.onInput()));\n        this._register(this.onKeyUp(() => inputLatency.onKeyUp()));\n        this._register(dom.addDisposableListener(this._actual, TextAreaSyntethicEvents.Tap, () => this._onSyntheticTap.fire()));\n    }\n    hasFocus() {\n        const shadowRoot = dom.getShadowRoot(this._actual);\n        if (shadowRoot) {\n            return shadowRoot.activeElement === this._actual;\n        }\n        else if (this._actual.isConnected) {\n            return dom.getActiveElement() === this._actual;\n        }\n        else {\n            return false;\n        }\n    }\n    setIgnoreSelectionChangeTime(reason) {\n        this._ignoreSelectionChangeTime = Date.now();\n    }\n    getIgnoreSelectionChangeTime() {\n        return this._ignoreSelectionChangeTime;\n    }\n    resetSelectionChangeTime() {\n        this._ignoreSelectionChangeTime = 0;\n    }\n    getValue() {\n        // console.log('current value: ' + this._textArea.value);\n        return this._actual.value;\n    }\n    setValue(reason, value) {\n        const textArea = this._actual;\n        if (textArea.value === value) {\n            // No change\n            return;\n        }\n        // console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);\n        this.setIgnoreSelectionChangeTime('setValue');\n        textArea.value = value;\n    }\n    getSelectionStart() {\n        return this._actual.selectionDirection === 'backward' ? this._actual.selectionEnd : this._actual.selectionStart;\n    }\n    getSelectionEnd() {\n        return this._actual.selectionDirection === 'backward' ? this._actual.selectionStart : this._actual.selectionEnd;\n    }\n    setSelectionRange(reason, selectionStart, selectionEnd) {\n        const textArea = this._actual;\n        let activeElement = null;\n        const shadowRoot = dom.getShadowRoot(textArea);\n        if (shadowRoot) {\n            activeElement = shadowRoot.activeElement;\n        }\n        else {\n            activeElement = dom.getActiveElement();\n        }\n        const activeWindow = dom.getWindow(activeElement);\n        const currentIsFocused = (activeElement === textArea);\n        const currentSelectionStart = textArea.selectionStart;\n        const currentSelectionEnd = textArea.selectionEnd;\n        if (currentIsFocused && currentSelectionStart === selectionStart && currentSelectionEnd === selectionEnd) {\n            // No change\n            // Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377\n            if (browser.isFirefox && activeWindow.parent !== activeWindow) {\n                textArea.focus();\n            }\n            return;\n        }\n        // console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);\n        if (currentIsFocused) {\n            // No need to focus, only need to change the selection range\n            this.setIgnoreSelectionChangeTime('setSelectionRange');\n            textArea.setSelectionRange(selectionStart, selectionEnd);\n            if (browser.isFirefox && activeWindow.parent !== activeWindow) {\n                textArea.focus();\n            }\n            return;\n        }\n        // If the focus is outside the textarea, browsers will try really hard to reveal the textarea.\n        // Here, we try to undo the browser's desperate reveal.\n        try {\n            const scrollState = dom.saveParentsScrollTop(textArea);\n            this.setIgnoreSelectionChangeTime('setSelectionRange');\n            textArea.focus();\n            textArea.setSelectionRange(selectionStart, selectionEnd);\n            dom.restoreParentsScrollTop(textArea, scrollState);\n        }\n        catch (e) {\n            // Sometimes IE throws when setting selection (e.g. textarea is off-DOM)\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n        this._lastPointerType = 'mouse';\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e) => {\n            const pointerType = e.pointerType;\n            if (pointerType === 'mouse') {\n                this._lastPointerType = 'mouse';\n                return;\n            }\n            else if (pointerType === 'touch') {\n                this._lastPointerType = 'touch';\n            }\n            else {\n                this._lastPointerType = 'pen';\n            }\n        }));\n        // PonterEvents\n        const pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n        this._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n        this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n    }\n    onTap(event) {\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n            return;\n        }\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        this._dispatchGesture(event, /*inSelectionMode*/ false);\n    }\n    onChange(event) {\n        if (this._lastPointerType === 'touch') {\n            this._context.viewModel.viewLayout.deltaScrollNow(-event.translationX, -event.translationY);\n        }\n        if (this._lastPointerType === 'pen') {\n            this._dispatchGesture(event, /*inSelectionMode*/ true);\n        }\n    }\n    _dispatchGesture(event, inSelectionMode) {\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            this.viewController.dispatchMouse({\n                position: target.position,\n                mouseColumn: target.position.column,\n                startedOnLineNumbers: false,\n                revealType: 1 /* NavigationCommandRevealType.Minimal */,\n                mouseDownCount: event.tapCount,\n                inSelectionMode,\n                altKey: false,\n                ctrlKey: false,\n                metaKey: false,\n                shiftKey: false,\n                leftButton: false,\n                middleButton: false,\n                onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n            });\n        }\n    }\n    _onMouseDown(e, pointerId) {\n        if (e.browserEvent.pointerType === 'touch') {\n            return;\n        }\n        super._onMouseDown(e, pointerId);\n    }\n}\nclass TouchHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n    }\n    onTap(event) {\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // Send the tap event also to the <textarea> (for input purposes)\n            const event = document.createEvent('CustomEvent');\n            event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n            this.viewHelper.dispatchTextAreaEvent(event);\n            this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n        }\n    }\n    onChange(e) {\n        this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n}\nexport class PointerHandler extends Disposable {\n    constructor(context, viewController, viewHelper) {\n        super();\n        const isPhone = platform.isIOS || (platform.isAndroid && platform.isMobile);\n        if (isPhone && BrowserFeatures.pointerEvents) {\n            this.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n        }\n        else if (mainWindow.TouchEvent) {\n            this.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n        }\n        else {\n            this.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n        }\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class DynamicViewOverlay extends ViewEventHandler {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n    static { this.CLASS_NAME = 'line-numbers'; }\n    constructor(context) {\n        super();\n        this._context = context;\n        this._readConfig();\n        this._lastCursorModelPosition = new Position(1, 1);\n        this._renderResult = null;\n        this._activeLineNumber = 1;\n        this._context.addEventHandler(this);\n    }\n    _readConfig() {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        const lineNumbers = options.get(68 /* EditorOption.lineNumbers */);\n        this._renderLineNumbers = lineNumbers.renderType;\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\n        this._renderFinalNewline = options.get(96 /* EditorOption.renderFinalNewline */);\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        this._readConfig();\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const primaryViewPosition = e.selections[0].getPosition();\n        this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n        let shouldRender = false;\n        if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n            this._activeLineNumber = primaryViewPosition.lineNumber;\n            shouldRender = true;\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return e.affectsLineNumber;\n    }\n    // --- end event handlers\n    _getLineRenderLineNumber(viewLineNumber) {\n        const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n        if (modelPosition.column !== 1) {\n            return '';\n        }\n        const modelLineNumber = modelPosition.lineNumber;\n        if (this._renderCustomLineNumbers) {\n            return this._renderCustomLineNumbers(modelLineNumber);\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n            if (diff === 0) {\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n            }\n            return String(diff);\n        }\n        if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n                return String(modelLineNumber);\n            }\n            if (modelLineNumber % 10 === 0) {\n                return String(modelLineNumber);\n            }\n            const finalLineNumber = this._context.viewModel.getLineCount();\n            if (modelLineNumber === finalLineNumber) {\n                return String(modelLineNumber);\n            }\n            return '';\n        }\n        return String(modelLineNumber);\n    }\n    prepareRender(ctx) {\n        if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n            this._renderResult = null;\n            return;\n        }\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n        lineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n        let decorationStartIndex = 0;\n        const lineCount = this._context.viewModel.getLineCount();\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            let renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n            let extraClassNames = '';\n            // skip decorations whose end positions we've already passed\n            while (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n                decorationStartIndex++;\n            }\n            for (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n                const { range, options } = lineNoDecorations[i];\n                if (range.startLineNumber <= lineNumber) {\n                    extraClassNames += ' ' + options.lineNumberClassName;\n                }\n            }\n            if (!renderLineNumber && !extraClassNames) {\n                output[lineIndex] = '';\n                continue;\n            }\n            if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n                // this is the last line\n                if (this._renderFinalNewline === 'off') {\n                    renderLineNumber = '';\n                }\n                if (this._renderFinalNewline === 'dimmed') {\n                    extraClassNames += ' dimmed-line-number';\n                }\n            }\n            if (lineNumber === this._activeLineNumber) {\n                extraClassNames += ' active-line-number';\n            }\n            output[lineIndex] = (`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`);\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorLineNumbersColor = theme.getColor(editorLineNumbers);\n    const editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n    if (editorDimmedLineNumberColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n    }\n    else if (editorLineNumbersColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './margin.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Margin extends ViewPart {\n    static { this.CLASS_NAME = 'glyph-margin'; }\n    static { this.OUTER_CLASS_NAME = 'margin'; }\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n        this._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n        this._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n    }\n    dispose() {\n        super.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollTopChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setLayerHinting(this._canUseLayerHinting);\n        this._domNode.setContain('strict');\n        const adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n        this._domNode.setTop(-adjustedScrollTop);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this._domNode.setHeight(height);\n        this._domNode.setWidth(this._contentLeft);\n        this._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n        this._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n        this._glyphMarginBackgroundDomNode.setHeight(height);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport './textAreaHandler.css';\nimport * as nls from '../../../nls.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { CopyOptions, TextAreaInput, TextAreaWrapper } from './textAreaInput.js';\nimport { PagedScreenReaderStrategy, TextAreaState, _debugComposition } from './textAreaState.js';\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { EditorOptions } from '../../common/config/editorOptions.js';\nimport { getMapForWordSeparators } from '../../common/core/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { Color } from '../../../base/common/color.js';\nimport { IME } from '../../../base/common/ime.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nclass VisibleTextAreaData {\n    constructor(_context, modelLineNumber, distanceToModelLineStart, widthOfHiddenLineTextBefore, distanceToModelLineEnd) {\n        this._context = _context;\n        this.modelLineNumber = modelLineNumber;\n        this.distanceToModelLineStart = distanceToModelLineStart;\n        this.widthOfHiddenLineTextBefore = widthOfHiddenLineTextBefore;\n        this.distanceToModelLineEnd = distanceToModelLineEnd;\n        this._visibleTextAreaBrand = undefined;\n        this.startPosition = null;\n        this.endPosition = null;\n        this.visibleTextareaStart = null;\n        this.visibleTextareaEnd = null;\n        /**\n         * When doing composition, the currently composed text might be split up into\n         * multiple tokens, then merged again into a single token, etc. Here we attempt\n         * to keep the presentation of the <textarea> stable by using the previous used\n         * style if multiple tokens come into play. This avoids flickering.\n         */\n        this._previousPresentation = null;\n    }\n    prepareRender(visibleRangeProvider) {\n        const startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n        const endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n        this.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n        this.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n        if (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n            this.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n            this.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n        }\n        else {\n            // TODO: what if the view positions are not on the same line?\n            this.visibleTextareaStart = null;\n            this.visibleTextareaEnd = null;\n        }\n    }\n    definePresentation(tokenPresentation) {\n        if (!this._previousPresentation) {\n            // To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n            if (tokenPresentation) {\n                this._previousPresentation = tokenPresentation;\n            }\n            else {\n                this._previousPresentation = {\n                    foreground: 1 /* ColorId.DefaultForeground */,\n                    italic: false,\n                    bold: false,\n                    underline: false,\n                    strikethrough: false,\n                };\n            }\n        }\n        return this._previousPresentation;\n    }\n}\nconst canUseZeroSizeTextarea = (browser.isFirefox);\nlet TextAreaHandler = class TextAreaHandler extends ViewPart {\n    constructor(context, viewController, visibleRangeProvider, _keybindingService, _instantiationService) {\n        super(context);\n        this._keybindingService = _keybindingService;\n        this._instantiationService = _instantiationService;\n        this._primaryCursorPosition = new Position(1, 1);\n        this._primaryCursorVisibleRange = null;\n        this._viewController = viewController;\n        this._visibleRangeProvider = visibleRangeProvider;\n        this._scrollLeft = 0;\n        this._scrollTop = 0;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(37 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(25 /* EditorOption.copyWithSyntaxHighlighting */);\n        this._visibleTextArea = null;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._modelSelections = [new Selection(1, 1, 1, 1)];\n        this._lastRenderPosition = null;\n        // Text Area (The focus will always be in the textarea when the cursor is blinking)\n        this.textArea = createFastDomNode(document.createElement('textarea'));\n        PartFingerprints.write(this.textArea, 7 /* PartFingerprint.TextArea */);\n        this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n        const { tabSize } = this._context.viewModel.model.getOptions();\n        this.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n        this.textArea.setAttribute('autocorrect', 'off');\n        this.textArea.setAttribute('autocapitalize', 'off');\n        this.textArea.setAttribute('autocomplete', 'off');\n        this.textArea.setAttribute('spellcheck', 'false');\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('aria-required', options.get(5 /* EditorOption.ariaRequired */) ? 'true' : 'false');\n        this.textArea.setAttribute('tabindex', String(options.get(125 /* EditorOption.tabIndex */)));\n        this.textArea.setAttribute('role', 'textbox');\n        this.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n        this.textArea.setAttribute('aria-multiline', 'true');\n        this.textArea.setAttribute('aria-autocomplete', options.get(92 /* EditorOption.readOnly */) ? 'none' : 'both');\n        this._ensureReadOnlyAttribute();\n        this.textAreaCover = createFastDomNode(document.createElement('div'));\n        this.textAreaCover.setPosition('absolute');\n        const simpleModel = {\n            getLineCount: () => {\n                return this._context.viewModel.getLineCount();\n            },\n            getLineMaxColumn: (lineNumber) => {\n                return this._context.viewModel.getLineMaxColumn(lineNumber);\n            },\n            getValueInRange: (range, eol) => {\n                return this._context.viewModel.getValueInRange(range, eol);\n            },\n            getValueLengthInRange: (range, eol) => {\n                return this._context.viewModel.getValueLengthInRange(range, eol);\n            },\n            modifyPosition: (position, offset) => {\n                return this._context.viewModel.modifyPosition(position, offset);\n            }\n        };\n        const textAreaInputHost = {\n            getDataToCopy: () => {\n                const rawTextToCopy = this._context.viewModel.getPlainTextToCopy(this._modelSelections, this._emptySelectionClipboard, platform.isWindows);\n                const newLineCharacter = this._context.viewModel.model.getEOL();\n                const isFromEmptySelection = (this._emptySelectionClipboard && this._modelSelections.length === 1 && this._modelSelections[0].isEmpty());\n                const multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n                const text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n                let html = undefined;\n                let mode = null;\n                if (CopyOptions.forceCopyWithSyntaxHighlighting || (this._copyWithSyntaxHighlighting && text.length < 65536)) {\n                    const richText = this._context.viewModel.getRichTextToCopy(this._modelSelections, this._emptySelectionClipboard);\n                    if (richText) {\n                        html = richText.html;\n                        mode = richText.mode;\n                    }\n                }\n                return {\n                    isFromEmptySelection,\n                    multicursorText,\n                    text,\n                    html,\n                    mode\n                };\n            },\n            getScreenReaderContent: () => {\n                if (this._accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n                    // We know for a fact that a screen reader is not attached\n                    // On OSX, we write the character before the cursor to allow for \"long-press\" composition\n                    // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n                    const selection = this._selections[0];\n                    if (platform.isMacintosh && selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        let textBefore = this._getWordBeforePosition(position);\n                        if (textBefore.length === 0) {\n                            textBefore = this._getCharacterBeforePosition(position);\n                        }\n                        if (textBefore.length > 0) {\n                            return new TextAreaState(textBefore, textBefore.length, textBefore.length, Range.fromPositions(position), 0);\n                        }\n                    }\n                    // on macOS, write current selection into textarea will allow system text services pick selected text,\n                    // but we still want to limit the amount of text given Chromium handles very poorly text even of a few\n                    // thousand chars\n                    // (https://github.com/microsoft/vscode/issues/27799)\n                    const LIMIT_CHARS = 500;\n                    if (platform.isMacintosh && !selection.isEmpty() && simpleModel.getValueLengthInRange(selection, 0 /* EndOfLinePreference.TextDefined */) < LIMIT_CHARS) {\n                        const text = simpleModel.getValueInRange(selection, 0 /* EndOfLinePreference.TextDefined */);\n                        return new TextAreaState(text, 0, text.length, selection, 0);\n                    }\n                    // on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n                    // if the textarea has no content selected. So if there is an editor selection, ensure something\n                    // is selected in the textarea.\n                    if (browser.isSafari && !selection.isEmpty()) {\n                        const placeholderText = 'vscode-placeholder';\n                        return new TextAreaState(placeholderText, 0, placeholderText.length, null, undefined);\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                if (browser.isAndroid) {\n                    // when tapping in the editor on a word, Android enters composition mode.\n                    // in the `compositionstart` event we cannot clear the textarea, because\n                    // it then forgets to ever send a `compositionend`.\n                    // we therefore only write the current word in the textarea\n                    const selection = this._selections[0];\n                    if (selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        const [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n                        if (wordAtPosition.length > 0) {\n                            return new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, Range.fromPositions(position), 0);\n                        }\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                return PagedScreenReaderStrategy.fromEditorSelection(simpleModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === 0 /* AccessibilitySupport.Unknown */);\n            },\n            deduceModelPosition: (viewAnchorPosition, deltaOffset, lineFeedCnt) => {\n                return this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n            }\n        };\n        const textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n        this._textAreaInput = this._register(this._instantiationService.createInstance(TextAreaInput, textAreaInputHost, textAreaWrapper, platform.OS, {\n            isAndroid: browser.isAndroid,\n            isChrome: browser.isChrome,\n            isFirefox: browser.isFirefox,\n            isSafari: browser.isSafari,\n        }));\n        this._register(this._textAreaInput.onKeyDown((e) => {\n            this._viewController.emitKeyDown(e);\n        }));\n        this._register(this._textAreaInput.onKeyUp((e) => {\n            this._viewController.emitKeyUp(e);\n        }));\n        this._register(this._textAreaInput.onPaste((e) => {\n            let pasteOnNewLine = false;\n            let multicursorText = null;\n            let mode = null;\n            if (e.metadata) {\n                pasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n                multicursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n                mode = e.metadata.mode;\n            }\n            this._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n        }));\n        this._register(this._textAreaInput.onCut(() => {\n            this._viewController.cut();\n        }));\n        this._register(this._textAreaInput.onType((e) => {\n            if (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n                // must be handled through the new command\n                if (_debugComposition) {\n                    console.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n                }\n                this._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n            }\n            else {\n                if (_debugComposition) {\n                    console.log(` => type: <<${e.text}>>`);\n                }\n                this._viewController.type(e.text);\n            }\n        }));\n        this._register(this._textAreaInput.onSelectionChangeRequest((modelSelection) => {\n            this._viewController.setSelection(modelSelection);\n        }));\n        this._register(this._textAreaInput.onCompositionStart((e) => {\n            // The textarea might contain some content when composition starts.\n            //\n            // When we make the textarea visible, it always has a height of 1 line,\n            // so we don't need to worry too much about content on lines above or below\n            // the selection.\n            //\n            // However, the text on the current line needs to be made visible because\n            // some IME methods allow to move to other glyphs on the current line\n            // (by pressing arrow keys).\n            //\n            // (1) The textarea might contain only some parts of the current line,\n            // like the word before the selection. Also, the content inside the textarea\n            // can grow or shrink as composition occurs. We therefore anchor the textarea\n            // in terms of distance to a certain line start and line end.\n            //\n            // (2) Also, we should not make \\t characters visible, because their rendering\n            // inside the <textarea> will not align nicely with our rendering. We therefore\n            // will hide (if necessary) some of the leading text on the current line.\n            const ta = this.textArea.domNode;\n            const modelSelection = this._modelSelections[0];\n            const { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n                // Find the text that is on the current line before the selection\n                const textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n                const lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n                // We now search to see if we should hide some part of it (if it contains \\t)\n                const tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n                const desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n                const startModelPosition = modelSelection.getStartPosition();\n                const visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n                const distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n                const hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n                const { tabSize } = this._context.viewModel.model.getOptions();\n                const widthOfHiddenTextBefore = measureText(this.textArea.domNode.ownerDocument, hiddenLineTextBefore, this._fontInfo, tabSize);\n                return { distanceToModelLineStart, widthOfHiddenTextBefore };\n            })();\n            const { distanceToModelLineEnd } = (() => {\n                // Find the text that is on the current line after the selection\n                const textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n                const lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n                const tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n                const desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n                const endModelPosition = modelSelection.getEndPosition();\n                const visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n                const distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n                return { distanceToModelLineEnd };\n            })();\n            // Scroll to reveal the location in the editor where composition occurs\n            this._context.viewModel.revealRange('keyboard', true, Range.fromPositions(this._selections[0].getStartPosition()), 0 /* viewEvents.VerticalRevealType.Simple */, 1 /* ScrollType.Immediate */);\n            this._visibleTextArea = new VisibleTextAreaData(this._context, modelSelection.startLineNumber, distanceToModelLineStart, widthOfHiddenTextBefore, distanceToModelLineEnd);\n            // We turn off wrapping if the <textarea> becomes visible for composition\n            this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n            // Show the textarea\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n            this._viewController.compositionStart();\n            this._context.viewModel.onCompositionStart();\n        }));\n        this._register(this._textAreaInput.onCompositionUpdate((e) => {\n            if (!this._visibleTextArea) {\n                return;\n            }\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n        }));\n        this._register(this._textAreaInput.onCompositionEnd(() => {\n            this._visibleTextArea = null;\n            // We turn on wrapping as necessary if the <textarea> hides after composition\n            this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n            this._render();\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n            this._viewController.compositionEnd();\n            this._context.viewModel.onCompositionEnd();\n        }));\n        this._register(this._textAreaInput.onFocus(() => {\n            this._context.viewModel.setHasFocus(true);\n        }));\n        this._register(this._textAreaInput.onBlur(() => {\n            this._context.viewModel.setHasFocus(false);\n        }));\n        this._register(IME.onDidChange(() => {\n            this._ensureReadOnlyAttribute();\n        }));\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaInput.writeNativeTextAreaContent(reason);\n    }\n    dispose() {\n        super.dispose();\n    }\n    _getAndroidWordAtPosition(position) {\n        const ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS, []);\n        let goingLeft = true;\n        let startColumn = position.column;\n        let goingRight = true;\n        let endColumn = position.column;\n        let distance = 0;\n        while (distance < 50 && (goingLeft || goingRight)) {\n            if (goingLeft && startColumn <= 1) {\n                goingLeft = false;\n            }\n            if (goingLeft) {\n                const charCode = lineContent.charCodeAt(startColumn - 2);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingLeft = false;\n                }\n                else {\n                    startColumn--;\n                }\n            }\n            if (goingRight && endColumn > lineContent.length) {\n                goingRight = false;\n            }\n            if (goingRight) {\n                const charCode = lineContent.charCodeAt(endColumn - 1);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingRight = false;\n                }\n                else {\n                    endColumn++;\n                }\n            }\n            distance++;\n        }\n        return [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n    }\n    _getWordBeforePosition(position) {\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(132 /* EditorOption.wordSeparators */), []);\n        let column = position.column;\n        let distance = 0;\n        while (column > 1) {\n            const charCode = lineContent.charCodeAt(column - 2);\n            const charClass = wordSeparators.get(charCode);\n            if (charClass !== 0 /* WordCharacterClass.Regular */ || distance > 50) {\n                return lineContent.substring(column - 1, position.column - 1);\n            }\n            distance++;\n            column--;\n        }\n        return lineContent.substring(0, position.column - 1);\n    }\n    _getCharacterBeforePosition(position) {\n        if (position.column > 1) {\n            const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n            const charBefore = lineContent.charAt(position.column - 2);\n            if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n                return charBefore;\n            }\n        }\n        return '';\n    }\n    _getAriaLabel(options) {\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n            const toggleKeybindingLabel = this._keybindingService.lookupKeybinding('editor.action.toggleScreenReaderAccessibilityMode')?.getAriaLabel();\n            const runCommandKeybindingLabel = this._keybindingService.lookupKeybinding('workbench.action.showCommands')?.getAriaLabel();\n            const keybindingEditorKeybindingLabel = this._keybindingService.lookupKeybinding('workbench.action.openGlobalKeybindings')?.getAriaLabel();\n            const editorNotAccessibleMessage = nls.localize('accessibilityModeOff', \"The editor is not accessible at this time.\");\n            if (toggleKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabel', \"{0} To enable screen reader optimized mode, use {1}\", editorNotAccessibleMessage, toggleKeybindingLabel);\n            }\n            else if (runCommandKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabelNoKb', \"{0} To enable screen reader optimized mode, open the quick pick with {1} and run the command Toggle Screen Reader Accessibility Mode, which is currently not triggerable via keyboard.\", editorNotAccessibleMessage, runCommandKeybindingLabel);\n            }\n            else if (keybindingEditorKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabelNoKbs', \"{0} Please assign a keybinding for the command Toggle Screen Reader Accessibility Mode by accessing the keybindings editor with {1} and run it.\", editorNotAccessibleMessage, keybindingEditorKeybindingLabel);\n            }\n            else {\n                // SOS\n                return editorNotAccessibleMessage;\n            }\n        }\n        return options.get(4 /* EditorOption.ariaLabel */);\n    }\n    _setAccessibilityOptions(options) {\n        this._accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        const accessibilityPageSize = options.get(3 /* EditorOption.accessibilityPageSize */);\n        if (this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n            // If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n            this._accessibilityPageSize = 500;\n        }\n        else {\n            this._accessibilityPageSize = accessibilityPageSize;\n        }\n        // When wrapping is enabled and a screen reader might be attached,\n        // we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).\n        // This is because screen readers will read the text in the textarea and we'd like that the\n        // wrapping points in the textarea match the wrapping points in the editor.\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const wrappingColumn = layoutInfo.wrappingColumn;\n        if (wrappingColumn !== -1 && this._accessibilitySupport !== 1 /* AccessibilitySupport.Disabled */) {\n            const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n            this._textAreaWrapping = true;\n            this._textAreaWidth = Math.round(wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        }\n        else {\n            this._textAreaWrapping = false;\n            this._textAreaWidth = (canUseZeroSizeTextarea ? 0 : 1);\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(37 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(25 /* EditorOption.copyWithSyntaxHighlighting */);\n        this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n        const { tabSize } = this._context.viewModel.model.getOptions();\n        this.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('aria-required', options.get(5 /* EditorOption.ariaRequired */) ? 'true' : 'false');\n        this.textArea.setAttribute('tabindex', String(options.get(125 /* EditorOption.tabIndex */)));\n        if (e.hasChanged(34 /* EditorOption.domReadOnly */) || e.hasChanged(92 /* EditorOption.readOnly */)) {\n            this._ensureReadOnlyAttribute();\n        }\n        if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n            this._textAreaInput.writeNativeTextAreaContent('strategy changed');\n        }\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        this._modelSelections = e.modelSelections.slice(0);\n        // We must update the <textarea> synchronously, otherwise long press IME on macos breaks.\n        // See https://github.com/microsoft/vscode/issues/165821\n        this._textAreaInput.writeNativeTextAreaContent('selection changed');\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollLeft = e.scrollLeft;\n        this._scrollTop = e.scrollTop;\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin view API\n    isFocused() {\n        return this._textAreaInput.isFocused();\n    }\n    focusTextArea() {\n        this._textAreaInput.focusTextArea();\n    }\n    getLastRenderData() {\n        return this._lastRenderPosition;\n    }\n    setAriaOptions(options) {\n        if (options.activeDescendant) {\n            this.textArea.setAttribute('aria-haspopup', 'true');\n            this.textArea.setAttribute('aria-autocomplete', 'list');\n            this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n        }\n        else {\n            this.textArea.setAttribute('aria-haspopup', 'false');\n            this.textArea.setAttribute('aria-autocomplete', 'both');\n            this.textArea.removeAttribute('aria-activedescendant');\n        }\n        if (options.role) {\n            this.textArea.setAttribute('role', options.role);\n        }\n    }\n    // --- end view API\n    _ensureReadOnlyAttribute() {\n        const options = this._context.configuration.options;\n        // When someone requests to disable IME, we set the \"readonly\" attribute on the <textarea>.\n        // This will prevent composition.\n        const useReadOnly = !IME.enabled || (options.get(34 /* EditorOption.domReadOnly */) && options.get(92 /* EditorOption.readOnly */));\n        if (useReadOnly) {\n            this.textArea.setAttribute('readonly', 'true');\n        }\n        else {\n            this.textArea.removeAttribute('readonly');\n        }\n    }\n    prepareRender(ctx) {\n        this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n        this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n        this._visibleTextArea?.prepareRender(ctx);\n    }\n    render(ctx) {\n        this._textAreaInput.writeNativeTextAreaContent('render');\n        this._render();\n    }\n    _render() {\n        if (this._visibleTextArea) {\n            // The text area is visible for composition reasons\n            const visibleStart = this._visibleTextArea.visibleTextareaStart;\n            const visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n            const startPosition = this._visibleTextArea.startPosition;\n            const endPosition = this._visibleTextArea.endPosition;\n            if (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n                const top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n                const lineCount = this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n                let scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n                let left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n                // See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n                // Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n                // This could be caused by rounding errors that might only show up with certain font families.\n                // In other words, a pixel might be lost when doing something like\n                //      `Math.round(end) - Math.round(start)`\n                // vs\n                //      `Math.round(end - start)`\n                let width = visibleEnd.left - visibleStart.left + 1;\n                if (left < this._contentLeft) {\n                    // the textarea would be rendered on top of the margin,\n                    // so reduce its width. We use the same technique as\n                    // for hiding text before\n                    const delta = (this._contentLeft - left);\n                    left += delta;\n                    scrollLeft += delta;\n                    width -= delta;\n                }\n                if (width > this._contentWidth) {\n                    // the textarea would be wider than the content width,\n                    // so reduce its width.\n                    width = this._contentWidth;\n                }\n                // Try to render the textarea with the color/font style to match the text under it\n                const viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n                const startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n                const endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n                const textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n                const presentation = this._visibleTextArea.definePresentation((textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null));\n                this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n                this.textArea.domNode.scrollLeft = scrollLeft;\n                this._doRender({\n                    lastRenderPosition: null,\n                    top: top,\n                    left: left,\n                    width: width,\n                    height: this._lineHeight,\n                    useCover: false,\n                    color: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n                    italic: presentation.italic,\n                    bold: presentation.bold,\n                    underline: presentation.underline,\n                    strikethrough: presentation.strikethrough\n                });\n            }\n            return;\n        }\n        if (!this._primaryCursorVisibleRange) {\n            // The primary cursor is outside the viewport => place textarea to the top left\n            this._renderAtTopLeft();\n            return;\n        }\n        const left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n        if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        const top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n        if (top < 0 || top > this._contentHeight) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n        if (platform.isMacintosh || this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */) {\n            // For the popup emoji input, we will make the text area as high as the line height\n            // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n            this._doRender({\n                lastRenderPosition: this._primaryCursorPosition,\n                top,\n                left: this._textAreaWrapping ? this._contentLeft : left,\n                width: this._textAreaWidth,\n                height: this._lineHeight,\n                useCover: false\n            });\n            // In case the textarea contains a word, we're going to try to align the textarea's cursor\n            // with our cursor by scrolling the textarea as much as possible\n            this.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n            const lineCount = this._textAreaInput.textAreaState.newlineCountBeforeSelection ?? this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n            this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n            return;\n        }\n        this._doRender({\n            lastRenderPosition: this._primaryCursorPosition,\n            top: top,\n            left: this._textAreaWrapping ? this._contentLeft : left,\n            width: this._textAreaWidth,\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: false\n        });\n    }\n    _newlinecount(text) {\n        let result = 0;\n        let startIndex = -1;\n        do {\n            startIndex = text.indexOf('\\n', startIndex + 1);\n            if (startIndex === -1) {\n                break;\n            }\n            result++;\n        } while (true);\n        return result;\n    }\n    _renderAtTopLeft() {\n        // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n        // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n        this._doRender({\n            lastRenderPosition: null,\n            top: 0,\n            left: 0,\n            width: this._textAreaWidth,\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: true\n        });\n    }\n    _doRender(renderData) {\n        this._lastRenderPosition = renderData.lastRenderPosition;\n        const ta = this.textArea;\n        const tac = this.textAreaCover;\n        applyFontInfo(ta, this._fontInfo);\n        ta.setTop(renderData.top);\n        ta.setLeft(renderData.left);\n        ta.setWidth(renderData.width);\n        ta.setHeight(renderData.height);\n        ta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n        ta.setFontStyle(renderData.italic ? 'italic' : '');\n        if (renderData.bold) {\n            // fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n            ta.setFontWeight('bold');\n        }\n        ta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n        tac.setTop(renderData.useCover ? renderData.top : 0);\n        tac.setLeft(renderData.useCover ? renderData.left : 0);\n        tac.setWidth(renderData.useCover ? renderData.width : 0);\n        tac.setHeight(renderData.useCover ? renderData.height : 0);\n        const options = this._context.configuration.options;\n        if (options.get(57 /* EditorOption.glyphMargin */)) {\n            tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n        }\n        else {\n            if (options.get(68 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */) {\n                tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n            }\n            else {\n                tac.setClassName('monaco-editor-background textAreaCover');\n            }\n        }\n    }\n};\nTextAreaHandler = __decorate([\n    __param(3, IKeybindingService),\n    __param(4, IInstantiationService)\n], TextAreaHandler);\nexport { TextAreaHandler };\nfunction measureText(targetDocument, text, fontInfo, tabSize) {\n    if (text.length === 0) {\n        return 0;\n    }\n    const container = targetDocument.createElement('div');\n    container.style.position = 'absolute';\n    container.style.top = '-50000px';\n    container.style.width = '50000px';\n    const regularDomNode = targetDocument.createElement('span');\n    applyFontInfo(regularDomNode, fontInfo);\n    regularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n    regularDomNode.style.tabSize = `${tabSize * fontInfo.spaceWidth}px`; // just like the textarea\n    regularDomNode.append(text);\n    container.appendChild(regularDomNode);\n    targetDocument.body.appendChild(container);\n    const res = regularDomNode.offsetWidth;\n    container.remove();\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { isFirefox } from '../../base/browser/browser.js';\nimport * as types from '../../base/common/types.js';\nimport { status } from '../../base/browser/ui/aria/aria.js';\nimport { Command, EditorCommand, registerEditorCommand, UndoCommand, RedoCommand, SelectAllCommand } from './editorExtensions.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { ColumnSelection } from '../common/cursor/cursorColumnSelection.js';\nimport { CursorState } from '../common/cursorCommon.js';\nimport { DeleteOperations } from '../common/cursor/cursorDeleteOperations.js';\nimport { CursorMove as CursorMove_, CursorMoveCommands } from '../common/cursor/cursorMoveCommands.js';\nimport { TypeOperations } from '../common/cursor/cursorTypeOperations.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { EditorContextKeys } from '../common/editorContextKeys.js';\nimport { ContextKeyExpr } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nimport { EnterOperation } from '../common/cursor/cursorTypeEditOperations.js';\nconst CORE_WEIGHT = 0 /* KeybindingWeight.EditorCore */;\nexport class CoreEditorCommand extends EditorCommand {\n    runEditorCommand(accessor, editor, args) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            // the editor has no view => has no cursors\n            return;\n        }\n        this.runCoreEditorCommand(viewModel, args || {});\n    }\n}\nexport var EditorScroll_;\n(function (EditorScroll_) {\n    const isEditorScrollArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const scrollArg = arg;\n        if (!types.isString(scrollArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\n            return false;\n        }\n        return true;\n    };\n    EditorScroll_.metadata = {\n        description: 'Scroll editor in the given direction',\n        args: [\n            {\n                name: 'Editor scroll argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory direction value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'page', 'halfPage', 'editor'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\n\t\t\t\t`,\n                constraint: isEditorScrollArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['to'],\n                    'properties': {\n                        'to': {\n                            'type': 'string',\n                            'enum': ['up', 'down']\n                        },\n                        'by': {\n                            'type': 'string',\n                            'enum': ['line', 'wrappedLine', 'page', 'halfPage', 'editor']\n                        },\n                        'value': {\n                            'type': 'number',\n                            'default': 1\n                        },\n                        'revealCursor': {\n                            'type': 'boolean',\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Directions in the view for editor scroll command.\n     */\n    EditorScroll_.RawDirection = {\n        Up: 'up',\n        Right: 'right',\n        Down: 'down',\n        Left: 'left'\n    };\n    /**\n     * Units for editor scroll 'by' argument\n     */\n    EditorScroll_.RawUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Page: 'page',\n        HalfPage: 'halfPage',\n        Editor: 'editor',\n        Column: 'column'\n    };\n    function parse(args) {\n        let direction;\n        switch (args.to) {\n            case EditorScroll_.RawDirection.Up:\n                direction = 1 /* Direction.Up */;\n                break;\n            case EditorScroll_.RawDirection.Right:\n                direction = 2 /* Direction.Right */;\n                break;\n            case EditorScroll_.RawDirection.Down:\n                direction = 3 /* Direction.Down */;\n                break;\n            case EditorScroll_.RawDirection.Left:\n                direction = 4 /* Direction.Left */;\n                break;\n            default:\n                // Illegal arguments\n                return null;\n        }\n        let unit;\n        switch (args.by) {\n            case EditorScroll_.RawUnit.Line:\n                unit = 1 /* Unit.Line */;\n                break;\n            case EditorScroll_.RawUnit.WrappedLine:\n                unit = 2 /* Unit.WrappedLine */;\n                break;\n            case EditorScroll_.RawUnit.Page:\n                unit = 3 /* Unit.Page */;\n                break;\n            case EditorScroll_.RawUnit.HalfPage:\n                unit = 4 /* Unit.HalfPage */;\n                break;\n            case EditorScroll_.RawUnit.Editor:\n                unit = 5 /* Unit.Editor */;\n                break;\n            case EditorScroll_.RawUnit.Column:\n                unit = 6 /* Unit.Column */;\n                break;\n            default:\n                unit = 2 /* Unit.WrappedLine */;\n        }\n        const value = Math.floor(args.value || 1);\n        const revealCursor = !!args.revealCursor;\n        return {\n            direction: direction,\n            unit: unit,\n            value: value,\n            revealCursor: revealCursor,\n            select: (!!args.select)\n        };\n    }\n    EditorScroll_.parse = parse;\n})(EditorScroll_ || (EditorScroll_ = {}));\nexport var RevealLine_;\n(function (RevealLine_) {\n    const isRevealLineArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const reveaLineArg = arg;\n        if (!types.isNumber(reveaLineArg.lineNumber) && !types.isString(reveaLineArg.lineNumber)) {\n            return false;\n        }\n        if (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\n            return false;\n        }\n        return true;\n    };\n    RevealLine_.metadata = {\n        description: 'Reveal the given line at the given logical position',\n        args: [\n            {\n                name: 'Reveal line argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'lineNumber': A mandatory line number value.\n\t\t\t\t\t* 'at': Logical position at which line has to be revealed.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'top', 'center', 'bottom'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t`,\n                constraint: isRevealLineArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['lineNumber'],\n                    'properties': {\n                        'lineNumber': {\n                            'type': ['number', 'string'],\n                        },\n                        'at': {\n                            'type': 'string',\n                            'enum': ['top', 'center', 'bottom']\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Values for reveal line 'at' argument\n     */\n    RevealLine_.RawAtArgument = {\n        Top: 'top',\n        Center: 'center',\n        Bottom: 'bottom'\n    };\n})(RevealLine_ || (RevealLine_ = {}));\nclass EditorOrNativeTextInputCommand {\n    constructor(target) {\n        // 1. handle case when focus is in editor.\n        target.addImplementation(10000, 'code-editor', (accessor, args) => {\n            // Only if editor text focus (i.e. not if editor has widget focus).\n            const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n            if (focusedEditor && focusedEditor.hasTextFocus()) {\n                return this._runEditorCommand(accessor, focusedEditor, args);\n            }\n            return false;\n        });\n        // 2. handle case when focus is in some other `input` / `textarea`.\n        target.addImplementation(1000, 'generic-dom-input-textarea', (accessor, args) => {\n            // Only if focused on an element that allows for entering text\n            const activeElement = getActiveElement();\n            if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n                this.runDOMCommand(activeElement);\n                return true;\n            }\n            return false;\n        });\n        // 3. (default) handle case when focus is somewhere else.\n        target.addImplementation(0, 'generic-dom', (accessor, args) => {\n            // Redirecting to active editor\n            const activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\n            if (activeEditor) {\n                activeEditor.focus();\n                return this._runEditorCommand(accessor, activeEditor, args);\n            }\n            return false;\n        });\n    }\n    _runEditorCommand(accessor, editor, args) {\n        const result = this.runEditorCommand(accessor, editor, args);\n        if (result) {\n            return result;\n        }\n        return true;\n    }\n}\nexport var CoreNavigationCommands;\n(function (CoreNavigationCommands) {\n    class BaseMoveToCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            const cursorStateChanged = viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (cursorStateChanged && args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealAllCursors(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.MoveTo = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveTo',\n        inSelectionMode: false,\n        precondition: undefined\n    }));\n    CoreNavigationCommands.MoveToSelect = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveToSelect',\n        inSelectionMode: true,\n        precondition: undefined\n    }));\n    class ColumnSelectCommand extends CoreEditorCommand {\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            const result = this._getColumnSelectResult(viewModel, viewModel.getPrimaryCursorState(), viewModel.getCursorColumnSelectData(), args);\n            if (result === null) {\n                // invalid arguments\n                return;\n            }\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, result.viewStates.map((viewState) => CursorState.fromViewState(viewState)));\n            viewModel.setCursorColumnSelectData({\n                isReal: true,\n                fromViewLineNumber: result.fromLineNumber,\n                fromViewVisualColumn: result.fromVisualColumn,\n                toViewLineNumber: result.toLineNumber,\n                toViewVisualColumn: result.toVisualColumn\n            });\n            if (result.reversed) {\n                viewModel.revealTopMostCursor(args.source);\n            }\n            else {\n                viewModel.revealBottomMostCursor(args.source);\n            }\n        }\n    }\n    CoreNavigationCommands.ColumnSelect = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'columnSelect',\n                precondition: undefined\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            if (typeof args.position === 'undefined' || typeof args.viewPosition === 'undefined' || typeof args.mouseColumn === 'undefined') {\n                return null;\n            }\n            // validate `args`\n            const validatedPosition = viewModel.model.validatePosition(args.position);\n            const validatedViewPosition = viewModel.coordinatesConverter.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\n            const fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\n            const fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\n            return ColumnSelection.columnSelect(viewModel.cursorConfig, viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectLeft = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectLeft(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectRight = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectRight(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    class ColumnSelectUpCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectUp(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */,\n            linux: { primary: 0 }\n        }\n    }));\n    class ColumnSelectDownCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectDown(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */,\n            linux: { primary: 0 }\n        }\n    }));\n    class CursorMoveImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cursorMove',\n                precondition: undefined,\n                metadata: CursorMove_.metadata\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = CursorMove_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            this._runCursorMove(viewModel, args.source, parsed);\n        }\n        _runCursorMove(viewModel, source, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, CursorMoveImpl._move(viewModel, viewModel.getCursorStates(), args));\n            viewModel.revealAllCursors(source, true);\n        }\n        static _move(viewModel, cursors, args) {\n            const inSelectionMode = args.select;\n            const value = args.value;\n            switch (args.direction) {\n                case 0 /* CursorMove_.Direction.Left */:\n                case 1 /* CursorMove_.Direction.Right */:\n                case 2 /* CursorMove_.Direction.Up */:\n                case 3 /* CursorMove_.Direction.Down */:\n                case 4 /* CursorMove_.Direction.PrevBlankLine */:\n                case 5 /* CursorMove_.Direction.NextBlankLine */:\n                case 6 /* CursorMove_.Direction.WrappedLineStart */:\n                case 7 /* CursorMove_.Direction.WrappedLineFirstNonWhitespaceCharacter */:\n                case 8 /* CursorMove_.Direction.WrappedLineColumnCenter */:\n                case 9 /* CursorMove_.Direction.WrappedLineEnd */:\n                case 10 /* CursorMove_.Direction.WrappedLineLastNonWhitespaceCharacter */:\n                    return CursorMoveCommands.simpleMove(viewModel, cursors, args.direction, inSelectionMode, value, args.unit);\n                case 11 /* CursorMove_.Direction.ViewPortTop */:\n                case 13 /* CursorMove_.Direction.ViewPortBottom */:\n                case 12 /* CursorMove_.Direction.ViewPortCenter */:\n                case 14 /* CursorMove_.Direction.ViewPortIfOutside */:\n                    return CursorMoveCommands.viewportMove(viewModel, cursors, args.direction, inSelectionMode, value);\n                default:\n                    return null;\n            }\n        }\n    }\n    CoreNavigationCommands.CursorMoveImpl = CursorMoveImpl;\n    CoreNavigationCommands.CursorMove = registerEditorCommand(new CursorMoveImpl());\n    class CursorMoveBasedCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._staticArgs = opts.args;\n        }\n        runCoreEditorCommand(viewModel, dynamicArgs) {\n            let args = this._staticArgs;\n            if (this._staticArgs.value === -1 /* Constants.PAGE_SIZE_MARKER */) {\n                // -1 is a marker for page size\n                args = {\n                    direction: this._staticArgs.direction,\n                    unit: this._staticArgs.unit,\n                    select: this._staticArgs.select,\n                    value: dynamicArgs.pageSize || viewModel.cursorConfig.pageSize\n                };\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(dynamicArgs.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.simpleMove(viewModel, viewModel.getCursorStates(), args.direction, args.select, args.value, args.unit));\n            viewModel.revealAllCursors(dynamicArgs.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorLeft = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorLeft',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 15 /* KeyCode.LeftArrow */,\n            mac: { primary: 15 /* KeyCode.LeftArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 32 /* KeyCode.KeyB */] }\n        }\n    }));\n    CoreNavigationCommands.CursorLeftSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorLeftSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorRight = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorRight',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 17 /* KeyCode.RightArrow */,\n            mac: { primary: 17 /* KeyCode.RightArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 36 /* KeyCode.KeyF */] }\n        }\n    }));\n    CoreNavigationCommands.CursorRightSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorRightSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 16 /* KeyCode.UpArrow */,\n            mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n        }\n    }));\n    CoreNavigationCommands.CursorUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorPageUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 18 /* KeyCode.DownArrow */,\n            mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n        }\n    }));\n    CoreNavigationCommands.CursorDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CursorPageDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CreateCursor = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'createCursor',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            let newState;\n            if (args.wholeLine) {\n                newState = CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            else {\n                newState = CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            const states = viewModel.getCursorStates();\n            // Check if we should remove a cursor (sort of like a toggle)\n            if (states.length > 1) {\n                const newModelPosition = (newState.modelState ? newState.modelState.position : null);\n                const newViewPosition = (newState.viewState ? newState.viewState.position : null);\n                for (let i = 0, len = states.length; i < len; i++) {\n                    const state = states[i];\n                    if (newModelPosition && !state.modelState.selection.containsPosition(newModelPosition)) {\n                        continue;\n                    }\n                    if (newViewPosition && !state.viewState.selection.containsPosition(newViewPosition)) {\n                        continue;\n                    }\n                    // => Remove the cursor\n                    states.splice(i, 1);\n                    viewModel.model.pushStackElement();\n                    viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n                    return;\n                }\n            }\n            // => Add the new cursor\n            states.push(newState);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n        }\n    });\n    CoreNavigationCommands.LastCursorMoveToSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: '_lastCursorMoveToSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(viewModel, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class HomeCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorHome = registerEditorCommand(new HomeCommand({\n        inSelectionMode: false,\n        id: 'cursorHome',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 14 /* KeyCode.Home */,\n            mac: { primary: 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    CoreNavigationCommands.CursorHomeSelect = registerEditorCommand(new HomeCommand({\n        inSelectionMode: true,\n        id: 'cursorHomeSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    class LineStartCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel.getCursorStates()));\n            viewModel.revealAllCursors(args.source, true);\n        }\n        _exec(cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, 1, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineStart = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: false,\n        id: 'cursorLineStart',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineStartSelect = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: true,\n        id: 'cursorLineStartSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    class EndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode, args.sticky || false));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorEnd = registerEditorCommand(new EndCommand({\n        inSelectionMode: false,\n        id: 'cursorEnd',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 13 /* KeyCode.End */,\n            mac: { primary: 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */] }\n        },\n        metadata: {\n            description: `Go to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    CoreNavigationCommands.CursorEndSelect = registerEditorCommand(new EndCommand({\n        inSelectionMode: true,\n        id: 'cursorEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */] }\n        },\n        metadata: {\n            description: `Select to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    class LineEndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel, viewModel.getCursorStates()));\n            viewModel.revealAllCursors(args.source, true);\n        }\n        _exec(viewModel, cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                const maxColumn = viewModel.model.getLineMaxColumn(lineNumber);\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, maxColumn, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineEnd = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: false,\n        id: 'cursorLineEnd',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineEndSelect = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: true,\n        id: 'cursorLineEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    class TopCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorTop = registerEditorCommand(new TopCommand({\n        inSelectionMode: false,\n        id: 'cursorTop',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorTopSelect = registerEditorCommand(new TopCommand({\n        inSelectionMode: true,\n        id: 'cursorTopSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    class BottomCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorBottom = registerEditorCommand(new BottomCommand({\n        inSelectionMode: false,\n        id: 'cursorBottom',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorBottomSelect = registerEditorCommand(new BottomCommand({\n        inSelectionMode: true,\n        id: 'cursorBottomSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    class EditorScrollImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'editorScroll',\n                precondition: undefined,\n                metadata: EditorScroll_.metadata\n            });\n        }\n        determineScrollMethod(args) {\n            const horizontalUnits = [6 /* EditorScroll_.Unit.Column */];\n            const verticalUnits = [\n                1 /* EditorScroll_.Unit.Line */,\n                2 /* EditorScroll_.Unit.WrappedLine */,\n                3 /* EditorScroll_.Unit.Page */,\n                4 /* EditorScroll_.Unit.HalfPage */,\n                5 /* EditorScroll_.Unit.Editor */,\n                6 /* EditorScroll_.Unit.Column */\n            ];\n            const horizontalDirections = [4 /* EditorScroll_.Direction.Left */, 2 /* EditorScroll_.Direction.Right */];\n            const verticalDirections = [1 /* EditorScroll_.Direction.Up */, 3 /* EditorScroll_.Direction.Down */];\n            if (horizontalUnits.includes(args.unit) && horizontalDirections.includes(args.direction)) {\n                return this._runHorizontalEditorScroll.bind(this);\n            }\n            if (verticalUnits.includes(args.unit) && verticalDirections.includes(args.direction)) {\n                return this._runVerticalEditorScroll.bind(this);\n            }\n            return null;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = EditorScroll_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            const runEditorScroll = this.determineScrollMethod(parsed);\n            if (!runEditorScroll) {\n                // Incompatible unit and direction\n                return;\n            }\n            runEditorScroll(viewModel, args.source, parsed);\n        }\n        _runVerticalEditorScroll(viewModel, source, args) {\n            const desiredScrollTop = this._computeDesiredScrollTop(viewModel, args);\n            if (args.revealCursor) {\n                // must ensure cursor is in new visible range\n                const desiredVisibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\n                viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, [\n                    CursorMoveCommands.findPositionInViewportIfOutside(viewModel, viewModel.getPrimaryCursorState(), desiredVisibleViewRange, args.select)\n                ]);\n            }\n            viewModel.viewLayout.setScrollPosition({ scrollTop: desiredScrollTop }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollTop(viewModel, args) {\n            if (args.unit === 1 /* EditorScroll_.Unit.Line */) {\n                // scrolling by model lines\n                const futureViewport = viewModel.viewLayout.getFutureViewport();\n                const visibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(futureViewport.top);\n                const visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n                let desiredTopModelLineNumber;\n                if (args.direction === 1 /* EditorScroll_.Direction.Up */) {\n                    // must go x model lines up\n                    desiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\n                }\n                else {\n                    // must go x model lines down\n                    desiredTopModelLineNumber = Math.min(viewModel.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\n                }\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n            }\n            if (args.unit === 5 /* EditorScroll_.Unit.Editor */) {\n                let desiredTopModelLineNumber = 0;\n                if (args.direction === 3 /* EditorScroll_.Direction.Down */) {\n                    desiredTopModelLineNumber = viewModel.model.getLineCount() - viewModel.cursorConfig.pageSize;\n                }\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(desiredTopModelLineNumber);\n            }\n            let noOfLines;\n            if (args.unit === 3 /* EditorScroll_.Unit.Page */) {\n                noOfLines = viewModel.cursorConfig.pageSize * args.value;\n            }\n            else if (args.unit === 4 /* EditorScroll_.Unit.HalfPage */) {\n                noOfLines = Math.round(viewModel.cursorConfig.pageSize / 2) * args.value;\n            }\n            else {\n                noOfLines = args.value;\n            }\n            const deltaLines = (args.direction === 1 /* EditorScroll_.Direction.Up */ ? -1 : 1) * noOfLines;\n            return viewModel.viewLayout.getCurrentScrollTop() + deltaLines * viewModel.cursorConfig.lineHeight;\n        }\n        _runHorizontalEditorScroll(viewModel, source, args) {\n            const desiredScrollLeft = this._computeDesiredScrollLeft(viewModel, args);\n            viewModel.viewLayout.setScrollPosition({ scrollLeft: desiredScrollLeft }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollLeft(viewModel, args) {\n            const deltaColumns = (args.direction === 4 /* EditorScroll_.Direction.Left */ ? -1 : 1) * args.value;\n            return viewModel.viewLayout.getCurrentScrollLeft() + deltaColumns * viewModel.cursorConfig.typicalHalfwidthCharacterWidth;\n        }\n    }\n    CoreNavigationCommands.EditorScrollImpl = EditorScrollImpl;\n    CoreNavigationCommands.EditorScroll = registerEditorCommand(new EditorScrollImpl());\n    CoreNavigationCommands.ScrollLineUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorTop = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorTop',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLineDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorBottom = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorBottom',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLeft = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Left,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollRight = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Right,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    class WordCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.word(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealAllCursors(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.WordSelect = registerEditorCommand(new WordCommand({\n        inSelectionMode: false,\n        id: '_wordSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.WordSelectDrag = registerEditorCommand(new WordCommand({\n        inSelectionMode: true,\n        id: '_wordSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorWordSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'lastCursorWordSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            const lastAddedState = states[lastAddedCursorIndex];\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.word(viewModel, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class LineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealAllCursors(args.source, false, true);\n            }\n        }\n    }\n    CoreNavigationCommands.LineSelect = registerEditorCommand(new LineCommand({\n        inSelectionMode: false,\n        id: '_lineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LineSelectDrag = registerEditorCommand(new LineCommand({\n        inSelectionMode: true,\n        id: '_lineSelectDrag',\n        precondition: undefined\n    }));\n    class LastCursorLineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.line(viewModel, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    }\n    CoreNavigationCommands.LastCursorLineSelect = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: false,\n        id: 'lastCursorLineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorLineSelectDrag = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: true,\n        id: 'lastCursorLineSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.CancelSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cancelSelection',\n                precondition: EditorContextKeys.hasNonEmptySelection,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.cancelSelection(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n            viewModel.revealAllCursors(args.source, true);\n        }\n    });\n    CoreNavigationCommands.RemoveSecondaryCursors = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'removeSecondaryCursors',\n                precondition: EditorContextKeys.hasMultipleSelections,\n                kbOpts: {\n                    weight: CORE_WEIGHT + 1,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                viewModel.getPrimaryCursorState()\n            ]);\n            viewModel.revealAllCursors(args.source, true);\n            status(nls.localize('removedCursor', \"Removed secondary cursors\"));\n        }\n    });\n    CoreNavigationCommands.RevealLine = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'revealLine',\n                precondition: undefined,\n                metadata: RevealLine_.metadata\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const revealLineArg = args;\n            const lineNumberArg = revealLineArg.lineNumber || 0;\n            let lineNumber = typeof lineNumberArg === 'number' ? (lineNumberArg + 1) : (parseInt(lineNumberArg) + 1);\n            if (lineNumber < 1) {\n                lineNumber = 1;\n            }\n            const lineCount = viewModel.model.getLineCount();\n            if (lineNumber > lineCount) {\n                lineNumber = lineCount;\n            }\n            const range = new Range(lineNumber, 1, lineNumber, viewModel.model.getLineMaxColumn(lineNumber));\n            let revealAt = 0 /* VerticalRevealType.Simple */;\n            if (revealLineArg.at) {\n                switch (revealLineArg.at) {\n                    case RevealLine_.RawAtArgument.Top:\n                        revealAt = 3 /* VerticalRevealType.Top */;\n                        break;\n                    case RevealLine_.RawAtArgument.Center:\n                        revealAt = 1 /* VerticalRevealType.Center */;\n                        break;\n                    case RevealLine_.RawAtArgument.Bottom:\n                        revealAt = 4 /* VerticalRevealType.Bottom */;\n                        break;\n                    default:\n                        break;\n                }\n            }\n            const viewRange = viewModel.coordinatesConverter.convertModelRangeToViewRange(range);\n            viewModel.revealRange(args.source, false, viewRange, revealAt, 0 /* ScrollType.Smooth */);\n        }\n    });\n    CoreNavigationCommands.SelectAll = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(SelectAllCommand);\n        }\n        runDOMCommand(activeElement) {\n            if (isFirefox) {\n                activeElement.focus();\n                activeElement.select();\n            }\n            activeElement.ownerDocument.execCommand('selectAll');\n        }\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditorCommand(viewModel, args);\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates('keyboard', 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.selectAll(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n        }\n    }();\n    CoreNavigationCommands.SetSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'setSelection',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.selection) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorState.fromModelSelection(args.selection)\n            ]);\n        }\n    });\n})(CoreNavigationCommands || (CoreNavigationCommands = {}));\nconst columnSelectionCondition = ContextKeyExpr.and(EditorContextKeys.textInputFocus, EditorContextKeys.columnSelection);\nfunction registerColumnSelection(id, keybinding) {\n    KeybindingsRegistry.registerKeybindingRule({\n        id: id,\n        primary: keybinding,\n        when: columnSelectionCondition,\n        weight: CORE_WEIGHT + 1\n    });\n}\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectLeft.id, 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectRight.id, 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectUp.id, 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageUp.id, 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectDown.id, 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageDown.id, 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport var CoreEditingCommands;\n(function (CoreEditingCommands) {\n    class CoreEditingCommand extends EditorCommand {\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditingCommand(editor, viewModel, args || {});\n        }\n    }\n    CoreEditingCommands.CoreEditingCommand = CoreEditingCommand;\n    CoreEditingCommands.LineBreakInsert = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'lineBreakInsert',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 0,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 45 /* KeyCode.KeyO */ }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, EnterOperation.lineBreakInsert(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n        }\n    });\n    CoreEditingCommands.Outdent = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'outdent',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.outdent(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.Tab = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'tab',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.tab(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.DeleteLeft = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 1 /* KeyCode.Backspace */,\n                    secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */],\n                    mac: { primary: 1 /* KeyCode.Backspace */, secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */, 256 /* KeyMod.WinCtrl */ | 38 /* KeyCode.KeyH */, 256 /* KeyMod.WinCtrl */ | 1 /* KeyCode.Backspace */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteLeft(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection), viewModel.getCursorAutoClosedCharacters());\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(2 /* EditOperationType.DeletingLeft */);\n        }\n    });\n    CoreEditingCommands.DeleteRight = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 20 /* KeyCode.Delete */,\n                    mac: { primary: 20 /* KeyCode.Delete */, secondary: [256 /* KeyMod.WinCtrl */ | 34 /* KeyCode.KeyD */, 256 /* KeyMod.WinCtrl */ | 20 /* KeyCode.Delete */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteRight(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection));\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(3 /* EditOperationType.DeletingRight */);\n        }\n    });\n    CoreEditingCommands.Undo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(UndoCommand);\n        }\n        runDOMCommand(activeElement) {\n            activeElement.ownerDocument.execCommand('undo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(92 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().undo();\n        }\n    }();\n    CoreEditingCommands.Redo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(RedoCommand);\n        }\n        runDOMCommand(activeElement) {\n            activeElement.ownerDocument.execCommand('redo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(92 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().redo();\n        }\n    }();\n})(CoreEditingCommands || (CoreEditingCommands = {}));\n/**\n * A command that will invoke a command on the focused editor.\n */\nclass EditorHandlerCommand extends Command {\n    constructor(id, handlerId, metadata) {\n        super({\n            id: id,\n            precondition: undefined,\n            metadata\n        });\n        this._handlerId = handlerId;\n    }\n    runCommand(accessor, args) {\n        const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (!editor) {\n            return;\n        }\n        editor.trigger('keyboard', this._handlerId, args);\n    }\n}\nfunction registerOverwritableCommand(handlerId, metadata) {\n    registerCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\n    registerCommand(new EditorHandlerCommand(handlerId, handlerId, metadata));\n}\nregisterOverwritableCommand(\"type\" /* Handler.Type */, {\n    description: `Type`,\n    args: [{\n            name: 'args',\n            schema: {\n                'type': 'object',\n                'required': ['text'],\n                'properties': {\n                    'text': {\n                        'type': 'string'\n                    }\n                },\n            }\n        }]\n});\nregisterOverwritableCommand(\"replacePreviousChar\" /* Handler.ReplacePreviousChar */);\nregisterOverwritableCommand(\"compositionType\" /* Handler.CompositionType */);\nregisterOverwritableCommand(\"compositionStart\" /* Handler.CompositionStart */);\nregisterOverwritableCommand(\"compositionEnd\" /* Handler.CompositionEnd */);\nregisterOverwritableCommand(\"paste\" /* Handler.Paste */);\nregisterOverwritableCommand(\"cut\" /* Handler.Cut */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(78 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(78 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(108 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(22 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position, data.revealType);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position, data.revealType);\n                    }\n                    else {\n                        this._wordSelect(data.position, data.revealType);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position, data.revealType);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position, data.revealType);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position, data.revealType);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition, revealType) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition,\n            revealType\n        };\n    }\n    moveTo(viewPosition, revealType) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _moveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorWordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(_lineFactory) {\n        this._lineFactory = _lineFactory;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._lineFactory.createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(_lineFactory) {\n        this._lineFactory = _lineFactory;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(this._lineFactory);\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                lineDomNode?.remove();\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                lineDomNode?.remove();\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._lineFactory, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    static { this._ttPolicy = createTrustedTypesPolicy('editorViewLayer', { createHTML: value => value }); }\n    constructor(_domNode, _lineFactory, _viewportData) {\n        this._domNode = _domNode;\n        this._lineFactory = _lineFactory;\n        this._viewportData = _viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this._lineFactory.createLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN], this._viewportData.lineHeight);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this._lineFactory.createLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            lineDomNode?.remove();\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this._lineFactory.createLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            lineDomNode?.remove();\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this._domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this._domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this._domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    static { this._sb = new StringBuilder(100000); }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this._viewportData.lineHeight, this._viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this._viewportData.lineHeight, this._viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this._visibleLines = new VisibleLinesCollection({\n            createLine: () => new ViewOverlayLine(this._dynamicOverlays)\n        });\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(dynamicOverlays) {\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop, lineHeight) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../../common/core/position.js';\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        this.onKeyDown?.(e);\n    }\n    emitKeyUp(e) {\n        this.onKeyUp?.(e);\n    }\n    emitContextMenu(e) {\n        this.onContextMenu?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        this.onMouseMove?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        this.onMouseLeave?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        this.onMouseDown?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        this.onMouseUp?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        this.onMouseDrag?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        this.onMouseDrop?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        this.onMouseDropCanceled?.();\n    }\n    emitMouseWheel(e) {\n        this.onMouseWheel?.(e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = { ...target };\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        if (result.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */ || result.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            result.detail = this.convertViewToModelViewZoneData(result.detail, coordinatesConverter);\n        }\n        return result;\n    }\n    static convertViewToModelViewZoneData(data, coordinatesConverter) {\n        return {\n            viewZoneId: data.viewZoneId,\n            positionBefore: data.positionBefore ? coordinatesConverter.convertViewPositionToModelPosition(data.positionBefore) : data.positionBefore,\n            positionAfter: data.positionAfter ? coordinatesConverter.convertViewPositionToModelPosition(data.positionAfter) : data.positionAfter,\n            position: coordinatesConverter.convertViewPositionToModelPosition(data.position),\n            afterLineNumber: coordinatesConverter.convertViewPositionToModelPosition(new Position(data.afterLineNumber, 1)).lineNumber,\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.blocks = [];\n        this.contentWidth = -1;\n        this.contentLeft = 0;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('blockDecorations-container');\n        this.update();\n    }\n    update() {\n        let didChange = false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n        if (this.contentWidth !== newContentWidth) {\n            this.contentWidth = newContentWidth;\n            didChange = true;\n        }\n        const newContentLeft = layoutInfo.contentLeft;\n        if (this.contentLeft !== newContentLeft) {\n            this.contentLeft = newContentLeft;\n            didChange = true;\n        }\n        return didChange;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return this.update();\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollLeftChanged;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        let count = 0;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const decoration of decorations) {\n            if (!decoration.options.blockClassName) {\n                continue;\n            }\n            let block = this.blocks[count];\n            if (!block) {\n                block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n                this.domNode.appendChild(block);\n            }\n            let top;\n            let bottom;\n            if (decoration.options.blockIsAfterEnd) {\n                // range must be empty\n                top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n                bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            else {\n                top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n                bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n                    ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n                    : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            const [paddingTop, paddingRight, paddingBottom, paddingLeft] = decoration.options.blockPadding ?? [0, 0, 0, 0];\n            block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n            block.setLeft(this.contentLeft - paddingLeft);\n            block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n            block.setTop(top - ctx.scrollTop - paddingTop);\n            block.setHeight(bottom - top + paddingTop + paddingBottom);\n            count++;\n        }\n        for (let i = count; i < this.blocks.length; i++) {\n            this.blocks[i].domNode.remove();\n        }\n        this.blocks.length = count;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewContentWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        this._widgets = {};\n        this.domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n        this.domNode.setClassName('contentWidgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLineMappingChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesDeleted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesInserted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _updateAnchorsViewPositions() {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].updateAnchorViewPosition();\n        }\n    }\n    addWidget(_widget) {\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n        const myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n        this.setShouldRender();\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            const domNode = myWidget.domNode.domNode;\n            domNode.remove();\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    }\n    shouldSuppressMouseDownOnWidget(widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    }\n    onBeforeRender(viewportData) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    }\n    prepareRender(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].render(ctx);\n        }\n    }\n}\nclass Widget {\n    constructor(context, viewDomNode, actual) {\n        this._primaryAnchor = new PositionPair(null, null);\n        this._secondaryAnchor = new PositionPair(null, null);\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._fixedOverflowWidgets = options.get(42 /* EditorOption.fixedOverflowWidgets */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._affinity = null;\n        this._preference = [];\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setDisplay('none');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n            this._contentLeft = layoutInfo.contentLeft;\n            this._contentWidth = layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    }\n    updateAnchorViewPosition() {\n        this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n    _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n        this._affinity = affinity;\n        this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n        this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n        function getValidPositionPair(position, viewModel, affinity) {\n            if (!position) {\n                return new PositionPair(null, null);\n            }\n            // Do not trust that widgets give a valid position\n            const validModelPosition = viewModel.model.validatePosition(position);\n            if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity ?? undefined);\n                return new PositionPair(position, viewPosition);\n            }\n            return new PositionPair(position, null);\n        }\n    }\n    _getMaxWidth() {\n        const elDocument = this.domNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        return (this.allowEditorOverflow\n            ? elWindow?.innerWidth || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n            : this._contentWidth);\n    }\n    setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n        this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n        this._preference = preference;\n        if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n            // this content widget would like to be visible if possible\n            // we change it from `display:none` to `display:block` even if it\n            // might be outside the viewport such that we can measure its size\n            // in `prepareRender`\n            this.domNode.setDisplay('block');\n        }\n        else {\n            this.domNode.setDisplay('none');\n        }\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n    }\n    _layoutBoxInViewport(anchor, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        const aboveLineTop = anchor.top;\n        const heightAvailableAboveLine = aboveLineTop;\n        // b) the box under the line\n        const underLineTop = anchor.top + anchor.height;\n        const heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n        const aboveTop = aboveLineTop - height;\n        const fitsAbove = (heightAvailableAboveLine >= height);\n        const belowTop = underLineTop;\n        const fitsBelow = (heightAvailableUnderLine >= height);\n        // And its left\n        let left = anchor.left;\n        if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n            left = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (left < ctx.scrollLeft) {\n            left = ctx.scrollLeft;\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n        // Leave some clearance to the left/right\n        const LEFT_PADDING = 15;\n        const RIGHT_PADDING = 15;\n        // Initially, the limits are defined as the dom node limits\n        const MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        let absoluteLeft = domNodePosition.left + left - (elWindow?.scrollX ?? 0);\n        if (absoluteLeft + width > MAX_LIMIT) {\n            const delta = absoluteLeft - (MAX_LIMIT - width);\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        if (absoluteLeft < MIN_LIMIT) {\n            const delta = absoluteLeft - MIN_LIMIT;\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        return [left, absoluteLeft];\n    }\n    _layoutBoxInPage(anchor, width, height, ctx) {\n        const aboveTop = anchor.top - height;\n        const belowTop = anchor.top + anchor.height;\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        const absoluteAboveTop = domNodePosition.top + aboveTop - (elWindow?.scrollY ?? 0);\n        const absoluteBelowTop = domNodePosition.top + belowTop - (elWindow?.scrollY ?? 0);\n        const windowSize = dom.getClientArea(elDocument.body);\n        const [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n        // Leave some clearance to the top/bottom\n        const TOP_PADDING = 22;\n        const BOTTOM_PADDING = 22;\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n        if (this._fixedOverflowWidgets) {\n            return {\n                fitsAbove,\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n                fitsBelow,\n                belowTop: absoluteBelowTop,\n                left: absoluteAboveLeft\n            };\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n    _getAnchorsCoordinates(ctx) {\n        const primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n        const secondaryViewPosition = (this._secondaryAnchor.viewPosition?.lineNumber === this._primaryAnchor.viewPosition?.lineNumber ? this._secondaryAnchor.viewPosition : null);\n        const secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n        return { primary, secondary };\n        function getCoordinates(position, affinity, lineHeight) {\n            if (!position) {\n                return null;\n            }\n            const horizontalPosition = ctx.visibleRangeForPosition(position);\n            if (!horizontalPosition) {\n                return null;\n            }\n            // Left-align widgets that should appear :before content\n            const left = (position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left);\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n            return new AnchorCoordinate(top, left, lineHeight);\n        }\n    }\n    _reduceAnchorCoordinates(primary, secondary, width) {\n        if (!secondary) {\n            return primary;\n        }\n        const fontInfo = this._context.configuration.options.get(50 /* EditorOption.fontInfo */);\n        let left = secondary.left;\n        if (left < primary.left) {\n            left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n        }\n        else {\n            left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n        }\n        return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n    _prepareRenderWidget(ctx) {\n        if (!this._preference || this._preference.length === 0) {\n            return null;\n        }\n        const { primary, secondary } = this._getAnchorsCoordinates(ctx);\n        if (!primary) {\n            return {\n                kind: 'offViewport',\n                preserveFocus: this.domNode.domNode.contains(this.domNode.domNode.ownerDocument.activeElement)\n            };\n            // return null;\n        }\n        if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n            let preferredDimensions = null;\n            if (typeof this._actual.beforeRender === 'function') {\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n            }\n            if (preferredDimensions) {\n                this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n                this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n            }\n            else {\n                const domNode = this.domNode.domNode;\n                const clientRect = domNode.getBoundingClientRect();\n                this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n                this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n            }\n        }\n        const anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n        let placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        for (let pass = 1; pass <= 2; pass++) {\n            for (const pref of this._preference) {\n                // placement\n                if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsAbove) {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: new Coordinate(placement.aboveTop, placement.left),\n                            position: 1 /* ContentWidgetPositionPreference.ABOVE */\n                        };\n                    }\n                }\n                else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsBelow) {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: new Coordinate(placement.belowTop, placement.left),\n                            position: 2 /* ContentWidgetPositionPreference.BELOW */\n                        };\n                    }\n                }\n                else {\n                    if (this.allowEditorOverflow) {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)),\n                            position: 0 /* ContentWidgetPositionPreference.EXACT */\n                        };\n                    }\n                    else {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: new Coordinate(anchor.top, anchor.left),\n                            position: 0 /* ContentWidgetPositionPreference.EXACT */\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    onBeforeRender(viewportData) {\n        if (!this._primaryAnchor.viewPosition || !this._preference) {\n            return;\n        }\n        if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData || this._renderData.kind === 'offViewport') {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                if (this._renderData?.kind === 'offViewport' && this._renderData.preserveFocus) {\n                    // widget wants to be shown, but it is outside of the viewport and it\n                    // has focus which we need to preserve\n                    this.domNode.setTop(-1000);\n                }\n                else {\n                    this.domNode.setVisibility('hidden');\n                }\n            }\n            if (typeof this._actual.afterRender === 'function') {\n                safeInvoke(this._actual.afterRender, this._actual, null);\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.coordinate.top);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n        if (typeof this._actual.afterRender === 'function') {\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n        }\n    }\n}\nclass PositionPair {\n    constructor(modelPosition, viewPosition) {\n        this.modelPosition = modelPosition;\n        this.viewPosition = viewPosition;\n    }\n}\nclass Coordinate {\n    constructor(top, left) {\n        this.top = top;\n        this.left = left;\n        this._coordinateBrand = undefined;\n    }\n}\nclass AnchorCoordinate {\n    constructor(top, left, height) {\n        this.top = top;\n        this.left = left;\n        this.height = height;\n        this._anchorCoordinateBrand = undefined;\n    }\n}\nfunction safeInvoke(fn, thisArg, ...args) {\n    try {\n        return fn.call(thisArg, ...args);\n    }\n    catch {\n        // ignore\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { Position } from '../../../common/core/position.js';\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._renderLineHighlight = options.get(97 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(98 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._wordWrap = layoutInfo.isViewportWrapping;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._selectionIsEmpty = true;\n        this._focused = false;\n        this._cursorLineNumbers = [1];\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderData = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    _readFromSelections() {\n        let hasChanged = false;\n        const lineNumbers = new Set();\n        for (const selection of this._selections) {\n            lineNumbers.add(selection.positionLineNumber);\n        }\n        const cursorsLineNumbers = Array.from(lineNumbers);\n        cursorsLineNumbers.sort((a, b) => a - b);\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n            this._cursorLineNumbers = cursorsLineNumbers;\n            hasChanged = true;\n        }\n        const selectionIsEmpty = this._selections.every(s => s.isEmpty());\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            hasChanged = true;\n        }\n        return hasChanged;\n    }\n    // --- begin event handlers\n    onThemeChanged(e) {\n        return this._readFromSelections();\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._renderLineHighlight = options.get(97 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(98 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._wordWrap = layoutInfo.isViewportWrapping;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return this._readFromSelections();\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        if (!this._renderLineHighlightOnlyWhenFocus) {\n            return false;\n        }\n        this._focused = e.isFocused;\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._shouldRenderThis()) {\n            this._renderData = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        // initialize renderData\n        const renderData = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            renderData[lineIndex] = '';\n        }\n        if (this._wordWrap) {\n            // do a first pass to render wrapped lines\n            const renderedLineWrapped = this._renderOne(ctx, false);\n            for (const cursorLineNumber of this._cursorLineNumbers) {\n                const coordinatesConverter = this._context.viewModel.coordinatesConverter;\n                const modelLineNumber = coordinatesConverter.convertViewPositionToModelPosition(new Position(cursorLineNumber, 1)).lineNumber;\n                const firstViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, 1)).lineNumber;\n                const lastViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, this._context.viewModel.model.getLineMaxColumn(modelLineNumber))).lineNumber;\n                const firstLine = Math.max(firstViewLineNumber, visibleStartLineNumber);\n                const lastLine = Math.min(lastViewLineNumber, visibleEndLineNumber);\n                for (let lineNumber = firstLine; lineNumber <= lastLine; lineNumber++) {\n                    const lineIndex = lineNumber - visibleStartLineNumber;\n                    renderData[lineIndex] = renderedLineWrapped;\n                }\n            }\n        }\n        // do a second pass to render exact lines\n        const renderedLineExact = this._renderOne(ctx, true);\n        for (const cursorLineNumber of this._cursorLineNumbers) {\n            if (cursorLineNumber < visibleStartLineNumber || cursorLineNumber > visibleEndLineNumber) {\n                continue;\n            }\n            const lineIndex = cursorLineNumber - visibleStartLineNumber;\n            renderData[lineIndex] = renderedLineExact;\n        }\n        this._renderData = renderData;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderData) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex >= this._renderData.length) {\n            return '';\n        }\n        return this._renderData[lineIndex];\n    }\n    _shouldRenderInMargin() {\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n    _shouldRenderInContent() {\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n            && this._selectionIsEmpty\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx, exact) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-both' : '') + (exact ? ' current-line-exact' : '');\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return this._shouldRenderInContent();\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInMargin();\n    }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx, exact) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '') + (this._shouldRenderInMargin() && exact ? ' current-line-exact-margin' : '');\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px\"></div>`;\n    }\n    _shouldRenderThis() {\n        return true;\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInContent();\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    if (lineHighlight) {\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n    }\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n        if (lineHighlightBorder) {\n            collector.addRule(`.monaco-editor .view-overlays .current-line-exact { border: 2px solid ${lineHighlightBorder}; }`);\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid ${lineHighlightBorder}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .view-overlays .current-line-exact { border-width: 1px; }`);\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }`);\n            }\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { HorizontalRange } from '../../view/renderingContext.js';\nimport { Range } from '../../../common/core/range.js';\nexport class DecorationsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        const _decorations = ctx.getDecorationsInViewport();\n        // Keep only decorations with `className`\n        let decorations = [];\n        let decorationsLen = 0;\n        for (let i = 0, len = _decorations.length; i < len; i++) {\n            const d = _decorations[i];\n            if (d.options.className) {\n                decorations[decorationsLen++] = d;\n            }\n        }\n        // Sort decorations for consistent render output\n        decorations = decorations.sort((a, b) => {\n            if (a.options.zIndex < b.options.zIndex) {\n                return -1;\n            }\n            if (a.options.zIndex > b.options.zIndex) {\n                return 1;\n            }\n            const aClassName = a.options.className;\n            const bClassName = b.options.className;\n            if (aClassName < bClassName) {\n                return -1;\n            }\n            if (aClassName > bClassName) {\n                return 1;\n            }\n            return Range.compareRangesUsingStarts(a.range, b.range);\n        });\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = '';\n        }\n        // Render first whole line decorations and then regular decorations\n        this._renderWholeLineDecorations(ctx, decorations, output);\n        this._renderNormalDecorations(ctx, decorations, output);\n        this._renderResult = output;\n    }\n    _renderWholeLineDecorations(ctx, decorations, output) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (!d.options.isWholeLine) {\n                continue;\n            }\n            const decorationOutput = ('<div class=\"cdr '\n                + d.options.className\n                + '\" style=\"left:0;width:100%;\"></div>');\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            for (let j = startLineNumber; j <= endLineNumber; j++) {\n                const lineIndex = j - visibleStartLineNumber;\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    _renderNormalDecorations(ctx, decorations, output) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        let prevClassName = null;\n        let prevShowIfCollapsed = false;\n        let prevRange = null;\n        let prevShouldFillLineOnLineBreak = false;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (d.options.isWholeLine) {\n                continue;\n            }\n            const className = d.options.className;\n            const showIfCollapsed = Boolean(d.options.showIfCollapsed);\n            let range = d.range;\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n            }\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n                // merge into previous decoration\n                prevRange = Range.plusRange(prevRange, range);\n                continue;\n            }\n            // flush previous decoration\n            if (prevClassName !== null) {\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n            }\n            prevClassName = className;\n            prevShowIfCollapsed = showIfCollapsed;\n            prevRange = range;\n            prevShouldFillLineOnLineBreak = d.options.shouldFillLineOnLineBreak ?? false;\n        }\n        if (prevClassName !== null) {\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n        }\n    }\n    _renderNormalDecoration(ctx, range, className, shouldFillLineOnLineBreak, showIfCollapsed, visibleStartLineNumber, output) {\n        const linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\n        if (!linesVisibleRanges) {\n            return;\n        }\n        for (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n            const lineVisibleRanges = linesVisibleRanges[j];\n            if (lineVisibleRanges.outsideRenderedLine) {\n                continue;\n            }\n            const lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n                const singleVisibleRange = lineVisibleRanges.ranges[0];\n                if (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n                    // collapsed/very small range case => make the decoration visible by expanding its width\n                    // expand its size on both sides (both to the left and to the right, keeping it centered)\n                    const center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n                    const left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n                }\n            }\n            for (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n                const expandToLeft = shouldFillLineOnLineBreak && lineVisibleRanges.continuesOnNextLine && lenK === 1;\n                const visibleRange = lineVisibleRanges.ranges[k];\n                const decorationOutput = ('<div class=\"cdr '\n                    + className\n                    + '\" style=\"left:'\n                    + String(visibleRange.left)\n                    + 'px;width:'\n                    + (expandToLeft ?\n                        '100%;' :\n                        (String(visibleRange.width) + 'px;'))\n                    + '\"></div>');\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n    constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        super(context);\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        const mouseWheelScrollSensitivity = options.get(75 /* EditorOption.mouseWheelScrollSensitivity */);\n        const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n        const scrollPredominantAxis = options.get(107 /* EditorOption.scrollPredominantAxis */);\n        const scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: scrollbar.vertical,\n            horizontal: scrollbar.horizontal,\n            verticalHasArrows: scrollbar.verticalHasArrows,\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n            verticalSliderSize: scrollbar.verticalSliderSize,\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\n            handleMouseWheel: scrollbar.handleMouseWheel,\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n            arrowSize: scrollbar.arrowSize,\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n            scrollPredominantAxis: scrollPredominantAxis,\n            scrollByPage: scrollbar.scrollByPage,\n        };\n        this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n        PartFingerprints.write(this.scrollbar.getDomNode(), 6 /* PartFingerprint.ScrollableElement */);\n        this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n        this.scrollbarDomNode.setPosition('absolute');\n        this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n            const newScrollPosition = {};\n            if (lookAtScrollTop) {\n                const deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                const deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n        this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n        this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n        this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _setLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        const minimap = options.get(73 /* EditorOption.minimap */);\n        const side = minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\n    }\n    getOverviewRulerLayoutInfo() {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    }\n    getDomNode() {\n        return this.scrollbarDomNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(104 /* EditorOption.scrollbar */)\n            || e.hasChanged(75 /* EditorOption.mouseWheelScrollSensitivity */)\n            || e.hasChanged(40 /* EditorOption.fastScrollSensitivity */)) {\n            const options = this._context.configuration.options;\n            const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n            const mouseWheelScrollSensitivity = options.get(75 /* EditorOption.mouseWheelScrollSensitivity */);\n            const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n            const scrollPredominantAxis = options.get(107 /* EditorOption.scrollPredominantAxis */);\n            const newOpts = {\n                vertical: scrollbar.vertical,\n                horizontal: scrollbar.horizontal,\n                verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n                horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n                scrollByPage: scrollbar.scrollByPage,\n                handleMouseWheel: scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n                fastScrollSensitivity: fastScrollSensitivity,\n                scrollPredominantAxis: scrollPredominantAxis\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            this._setLayout();\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to do\n    }\n    render(ctx) {\n        this.scrollbar.renderNow();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\n/**\n * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.\n * This can end up producing multiple `LineDecorationToRender`.\n */\nexport class DecorationToRender {\n    constructor(startLineNumber, endLineNumber, className, tooltip, zIndex) {\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n        this.className = className;\n        this.tooltip = tooltip;\n        this._decorationToRenderBrand = undefined;\n        this.zIndex = zIndex ?? 0;\n    }\n}\n/**\n * A decoration that should be shown along a line.\n */\nexport class LineDecorationToRender {\n    constructor(className, zIndex, tooltip) {\n        this.className = className;\n        this.zIndex = zIndex;\n        this.tooltip = tooltip;\n    }\n}\n/**\n * Decorations to render on a visible line.\n */\nexport class VisibleLineDecorationsToRender {\n    constructor() {\n        this.decorations = [];\n    }\n    add(decoration) {\n        this.decorations.push(decoration);\n    }\n    getDecorations() {\n        return this.decorations;\n    }\n}\nexport class DedupOverlay extends DynamicViewOverlay {\n    /**\n     * Returns an array with an element for each visible line number.\n     */\n    _render(visibleStartLineNumber, visibleEndLineNumber, decorations) {\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = new VisibleLineDecorationsToRender();\n        }\n        if (decorations.length === 0) {\n            return output;\n        }\n        // Sort decorations by className, then by startLineNumber and then by endLineNumber\n        decorations.sort((a, b) => {\n            if (a.className === b.className) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return (a.className < b.className ? -1 : 1);\n        });\n        let prevClassName = null;\n        let prevEndLineIndex = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const className = d.className;\n            const zIndex = d.zIndex;\n            let startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n            const endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n            if (prevClassName === className) {\n                // Here we avoid rendering the same className multiple times on the same line\n                startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n                prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n            }\n            else {\n                prevClassName = className;\n                prevEndLineIndex = endLineIndex;\n            }\n            for (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n                output[i].add(new LineDecorationToRender(className, zIndex, d.tooltip));\n            }\n        }\n        return output;\n    }\n}\nexport class GlyphMarginWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._widgets = {};\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('glyph-margin-widgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n    }\n    dispose() {\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n        this._widgets = {};\n        super.dispose();\n    }\n    getWidgets() {\n        return Object.values(this._widgets);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin widget management\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: widget.getPosition(),\n            domNode: domNode,\n            renderInfo: null\n        };\n        domNode.setPosition('absolute');\n        domNode.setDisplay('none');\n        domNode.setAttribute('widgetId', widget.getId());\n        this.domNode.appendChild(domNode);\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, preference) {\n        const myWidget = this._widgets[widget.getId()];\n        if (myWidget.preference.lane === preference.lane\n            && myWidget.preference.zIndex === preference.zIndex\n            && Range.equalsRange(myWidget.preference.range, preference.range)) {\n            return false;\n        }\n        myWidget.preference = preference;\n        this.setShouldRender();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets[widgetId]) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.remove();\n            this.setShouldRender();\n        }\n    }\n    // --- end widget management\n    _collectDecorationBasedGlyphRenderRequest(ctx, requests) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const d of decorations) {\n            const glyphMarginClassName = d.options.glyphMarginClassName;\n            if (!glyphMarginClassName) {\n                continue;\n            }\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            const lane = d.options.glyphMargin?.position ?? GlyphMarginLane.Center;\n            const zIndex = d.options.zIndex ?? 0;\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 0));\n                const laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(lane);\n                requests.push(new DecorationBasedGlyphRenderRequest(lineNumber, laneIndex, zIndex, glyphMarginClassName));\n            }\n        }\n    }\n    _collectWidgetBasedGlyphRenderRequest(ctx, requests) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (const widget of Object.values(this._widgets)) {\n            const range = widget.preference.range;\n            const { startLineNumber, endLineNumber } = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(Range.lift(range));\n            if (!startLineNumber || !endLineNumber || endLineNumber < visibleStartLineNumber || startLineNumber > visibleEndLineNumber) {\n                // The widget is not in the viewport\n                continue;\n            }\n            // The widget is in the viewport, find a good line for it\n            const widgetLineNumber = Math.max(startLineNumber, visibleStartLineNumber);\n            const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(widgetLineNumber, 0));\n            const laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(widget.preference.lane);\n            requests.push(new WidgetBasedGlyphRenderRequest(widgetLineNumber, laneIndex, widget.preference.zIndex, widget));\n        }\n    }\n    _collectSortedGlyphRenderRequests(ctx) {\n        const requests = [];\n        this._collectDecorationBasedGlyphRenderRequest(ctx, requests);\n        this._collectWidgetBasedGlyphRenderRequest(ctx, requests);\n        // sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC\n        // don't change this sort unless you understand `prepareRender` below.\n        requests.sort((a, b) => {\n            if (a.lineNumber === b.lineNumber) {\n                if (a.laneIndex === b.laneIndex) {\n                    if (a.zIndex === b.zIndex) {\n                        if (b.type === a.type) {\n                            if (a.type === 0 /* GlyphRenderRequestType.Decoration */ && b.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                                return (a.className < b.className ? -1 : 1);\n                            }\n                            return 0;\n                        }\n                        return b.type - a.type;\n                    }\n                    return b.zIndex - a.zIndex;\n                }\n                return a.laneIndex - b.laneIndex;\n            }\n            return a.lineNumber - b.lineNumber;\n        });\n        return requests;\n    }\n    /**\n     * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.\n     */\n    prepareRender(ctx) {\n        if (!this._glyphMargin) {\n            this._decorationGlyphsToRender = [];\n            return;\n        }\n        for (const widget of Object.values(this._widgets)) {\n            widget.renderInfo = null;\n        }\n        const requests = new ArrayQueue(this._collectSortedGlyphRenderRequests(ctx));\n        const decorationGlyphsToRender = [];\n        while (requests.length > 0) {\n            const first = requests.peek();\n            if (!first) {\n                // not possible\n                break;\n            }\n            // Requests are sorted by lineNumber and lane, so we read all requests for this particular location\n            const requestsAtLocation = requests.takeWhile((el) => el.lineNumber === first.lineNumber && el.laneIndex === first.laneIndex);\n            if (!requestsAtLocation || requestsAtLocation.length === 0) {\n                // not possible\n                break;\n            }\n            const winner = requestsAtLocation[0];\n            if (winner.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                // combine all decorations with the same z-index\n                const classNames = [];\n                // requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one\n                for (const request of requestsAtLocation) {\n                    if (request.zIndex !== winner.zIndex || request.type !== winner.type) {\n                        break;\n                    }\n                    if (classNames.length === 0 || classNames[classNames.length - 1] !== request.className) {\n                        classNames.push(request.className);\n                    }\n                }\n                decorationGlyphsToRender.push(winner.accept(classNames.join(' '))); // TODO@joyceerhl Implement overflow for remaining decorations\n            }\n            else {\n                // widgets cannot be combined\n                winner.widget.renderInfo = {\n                    lineNumber: winner.lineNumber,\n                    laneIndex: winner.laneIndex,\n                };\n            }\n        }\n        this._decorationGlyphsToRender = decorationGlyphsToRender;\n    }\n    render(ctx) {\n        if (!this._glyphMargin) {\n            for (const widget of Object.values(this._widgets)) {\n                widget.domNode.setDisplay('none');\n            }\n            while (this._managedDomNodes.length > 0) {\n                const domNode = this._managedDomNodes.pop();\n                domNode?.domNode.remove();\n            }\n            return;\n        }\n        const width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount));\n        // Render widgets\n        for (const widget of Object.values(this._widgets)) {\n            if (!widget.renderInfo) {\n                // this widget is not visible\n                widget.domNode.setDisplay('none');\n            }\n            else {\n                const top = ctx.viewportData.relativeVerticalOffset[widget.renderInfo.lineNumber - ctx.viewportData.startLineNumber];\n                const left = this._glyphMarginLeft + widget.renderInfo.laneIndex * this._lineHeight;\n                widget.domNode.setDisplay('block');\n                widget.domNode.setTop(top);\n                widget.domNode.setLeft(left);\n                widget.domNode.setWidth(width);\n                widget.domNode.setHeight(this._lineHeight);\n            }\n        }\n        // Render decorations, reusing previous dom nodes as possible\n        for (let i = 0; i < this._decorationGlyphsToRender.length; i++) {\n            const dec = this._decorationGlyphsToRender[i];\n            const top = ctx.viewportData.relativeVerticalOffset[dec.lineNumber - ctx.viewportData.startLineNumber];\n            const left = this._glyphMarginLeft + dec.laneIndex * this._lineHeight;\n            let domNode;\n            if (i < this._managedDomNodes.length) {\n                domNode = this._managedDomNodes[i];\n            }\n            else {\n                domNode = createFastDomNode(document.createElement('div'));\n                this._managedDomNodes.push(domNode);\n                this.domNode.appendChild(domNode);\n            }\n            domNode.setClassName(`cgmr codicon ` + dec.combinedClassName);\n            domNode.setPosition(`absolute`);\n            domNode.setTop(top);\n            domNode.setLeft(left);\n            domNode.setWidth(width);\n            domNode.setHeight(this._lineHeight);\n        }\n        // remove extra dom nodes\n        while (this._managedDomNodes.length > this._decorationGlyphsToRender.length) {\n            const domNode = this._managedDomNodes.pop();\n            domNode?.domNode.remove();\n        }\n    }\n}\n/**\n * A request to render a decoration in the glyph margin at a certain location.\n */\nclass DecorationBasedGlyphRenderRequest {\n    constructor(lineNumber, laneIndex, zIndex, className) {\n        this.lineNumber = lineNumber;\n        this.laneIndex = laneIndex;\n        this.zIndex = zIndex;\n        this.className = className;\n        this.type = 0 /* GlyphRenderRequestType.Decoration */;\n    }\n    accept(combinedClassName) {\n        return new DecorationBasedGlyph(this.lineNumber, this.laneIndex, combinedClassName);\n    }\n}\n/**\n * A request to render a widget in the glyph margin at a certain location.\n */\nclass WidgetBasedGlyphRenderRequest {\n    constructor(lineNumber, laneIndex, zIndex, widget) {\n        this.lineNumber = lineNumber;\n        this.laneIndex = laneIndex;\n        this.zIndex = zIndex;\n        this.widget = widget;\n        this.type = 1 /* GlyphRenderRequestType.Widget */;\n    }\n}\nclass DecorationBasedGlyph {\n    constructor(lineNumber, laneIndex, combinedClassName) {\n        this.lineNumber = lineNumber;\n        this.laneIndex = laneIndex;\n        this.combinedClassName = combinedClassName;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!this._primaryPosition?.equals(newPosition)) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, Math.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()), activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n            for (const guide of indent) {\n                const left = guide.column === -1\n                    ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n                    : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? (ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))?.left ?? (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n            const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.viewModel.model.getOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, -1, `core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''), null, -1, -1));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const indentColors = [\n        { indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n        { indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n        { indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n        { indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n        { indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n        { indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n    ];\n    const colorValues = colors\n        .map(c => {\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    const indentColorValues = indentColors\n        .map(c => {\n        const indentColor = theme.getColor(c.indentColor);\n        const indentColorActive = theme.getColor(c.indentColorActive);\n        const effectiveIndentColor = transparentToUndefined(indentColor);\n        const effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n        if (!effectiveIndentColor || !effectiveIndentColorActive) {\n            return undefined;\n        }\n        return {\n            indentColor: effectiveIndentColor,\n            indentColorActive: effectiveIndentColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n    if (indentColorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = indentColorValues[level % indentColorValues.length];\n            collector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DomReadingContext {\n    get didDomLayout() {\n        return this._didDomLayout;\n    }\n    readClientRect() {\n        if (!this._clientRectRead) {\n            this._clientRectRead = true;\n            const rect = this._domNode.getBoundingClientRect();\n            this.markDidDomLayout();\n            this._clientRectDeltaLeft = rect.left;\n            this._clientRectScale = rect.width / this._domNode.offsetWidth;\n        }\n    }\n    get clientRectDeltaLeft() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectDeltaLeft;\n    }\n    get clientRectScale() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectScale;\n    }\n    constructor(_domNode, endNode) {\n        this._domNode = _domNode;\n        this.endNode = endNode;\n        this._didDomLayout = false;\n        this._clientRectDeltaLeft = 0;\n        this._clientRectScale = 1;\n        this._clientRectRead = false;\n    }\n    markDidDomLayout() {\n        this._didDomLayout = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport './viewLines.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { HorizontalPosition, HorizontalRange, LineVisibleRanges } from '../../view/renderingContext.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLine, ViewLineOptions } from './viewLine.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nclass LastRenderedData {\n    constructor() {\n        this._currentVisibleRange = new Range(1, 1, 1, 1);\n    }\n    getCurrentVisibleRange() {\n        return this._currentVisibleRange;\n    }\n    setCurrentVisibleRange(currentVisibleRange) {\n        this._currentVisibleRange = currentVisibleRange;\n    }\n}\nclass HorizontalRevealRangeRequest {\n    constructor(minimalReveal, lineNumber, startColumn, endColumn, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.lineNumber = lineNumber;\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'range';\n        this.minLineNumber = lineNumber;\n        this.maxLineNumber = lineNumber;\n    }\n}\nclass HorizontalRevealSelectionsRequest {\n    constructor(minimalReveal, selections, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.selections = selections;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'selections';\n        let minLineNumber = selections[0].startLineNumber;\n        let maxLineNumber = selections[0].endLineNumber;\n        for (let i = 1, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n            maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n        }\n        this.minLineNumber = minLineNumber;\n        this.maxLineNumber = maxLineNumber;\n    }\n}\nexport class ViewLines extends ViewPart {\n    /**\n     * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n     */\n    static { this.HORIZONTAL_EXTRA_PX = 30; }\n    constructor(context, linesContent) {\n        super(context);\n        const conf = this._context.configuration;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(101 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        this._linesContent = linesContent;\n        this._textRangeRestingSpot = document.createElement('div');\n        this._visibleLines = new VisibleLinesCollection({\n            createLine: () => new ViewLine(this._viewLineOptions),\n        });\n        this.domNode = this._visibleLines.domNode;\n        PartFingerprints.write(this.domNode, 8 /* PartFingerprint.ViewLines */);\n        this.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        applyFontInfo(this.domNode, fontInfo);\n        // --- width & height\n        this._maxLineWidth = 0;\n        this._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n            this._updateLineWidthsSlow();\n        }, 200);\n        this._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n            this._checkMonospaceFontAssumptions();\n        }, 2000);\n        this._lastRenderedData = new LastRenderedData();\n        this._horizontalRevealRequest = null;\n        // sticky scroll widget\n        this._stickyScrollEnabled = options.get(116 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(116 /* EditorOption.stickyScroll */).maxLineCount;\n    }\n    dispose() {\n        this._asyncUpdateLineWidths.dispose();\n        this._asyncCheckMonospaceFontAssumptions.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        if (e.hasChanged(147 /* EditorOption.wrappingInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(101 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        // sticky scroll\n        this._stickyScrollEnabled = options.get(116 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(116 /* EditorOption.stickyScroll */).maxLineCount;\n        applyFontInfo(this.domNode, fontInfo);\n        this._onOptionsMaybeChanged();\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        return true;\n    }\n    _onOptionsMaybeChanged() {\n        const conf = this._context.configuration;\n        const newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        if (!this._viewLineOptions.equals(newViewLineOptions)) {\n            this._viewLineOptions = newViewLineOptions;\n            const startLineNumber = this._visibleLines.getStartLineNumber();\n            const endLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const line = this._visibleLines.getVisibleLine(lineNumber);\n                line.onOptionsChanged(this._viewLineOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let r = false;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            r = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n        }\n        return r;\n    }\n    onDecorationsChanged(e) {\n        if (true /*e.inlineDecorationsChanged*/) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n            }\n        }\n        return true;\n    }\n    onFlushed(e) {\n        const shouldRender = this._visibleLines.onFlushed(e);\n        this._maxLineWidth = 0;\n        return shouldRender;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onRevealRangeRequest(e) {\n        // Using the future viewport here in order to handle multiple\n        // incoming reveal range requests that might all desire to be animated\n        const desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n        if (desiredScrollTop === -1) {\n            // marker to abort the reveal range request\n            return false;\n        }\n        // validate the new desired scroll top\n        let newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n        if (e.revealHorizontal) {\n            if (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n                // Two or more lines? => scroll to base (That's how you see most of the two lines)\n                newScrollPosition = {\n                    scrollTop: newScrollPosition.scrollTop,\n                    scrollLeft: 0\n                };\n            }\n            else if (e.range) {\n                // We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n                this._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n            else if (e.selections && e.selections.length > 0) {\n                this._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n        }\n        else {\n            this._horizontalRevealRequest = null;\n        }\n        const scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n        const scrollType = (scrollTopDelta <= this._lineHeight ? 1 /* ScrollType.Immediate */ : e.scrollType);\n        this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n        return true;\n    }\n    onScrollChanged(e) {\n        if (this._horizontalRevealRequest && e.scrollLeftChanged) {\n            // cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n            this._horizontalRevealRequest = null;\n        }\n        if (this._horizontalRevealRequest && e.scrollTopChanged) {\n            const min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            const max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            if (e.scrollTop < min || e.scrollTop > max) {\n                // cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n                this._horizontalRevealRequest = null;\n            }\n        }\n        this.domNode.setWidth(e.scrollWidth);\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        return this._visibleLines.onZonesChanged(e);\n    }\n    onThemeChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    // ---- end view event handlers\n    // ----------- HELPERS FOR OTHERS\n    getPositionFromDOMInfo(spanNode, offset) {\n        const viewLineDomNode = this._getViewLineDomNode(spanNode);\n        if (viewLineDomNode === null) {\n            // Couldn't find view line node\n            return null;\n        }\n        const lineNumber = this._getLineNumberFor(viewLineDomNode);\n        if (lineNumber === -1) {\n            // Couldn't find view line node\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n            // lineNumber is outside range\n            return null;\n        }\n        if (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n            // Line is empty\n            return new Position(lineNumber, 1);\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return null;\n        }\n        let column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(spanNode, offset);\n        const minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n        if (column < minColumn) {\n            column = minColumn;\n        }\n        return new Position(lineNumber, column);\n    }\n    _getViewLineDomNode(node) {\n        while (node && node.nodeType === 1) {\n            if (node.className === ViewLine.CLASS_NAME) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n        return null;\n    }\n    /**\n     * @returns the line number of this view line dom node.\n     */\n    _getLineNumberFor(domNode) {\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            if (domNode === line.getDomNode()) {\n                return lineNumber;\n            }\n        }\n        return -1;\n    }\n    getLineWidth(lineNumber) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return -1;\n        }\n        const context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n        this._updateLineWidthsSlowIfDomDidLayout(context);\n        return result;\n    }\n    linesVisibleRangesForRange(_range, includeNewLines) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        const originalEndLineNumber = _range.endLineNumber;\n        const range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n        if (!range) {\n            return null;\n        }\n        const visibleRanges = [];\n        let visibleRangesLen = 0;\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        let nextLineModelLineNumber = 0;\n        if (includeNewLines) {\n            nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n            if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n                continue;\n            }\n            const startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n            const continuesInNextLine = lineNumber !== range.endLineNumber;\n            const endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n            const visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n            if (!visibleRangesForLine) {\n                continue;\n            }\n            if (includeNewLines && lineNumber < originalEndLineNumber) {\n                const currentLineModelLineNumber = nextLineModelLineNumber;\n                nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n                if (currentLineModelLineNumber !== nextLineModelLineNumber) {\n                    visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n                }\n            }\n            visibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine);\n        }\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        if (visibleRangesLen === 0) {\n            return null;\n        }\n        return visibleRanges;\n    }\n    _visibleRangesForLineRange(lineNumber, startColumn, endColumn) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        if (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n            return null;\n        }\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        return result;\n    }\n    visibleRangeForPosition(position) {\n        const visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n        if (!visibleRanges) {\n            return null;\n        }\n        return new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n    }\n    /**\n     * Updates the max line width if it is fast to compute.\n     * Returns true if all lines were taken into account.\n     * Returns false if some lines need to be reevaluated (in a slow fashion).\n     */\n    _updateLineWidthsFast() {\n        return this._updateLineWidths(true);\n    }\n    _updateLineWidthsSlow() {\n        this._updateLineWidths(false);\n    }\n    /**\n     * Update the line widths using DOM layout information after someone else\n     * has caused a synchronous layout.\n     */\n    _updateLineWidthsSlowIfDomDidLayout(domReadingContext) {\n        if (!domReadingContext.didDomLayout) {\n            // only proceed if we just did a layout\n            return;\n        }\n        if (this._asyncUpdateLineWidths.isScheduled()) {\n            // reading widths is not scheduled => widths are up-to-date\n            return;\n        }\n        this._asyncUpdateLineWidths.cancel();\n        this._updateLineWidthsSlow();\n    }\n    _updateLineWidths(fast) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let localMaxLineWidth = 1;\n        let allWidthsComputed = true;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (fast && !visibleLine.getWidthIsFast()) {\n                // Cannot compute width in a fast way for this line\n                allWidthsComputed = false;\n                continue;\n            }\n            localMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n        }\n        if (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n            // we know the max line width for all the lines\n            this._maxLineWidth = 0;\n        }\n        this._ensureMaxLineWidth(localMaxLineWidth);\n        return allWidthsComputed;\n    }\n    _checkMonospaceFontAssumptions() {\n        // Problems with monospace assumptions are more apparent for longer lines,\n        // as small rounding errors start to sum up, so we will select the longest\n        // line for a closer inspection\n        let longestLineNumber = -1;\n        let longestWidth = -1;\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (visibleLine.needsMonospaceFontCheck()) {\n                const lineWidth = visibleLine.getWidth(null);\n                if (lineWidth > longestWidth) {\n                    longestWidth = lineWidth;\n                    longestLineNumber = lineNumber;\n                }\n            }\n        }\n        if (longestLineNumber === -1) {\n            return;\n        }\n        if (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                visibleLine.onMonospaceAssumptionsInvalidated();\n            }\n        }\n    }\n    prepareRender() {\n        throw new Error('Not supported');\n    }\n    render() {\n        throw new Error('Not supported');\n    }\n    renderText(viewportData) {\n        // (1) render lines - ensures lines are in the DOM\n        this._visibleLines.renderLines(viewportData);\n        this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n        this.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n        this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n        // (2) compute horizontal scroll position:\n        //  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n        //  - it might change `scrollWidth` and `scrollLeft`\n        if (this._horizontalRevealRequest) {\n            const horizontalRevealRequest = this._horizontalRevealRequest;\n            // Check that we have the line that contains the horizontal range in the viewport\n            if (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n                this._horizontalRevealRequest = null;\n                // allow `visibleRangesForRange2` to work\n                this.onDidRender();\n                // compute new scroll position\n                const newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n                if (newScrollLeft) {\n                    if (!this._isViewportWrapping) {\n                        // ensure `scrollWidth` is large enough\n                        this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n                    }\n                    // set `scrollLeft`\n                    this._context.viewModel.viewLayout.setScrollPosition({\n                        scrollLeft: newScrollLeft.scrollLeft\n                    }, horizontalRevealRequest.scrollType);\n                }\n            }\n        }\n        // Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n        if (!this._updateLineWidthsFast()) {\n            // Computing the width of some lines would be slow => delay it\n            this._asyncUpdateLineWidths.schedule();\n        }\n        else {\n            this._asyncUpdateLineWidths.cancel();\n        }\n        if (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                if (visibleLine.needsMonospaceFontCheck()) {\n                    this._asyncCheckMonospaceFontAssumptions.schedule();\n                    break;\n                }\n            }\n        }\n        // (3) handle scrolling\n        this._linesContent.setLayerHinting(this._canUseLayerHinting);\n        this._linesContent.setContain('strict');\n        const adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n        this._linesContent.setTop(-adjustedScrollTop);\n        this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n    }\n    // --- width\n    _ensureMaxLineWidth(lineWidth) {\n        const iLineWidth = Math.ceil(lineWidth);\n        if (this._maxLineWidth < iLineWidth) {\n            this._maxLineWidth = iLineWidth;\n            this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        }\n    }\n    _computeScrollTopToRevealRange(viewport, source, minimalReveal, range, selections, verticalType) {\n        const viewportStartY = viewport.top;\n        const viewportHeight = viewport.height;\n        const viewportEndY = viewportStartY + viewportHeight;\n        let boxIsSingleRange;\n        let boxStartY;\n        let boxEndY;\n        if (selections && selections.length > 0) {\n            let minLineNumber = selections[0].startLineNumber;\n            let maxLineNumber = selections[0].endLineNumber;\n            for (let i = 1, len = selections.length; i < len; i++) {\n                const selection = selections[i];\n                minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n                maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n            }\n            boxIsSingleRange = false;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n        }\n        else if (range) {\n            boxIsSingleRange = true;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n        }\n        else {\n            return -1;\n        }\n        const shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n        let paddingTop = 0;\n        let paddingBottom = 0;\n        if (!shouldIgnoreScrollOff) {\n            const maxLinesInViewport = (viewportHeight / this._lineHeight);\n            const surroundingLines = Math.max(this._cursorSurroundingLines, this._stickyScrollEnabled ? this._maxNumberStickyLines : 0);\n            const context = Math.min(maxLinesInViewport / 2, surroundingLines);\n            paddingTop = context * this._lineHeight;\n            paddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n        }\n        else {\n            if (!minimalReveal) {\n                // Reveal one more line above (this case is hit when dragging)\n                paddingTop = this._lineHeight;\n            }\n        }\n        if (!minimalReveal) {\n            if (verticalType === 0 /* viewEvents.VerticalRevealType.Simple */ || verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */) {\n                // Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n                paddingBottom += this._lineHeight;\n            }\n        }\n        boxStartY -= paddingTop;\n        boxEndY += paddingBottom;\n        let newScrollTop;\n        if (boxEndY - boxStartY > viewportHeight) {\n            // the box is larger than the viewport ... scroll to its top\n            if (!boxIsSingleRange) {\n                // do not reveal multiple cursors if there are more than fit the viewport\n                return -1;\n            }\n            newScrollTop = boxStartY;\n        }\n        else if (verticalType === 5 /* viewEvents.VerticalRevealType.NearTop */ || verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */) {\n            if (verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n                const desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n                // Try to scroll just above the box with the desired gap\n                const desiredScrollTop = boxStartY - desiredGapAbove;\n                // But ensure that the box is not pushed out of viewport\n                const minScrollTop = boxEndY - viewportHeight;\n                newScrollTop = Math.max(minScrollTop, desiredScrollTop);\n            }\n        }\n        else if (verticalType === 1 /* viewEvents.VerticalRevealType.Center */ || verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */) {\n            if (verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // Box is outside the viewport... center it\n                const boxMiddleY = (boxStartY + boxEndY) / 2;\n                newScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n            }\n        }\n        else {\n            newScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === 3 /* viewEvents.VerticalRevealType.Top */, verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */);\n        }\n        return newScrollTop;\n    }\n    _computeScrollLeftToReveal(horizontalRevealRequest) {\n        const viewport = this._context.viewLayout.getCurrentViewport();\n        const layoutInfo = this._context.configuration.options.get(146 /* EditorOption.layoutInfo */);\n        const viewportStartX = viewport.left;\n        const viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n        let boxStartX = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let boxEndX = 0;\n        if (horizontalRevealRequest.type === 'range') {\n            const visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n            if (!visibleRanges) {\n                return null;\n            }\n            for (const visibleRange of visibleRanges.ranges) {\n                boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n            }\n        }\n        else {\n            for (const selection of horizontalRevealRequest.selections) {\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    return null;\n                }\n                const visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n                if (!visibleRanges) {\n                    return null;\n                }\n                for (const visibleRange of visibleRanges.ranges) {\n                    boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                    boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n                }\n            }\n        }\n        if (!horizontalRevealRequest.minimalReveal) {\n            boxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n            boxEndX += this._revealHorizontalRightPadding;\n        }\n        if (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n            return null;\n        }\n        const newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n        return {\n            scrollLeft: newScrollLeft,\n            maxHorizontalOffset: boxEndX\n        };\n    }\n    _computeMinimumScrolling(viewportStart, viewportEnd, boxStart, boxEnd, revealAtStart, revealAtEnd) {\n        viewportStart = viewportStart | 0;\n        viewportEnd = viewportEnd | 0;\n        boxStart = boxStart | 0;\n        boxEnd = boxEnd | 0;\n        revealAtStart = !!revealAtStart;\n        revealAtEnd = !!revealAtEnd;\n        const viewportLength = viewportEnd - viewportStart;\n        const boxLength = boxEnd - boxStart;\n        if (boxLength < viewportLength) {\n            // The box would fit in the viewport\n            if (revealAtStart) {\n                return boxStart;\n            }\n            if (revealAtEnd) {\n                return Math.max(0, boxEnd - viewportLength);\n            }\n            if (boxStart < viewportStart) {\n                // The box is above the viewport\n                return boxStart;\n            }\n            else if (boxEnd > viewportEnd) {\n                // The box is below the viewport\n                return Math.max(0, boxEnd - viewportLength);\n            }\n        }\n        else {\n            // The box would not fit in the viewport\n            // Reveal the beginning of the box\n            return boxStart;\n        }\n        return viewportStart;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class LinesDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const linesDecorationsClassName = d.options.linesDecorationsClassName;\n            const zIndex = d.options.zIndex;\n            if (linesDecorationsClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n            }\n            const firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n            if (firstLineDecorationClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const left = this._decorationsLeft.toString();\n        const width = this._decorationsWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                let addition = '<div class=\"cldr ' + decoration.className;\n                if (decoration.tooltip !== null) {\n                    addition += '\" title=\"' + decoration.tooltip; // The tooltip is already escaped.\n                }\n                addition += common;\n                lineOutput += addition;\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const marginClassName = d.options.marginClassName;\n            const zIndex = d.options.zIndex;\n            if (marginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const allCharCodes = (() => {\n    const v = [];\n    for (let i = 32 /* Constants.START_CH_CODE */; i <= 126 /* Constants.END_CH_CODE */; i++) {\n        v.push(i);\n    }\n    v.push(65533 /* Constants.UNKNOWN_CODE */);\n    return v;\n})();\nexport const getCharIndex = (chCode, fontScale) => {\n    chCode -= 32 /* Constants.START_CH_CODE */;\n    if (chCode < 0 || chCode > 96 /* Constants.CHAR_COUNT */) {\n        if (fontScale <= 2) {\n            // for smaller scales, we can get away with using any ASCII character...\n            return (chCode + 96 /* Constants.CHAR_COUNT */) % 96 /* Constants.CHAR_COUNT */;\n        }\n        return 96 /* Constants.CHAR_COUNT */ - 1; // unknown symbol\n    }\n    return chCode;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nconst charTable = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15\n};\nconst decodeData = (str) => {\n    const output = new Uint8ClampedArray(str.length / 2);\n    for (let i = 0; i < str.length; i += 2) {\n        output[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n    }\n    return output;\n};\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n    const chars = '0123456789ABCDEF';\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n        output += chars[data[i] >> 4] + chars[data[i] & 0xf];\n    }\n    return output;\n};\n*/\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps = {\n    1: createSingleCallFunction(() => decodeData('0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792')),\n    2: createSingleCallFunction(() => decodeDatan};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n    /**\n     * Creates a new character renderer factory with the given scale.\n     */\n    static create(scale, fontFamily) {\n        // renderers are immutable. By default we'll 'create' a new minimap\n        // character renderer whenever we switch editors, no need to do extra work.\n        if (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n            return this.lastCreated;\n        }\n        let factory;\n        if (prebakedMiniMaps[scale]) {\n            factory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n        }\n        else {\n            factory = MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(fontFamily).data, scale);\n        }\n        this.lastFontFamily = fontFamily;\n        this.lastCreated = factory;\n        return factory;\n    }\n    /**\n     * Creates the font sample data, writing to a canvas.\n     */\n    static createSampleData(fontFamily) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.style.height = `${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px`;\n        canvas.height = 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n        canvas.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        canvas.style.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ + 'px';\n        ctx.fillStyle = '#ffffff';\n        ctx.font = `bold ${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        let x = 0;\n        for (const code of allCharCodes) {\n            ctx.fillText(String.fromCharCode(code), x, 16 /* Constants.SAMPLED_CHAR_HEIGHT */ / 2);\n            x += 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        }\n        return ctx.getImageData(0, 0, 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */, 16 /* Constants.SAMPLED_CHAR_HEIGHT */);\n    }\n    /**\n     * Creates a character renderer from the canvas sample data.\n     */\n    static createFromSampleData(source, scale) {\n        const expectedLength = 16 /* Constants.SAMPLED_CHAR_HEIGHT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */ * 96 /* Constants.CHAR_COUNT */;\n        if (source.length !== expectedLength) {\n            throw new Error('Unexpected source in MinimapCharRenderer');\n        }\n        const charData = MinimapCharRendererFactory._downsample(source, scale);\n        return new MinimapCharRenderer(charData, scale);\n    }\n    static _downsampleChar(source, sourceOffset, dest, destOffset, scale) {\n        const width = 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const height = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale;\n        let targetIndex = destOffset;\n        let brightest = 0;\n        // This is essentially an ad-hoc rescaling algorithm. Standard approaches\n        // like bicubic interpolation are awesome for scaling between image sizes,\n        // but don't work so well when scaling to very small pixel values, we end\n        // up with blurry, indistinct forms.\n        //\n        // The approach taken here is simply mapping each source pixel to the target\n        // pixels, and taking the weighted values for all pixels in each, and then\n        // averaging them out. Finally we apply an intensity boost in _downsample,\n        // since when scaling to the smallest pixel sizes there's more black space\n        // which causes characters to be much less distinct.\n        for (let y = 0; y < height; y++) {\n            // 1. For this destination pixel, get the source pixels we're sampling\n            // from (x1, y1) to the next pixel (x2, y2)\n            const sourceY1 = (y / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            const sourceY2 = ((y + 1) / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            for (let x = 0; x < width; x++) {\n                const sourceX1 = (x / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                const sourceX2 = ((x + 1) / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                // 2. Sample all of them, summing them up and weighting them. Similar\n                // to bilinear interpolation.\n                let value = 0;\n                let samples = 0;\n                for (let sy = sourceY1; sy < sourceY2; sy++) {\n                    const sourceRow = sourceOffset + Math.floor(sy) * 3840 /* Constants.RGBA_SAMPLED_ROW_WIDTH */;\n                    const yBalance = 1 - (sy - Math.floor(sy));\n                    for (let sx = sourceX1; sx < sourceX2; sx++) {\n                        const xBalance = 1 - (sx - Math.floor(sx));\n                        const sourceIndex = sourceRow + Math.floor(sx) * 4 /* Constants.RGBA_CHANNELS_CNT */;\n                        const weight = xBalance * yBalance;\n                        samples += weight;\n                        value += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n                    }\n                }\n                const final = value / samples;\n                brightest = Math.max(brightest, final);\n                dest[targetIndex++] = toUint8(final);\n            }\n        }\n        return brightest;\n    }\n    static _downsample(data, scale) {\n        const pixelsPerCharacter = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale * 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const resultLen = pixelsPerCharacter * 96 /* Constants.CHAR_COUNT */;\n        const result = new Uint8ClampedArray(resultLen);\n        let resultOffset = 0;\n        let sourceOffset = 0;\n        let brightest = 0;\n        for (let charIndex = 0; charIndex < 96 /* Constants.CHAR_COUNT */; charIndex++) {\n            brightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n            resultOffset += pixelsPerCharacter;\n            sourceOffset += 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        }\n        if (brightest > 0) {\n            const adjust = 255 / brightest;\n            for (let i = 0; i < resultLen; i++) {\n                result[i] *= adjust;\n            }\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/rgba.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { ViewModelDecoration } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity, editorForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../base/browser/fonts.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nconst GUTTER_DECORATION_WIDTH = 2;\nclass MinimapOptions {\n    constructor(configuration, theme, tokensColorTracker) {\n        const options = configuration.options;\n        const pixelRatio = options.get(144 /* EditorOption.pixelRatio */);\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const minimapLayout = layoutInfo.minimap;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const minimapOpts = options.get(73 /* EditorOption.minimap */);\n        this.renderMinimap = minimapLayout.renderMinimap;\n        this.size = minimapOpts.size;\n        this.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n        this.scrollBeyondLastLine = options.get(106 /* EditorOption.scrollBeyondLastLine */);\n        this.paddingTop = options.get(84 /* EditorOption.padding */).top;\n        this.paddingBottom = options.get(84 /* EditorOption.padding */).bottom;\n        this.showSlider = minimapOpts.showSlider;\n        this.autohide = minimapOpts.autohide;\n        this.pixelRatio = pixelRatio;\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.minimapLeft = minimapLayout.minimapLeft;\n        this.minimapWidth = minimapLayout.minimapWidth;\n        this.minimapHeight = layoutInfo.height;\n        this.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n        this.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n        this.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n        this.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n        this.isSampling = minimapLayout.minimapIsSampling;\n        this.editorHeight = layoutInfo.height;\n        this.fontScale = minimapLayout.minimapScale;\n        this.minimapLineHeight = minimapLayout.minimapLineHeight;\n        this.minimapCharWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.fontScale;\n        this.sectionHeaderFontFamily = DEFAULT_FONT_FAMILY;\n        this.sectionHeaderFontSize = minimapOpts.sectionHeaderFontSize * pixelRatio;\n        this.sectionHeaderLetterSpacing = minimapOpts.sectionHeaderLetterSpacing; // intentionally not multiplying by pixelRatio\n        this.sectionHeaderFontColor = MinimapOptions._getSectionHeaderColor(theme, tokensColorTracker.getColor(1 /* ColorId.DefaultForeground */));\n        this.charRenderer = createSingleCallFunction(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n        this.defaultBackgroundColor = tokensColorTracker.getColor(2 /* ColorId.DefaultBackground */);\n        this.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n        this.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n    }\n    static _getMinimapBackground(theme, defaultBackgroundColor) {\n        const themeColor = theme.getColor(minimapBackground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultBackgroundColor;\n    }\n    static _getMinimapForegroundOpacity(theme) {\n        const themeColor = theme.getColor(minimapForegroundOpacity);\n        if (themeColor) {\n            return RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n        }\n        return 255;\n    }\n    static _getSectionHeaderColor(theme, defaultForegroundColor) {\n        const themeColor = theme.getColor(editorForeground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultForegroundColor;\n    }\n    equals(other) {\n        return (this.renderMinimap === other.renderMinimap\n            && this.size === other.size\n            && this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n            && this.paddingTop === other.paddingTop\n            && this.paddingBottom === other.paddingBottom\n            && this.showSlider === other.showSlider\n            && this.autohide === other.autohide\n            && this.pixelRatio === other.pixelRatio\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.lineHeight === other.lineHeight\n            && this.minimapLeft === other.minimapLeft\n            && this.minimapWidth === other.minimapWidth\n            && this.minimapHeight === other.minimapHeight\n            && this.canvasInnerWidth === other.canvasInnerWidth\n            && this.canvasInnerHeight === other.canvasInnerHeight\n            && this.canvasOuterWidth === other.canvasOuterWidth\n            && this.canvasOuterHeight === other.canvasOuterHeight\n            && this.isSampling === other.isSampling\n            && this.editorHeight === other.editorHeight\n            && this.fontScale === other.fontScale\n            && this.minimapLineHeight === other.minimapLineHeight\n            && this.minimapCharWidth === other.minimapCharWidth\n            && this.sectionHeaderFontSize === other.sectionHeaderFontSize\n            && this.sectionHeaderLetterSpacing === other.sectionHeaderLetterSpacing\n            && this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n            && this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n            && this.foregroundAlpha === other.foregroundAlpha);\n    }\n}\nclass MinimapLayout {\n    constructor(\n    /**\n     * The given editor scrollTop (input).\n     */\n    scrollTop, \n    /**\n     * The given editor scrollHeight (input).\n     */\n    scrollHeight, sliderNeeded, _computedSliderRatio, \n    /**\n     * slider dom node top (in CSS px)\n     */\n    sliderTop, \n    /**\n     * slider dom node height (in CSS px)\n     */\n    sliderHeight, \n    /**\n     * empty lines to reserve at the top of the minimap.\n     */\n    topPaddingLineCount, \n    /**\n     * minimap render start line number.\n     */\n    startLineNumber, \n    /**\n     * minimap render end line number.\n     */\n    endLineNumber) {\n        this.scrollTop = scrollTop;\n        this.scrollHeight = scrollHeight;\n        this.sliderNeeded = sliderNeeded;\n        this._computedSliderRatio = _computedSliderRatio;\n        this.sliderTop = sliderTop;\n        this.sliderHeight = sliderHeight;\n        this.topPaddingLineCount = topPaddingLineCount;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollTopFromDelta(delta) {\n        return Math.round(this.scrollTop + delta / this._computedSliderRatio);\n    }\n    getDesiredScrollTopFromTouchLocation(pageY) {\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n    }\n    /**\n     * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n     */\n    intersectWithViewport(range) {\n        const startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n        const endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n        if (startLineNumber > endLineNumber) {\n            // entirely outside minimap's viewport\n            return null;\n        }\n        return [startLineNumber, endLineNumber];\n    }\n    /**\n     * Get the inner minimap y coordinate for a line number.\n     */\n    getYForLineNumber(lineNumber, minimapLineHeight) {\n        return +(lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n    }\n    static create(options, viewportStartLineNumber, viewportEndLineNumber, viewportStartLineNumberVerticalOffset, viewportHeight, viewportContainsWhitespaceGaps, lineCount, realLineCount, scrollTop, scrollHeight, previousLayout) {\n        const pixelRatio = options.pixelRatio;\n        const minimapLineHeight = options.minimapLineHeight;\n        const minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n        const lineHeight = options.lineHeight;\n        if (options.minimapHeightIsEditorHeight) {\n            let logicalScrollHeight = (realLineCount * options.lineHeight\n                + options.paddingTop\n                + options.paddingBottom);\n            if (options.scrollBeyondLastLine) {\n                logicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n            }\n            const sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n            const maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n            // The slider can move from 0 to `maxMinimapSliderTop`\n            // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n            const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n            const sliderTop = (scrollTop * computedSliderRatio);\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            const maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n            const topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n        }\n        // The visible line count in a viewport can change due to a number of reasons:\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n        //    e.g. for a line height of 20, and a viewport height of 600\n        //          * scrollTop = 0  => visible lines are [1, 30]\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n        //          * scrollTop = 20 => visible lines are [2, 31]\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n        // We must first establish a desirable slider height.\n        let sliderHeight;\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n            // case b) from above: there are whitespace gaps in the viewport.\n            // In this case, the height of the slider directly reflects the visible line count.\n            const viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        else {\n            // The slider has a stable height\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        const extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n        let extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n        if (options.scrollBeyondLastLine) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            extraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n        }\n        let maxMinimapSliderTop;\n        if (extraLinesAtTheBottom > 0) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\n            maxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n        }\n        else {\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n            maxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n        }\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n        // The slider can move from 0 to `maxMinimapSliderTop`\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n        const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n        const sliderTop = (scrollTop * computedSliderRatio);\n        if (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n            // All lines fit in the minimap\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n        }\n        else {\n            let consideringStartLineNumber;\n            if (viewportStartLineNumber > 1) {\n                consideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n            }\n            else {\n                consideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n            }\n            let topPaddingLineCount;\n            let startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n            if (startLineNumber < extraLinesAtTheTop) {\n                topPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n                startLineNumber = 1;\n            }\n            else {\n                topPaddingLineCount = 0;\n                startLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n            }\n            // Avoid flickering caused by a partial viewport start line\n            // by being consistent w.r.t. the previous layout decision\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n                if (previousLayout.scrollTop > scrollTop) {\n                    // Scrolling up => never increase `startLineNumber`\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n                if (previousLayout.scrollTop < scrollTop) {\n                    // Scrolling down => never decrease `startLineNumber`\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n            }\n            const endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n            const partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n            let sliderTopAligned;\n            if (scrollTop >= options.paddingTop) {\n                sliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            else {\n                sliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            return new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n        }\n    }\n}\nclass MinimapLine {\n    static { this.INVALID = new MinimapLine(-1); }\n    constructor(dy) {\n        this.dy = dy;\n    }\n    onContentChanged() {\n        this.dy = -1;\n    }\n    onTokensChanged() {\n        this.dy = -1;\n    }\n}\nclass RenderData {\n    constructor(renderedLayout, imageData, lines) {\n        this.renderedLayout = renderedLayout;\n        this._imageData = imageData;\n        this._renderedLines = new RenderedLinesCollection({\n            createLine: () => MinimapLine.INVALID\n        });\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\n    }\n    /**\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n     */\n    linesEquals(layout) {\n        if (!this.scrollEquals(layout)) {\n            return false;\n        }\n        const tmp = this._renderedLines._get();\n        const lines = tmp.lines;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].dy === -1) {\n                // This line is invalid\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Check if the current RenderData matches the new layout's scroll position\n     */\n    scrollEquals(layout) {\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\n    }\n    _get() {\n        const tmp = this._renderedLines._get();\n        return {\n            imageData: this._imageData,\n            rendLineNumberStart: tmp.rendLineNumberStart,\n            lines: tmp.lines\n        };\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        return this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n    }\n    onTokensChanged(ranges) {\n        return this._renderedLines.onTokensChanged(ranges);\n    }\n}\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n    constructor(ctx, WIDTH, HEIGHT, background) {\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n        this._buffers = [\n            ctx.createImageData(WIDTH, HEIGHT),\n            ctx.createImageData(WIDTH, HEIGHT)\n        ];\n        this._lastUsedBuffer = 0;\n    }\n    getBuffer() {\n        // rotate buffers\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n        const result = this._buffers[this._lastUsedBuffer];\n        // fill with background color\n        result.data.set(this._backgroundFillData);\n        return result;\n    }\n    static _createBackgroundFillData(WIDTH, HEIGHT, background) {\n        const backgroundR = background.r;\n        const backgroundG = background.g;\n        const backgroundB = background.b;\n        const backgroundA = background.a;\n        const result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n        let offset = 0;\n        for (let i = 0; i < HEIGHT; i++) {\n            for (let j = 0; j < WIDTH; j++) {\n                result[offset] = backgroundR;\n                result[offset + 1] = backgroundG;\n                result[offset + 2] = backgroundB;\n                result[offset + 3] = backgroundA;\n                offset += 4;\n            }\n        }\n        return result;\n    }\n}\nclass MinimapSamplingState {\n    static compute(options, viewLineCount, oldSamplingState) {\n        if (options.renderMinimap === 0 /* RenderMinimap.None */ || !options.isSampling) {\n            return [null, []];\n        }\n        // ratio is intentionally not part of the layout to avoid the layout changing all the time\n        // so we need to recompute it again...\n        const { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n            viewLineCount: viewLineCount,\n            scrollBeyondLastLine: options.scrollBeyondLastLine,\n            paddingTop: options.paddingTop,\n            paddingBottom: options.paddingBottom,\n            height: options.editorHeight,\n            lineHeight: options.lineHeight,\n            pixelRatio: options.pixelRatio\n        });\n        const ratio = viewLineCount / minimapLineCount;\n        const halfRatio = ratio / 2;\n        if (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n            const result = [];\n            result[0] = 1;\n            if (minimapLineCount > 1) {\n                for (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n                    result[i] = Math.round(i * ratio + halfRatio);\n                }\n                result[minimapLineCount - 1] = viewLineCount;\n            }\n            return [new MinimapSamplingState(ratio, result), []];\n        }\n        const oldMinimapLines = oldSamplingState.minimapLines;\n        const oldLength = oldMinimapLines.length;\n        const result = [];\n        let oldIndex = 0;\n        let oldDeltaLineCount = 0;\n        let minViewLineNumber = 1;\n        const MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n        let events = [];\n        let lastEvent = null;\n        for (let i = 0; i < minimapLineCount; i++) {\n            const fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n            const toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n            while (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                        lastEvent.deleteToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount--;\n                }\n                oldIndex++;\n            }\n            let selectedViewLineNumber;\n            if (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n                // reuse the old sampled line\n                selectedViewLineNumber = oldMinimapLines[oldIndex];\n                oldIndex++;\n            }\n            else {\n                if (i === 0) {\n                    selectedViewLineNumber = 1;\n                }\n                else if (i + 1 === minimapLineCount) {\n                    selectedViewLineNumber = viewLineCount;\n                }\n                else {\n                    selectedViewLineNumber = Math.round(i * ratio + halfRatio);\n                }\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n                        lastEvent.insertToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount++;\n                }\n            }\n            result[i] = selectedViewLineNumber;\n            minViewLineNumber = selectedViewLineNumber;\n        }\n        if (events.length < MAX_EVENT_COUNT) {\n            while (oldIndex < oldLength) {\n                const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                    lastEvent.deleteToLineNumber++;\n                }\n                else {\n                    lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                    events.push(lastEvent);\n                }\n                oldDeltaLineCount--;\n                oldIndex++;\n            }\n        }\n        else {\n            // too many events, just give up\n            events = [{ type: 'flush' }];\n        }\n        return [new MinimapSamplingState(ratio, result), events];\n    }\n    constructor(samplingRatio, minimapLines // a map of 0-based minimap line indexes to 1-based view line numbers\n    ) {\n        this.samplingRatio = samplingRatio;\n        this.minimapLines = minimapLines;\n    }\n    modelLineToMinimapLine(lineNumber) {\n        return Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n    }\n    /**\n     * Will return null if the model line ranges are not intersecting with a sampled model line.\n     */\n    modelLineRangeToMinimapLineRange(fromLineNumber, toLineNumber) {\n        let fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n        while (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n            fromLineIndex--;\n        }\n        let toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n        while (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n            toLineIndex++;\n        }\n        if (fromLineIndex === toLineIndex) {\n            const sampledLineNumber = this.minimapLines[fromLineIndex];\n            if (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n                // This line is not part of the sampled lines ==> nothing to do\n                return null;\n            }\n        }\n        return [fromLineIndex + 1, toLineIndex + 1];\n    }\n    /**\n     * Will always return a range, even if it is not intersecting with a sampled model line.\n     */\n    decorationLineRangeToMinimapLineRange(startLineNumber, endLineNumber) {\n        let minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n        let minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n        if (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n            if (minimapLineEnd === this.minimapLines.length) {\n                if (minimapLineStart > 1) {\n                    minimapLineStart--;\n                }\n            }\n            else {\n                minimapLineEnd++;\n            }\n        }\n        return [minimapLineStart, minimapLineEnd];\n    }\n    onLinesDeleted(e) {\n        // have the mapping be sticky\n        const deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        let changeStartIndex = this.minimapLines.length;\n        let changeEndIndex = 0;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            if (this.minimapLines[i] <= e.toLineNumber) {\n                // this line got deleted => move to previous available\n                this.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n                changeStartIndex = Math.min(changeStartIndex, i);\n                changeEndIndex = Math.max(changeEndIndex, i);\n            }\n            else {\n                this.minimapLines[i] -= deletedLineCount;\n            }\n        }\n        return [changeStartIndex, changeEndIndex];\n    }\n    onLinesInserted(e) {\n        // have the mapping be sticky\n        const insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            this.minimapLines[i] += insertedLineCount;\n        }\n    }\n}\nexport class Minimap extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._sectionHeaderCache = new LRUCache(10, 1.5);\n        this.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n        this._selections = [];\n        this._minimapSelections = null;\n        this.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        const [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n        this._samplingState = samplingState;\n        this._shouldCheckSampling = false;\n        this._actual = new InnerMinimap(context.theme, this);\n    }\n    dispose() {\n        this._actual.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this._actual.getDomNode();\n    }\n    _onOptionsMaybeChanged() {\n        const opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        if (this.options.equals(opts)) {\n            return false;\n        }\n        this.options = opts;\n        this._recreateLineSampling();\n        this._actual.onDidChangeOptions();\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        this._minimapSelections = null;\n        return this._actual.onSelectionChanged();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsMinimap) {\n            return this._actual.onDecorationsChanged();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        if (this._samplingState) {\n            this._shouldCheckSampling = true;\n        }\n        return this._actual.onFlushed();\n    }\n    onLinesChanged(e) {\n        if (this._samplingState) {\n            const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n            if (minimapLineRange) {\n                return this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onLinesChanged(e.fromLineNumber, e.count);\n        }\n    }\n    onLinesDeleted(e) {\n        if (this._samplingState) {\n            const [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n            if (changeStartIndex <= changeEndIndex) {\n                this._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n            }\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onLinesInserted(e) {\n        if (this._samplingState) {\n            this._samplingState.onLinesInserted(e);\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onScrollChanged(e) {\n        return this._actual.onScrollChanged();\n    }\n    onThemeChanged(e) {\n        this._actual.onThemeChanged();\n        this._onOptionsMaybeChanged();\n        return true;\n    }\n    onTokensChanged(e) {\n        if (this._samplingState) {\n            const ranges = [];\n            for (const range of e.ranges) {\n                const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n                if (minimapLineRange) {\n                    ranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n                }\n            }\n            if (ranges.length) {\n                return this._actual.onTokensChanged(ranges);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onTokensChanged(e.ranges);\n        }\n    }\n    onTokensColorsChanged(e) {\n        this._onOptionsMaybeChanged();\n        return this._actual.onTokensColorsChanged();\n    }\n    onZonesChanged(e) {\n        return this._actual.onZonesChanged();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._shouldCheckSampling) {\n            this._shouldCheckSampling = false;\n            this._recreateLineSampling();\n        }\n    }\n    render(ctx) {\n        let viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n        let viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n        if (this._samplingState) {\n            viewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n            viewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n        }\n        const minimapCtx = {\n            viewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n            scrollWidth: ctx.scrollWidth,\n            scrollHeight: ctx.scrollHeight,\n            viewportStartLineNumber: viewportStartLineNumber,\n            viewportEndLineNumber: viewportEndLineNumber,\n            viewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n            scrollTop: ctx.scrollTop,\n            scrollLeft: ctx.scrollLeft,\n            viewportWidth: ctx.viewportWidth,\n            viewportHeight: ctx.viewportHeight,\n        };\n        this._actual.render(minimapCtx);\n    }\n    //#region IMinimapModel\n    _recreateLineSampling() {\n        this._minimapSelections = null;\n        const wasSampling = Boolean(this._samplingState);\n        const [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n        this._samplingState = samplingState;\n        if (wasSampling && this._samplingState) {\n            // was sampling, is sampling\n            for (const event of events) {\n                switch (event.type) {\n                    case 'deleted':\n                        this._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n                        break;\n                    case 'inserted':\n                        this._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n                        break;\n                    case 'flush':\n                        this._actual.onFlushed();\n                        break;\n                }\n            }\n        }\n    }\n    getLineCount() {\n        if (this._samplingState) {\n            return this._samplingState.minimapLines.length;\n        }\n        return this._context.viewModel.getLineCount();\n    }\n    getRealLineCount() {\n        return this._context.viewModel.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineContent(lineNumber);\n    }\n    getLineMaxColumn(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineMaxColumn(lineNumber);\n    }\n    getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed) {\n        if (this._samplingState) {\n            const result = [];\n            for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n                if (needed[lineIndex]) {\n                    result[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n                }\n                else {\n                    result[lineIndex] = null;\n                }\n            }\n            return result;\n        }\n        return this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n    }\n    getSelections() {\n        if (this._minimapSelections === null) {\n            if (this._samplingState) {\n                this._minimapSelections = [];\n                for (const selection of this._selections) {\n                    const [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n                    this._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n                }\n            }\n            else {\n                this._minimapSelections = this._selections;\n            }\n        }\n        return this._minimapSelections;\n    }\n    getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        const decorations = this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n            .filter(decoration => !decoration.options.minimap?.sectionHeaderStyle);\n        if (this._samplingState) {\n            const result = [];\n            for (const decoration of decorations) {\n                if (!decoration.options.minimap) {\n                    continue;\n                }\n                const range = decoration.range;\n                const minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n                const minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n                result.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n            }\n            return result;\n        }\n        return decorations;\n    }\n    getSectionHeaderDecorationsInViewport(startLineNumber, endLineNumber) {\n        const minimapLineHeight = this.options.minimapLineHeight;\n        const sectionHeaderFontSize = this.options.sectionHeaderFontSize;\n        const headerHeightInMinimapLines = sectionHeaderFontSize / minimapLineHeight;\n        startLineNumber = Math.floor(Math.max(1, startLineNumber - headerHeightInMinimapLines));\n        return this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n            .filter(decoration => !!decoration.options.minimap?.sectionHeaderStyle);\n    }\n    _getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        let visibleRange;\n        if (this._samplingState) {\n            const modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n            const modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n            visibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n        }\n        else {\n            visibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n        }\n        return this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n    }\n    getSectionHeaderText(decoration, fitWidth) {\n        const headerText = decoration.options.minimap?.sectionHeaderText;\n        if (!headerText) {\n            return null;\n        }\n        const cachedText = this._sectionHeaderCache.get(headerText);\n        if (cachedText) {\n            return cachedText;\n        }\n        const fittedText = fitWidth(headerText);\n        this._sectionHeaderCache.set(headerText, fittedText);\n        return fittedText;\n    }\n    getOptions() {\n        return this._context.viewModel.model.getOptions();\n    }\n    revealLineNumber(lineNumber) {\n        if (this._samplingState) {\n            lineNumber = this._samplingState.minimapLines[lineNumber - 1];\n        }\n        this._context.viewModel.revealRange('mouse', false, new Range(lineNumber, 1, lineNumber, 1), 1 /* viewEvents.VerticalRevealType.Center */, 0 /* ScrollType.Smooth */);\n    }\n    setScrollTop(scrollTop) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollTop\n        }, 1 /* ScrollType.Immediate */);\n    }\n}\nclass InnerMinimap extends Disposable {\n    constructor(theme, model) {\n        super();\n        this._renderDecorations = false;\n        this._gestureInProgress = false;\n        this._theme = theme;\n        this._model = model;\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 9 /* PartFingerprint.Minimap */);\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._shadow = createFastDomNode(document.createElement('div'));\n        this._shadow.setClassName('minimap-shadow-hidden');\n        this._domNode.appendChild(this._shadow);\n        this._canvas = createFastDomNode(document.createElement('canvas'));\n        this._canvas.setPosition('absolute');\n        this._canvas.setLeft(0);\n        this._domNode.appendChild(this._canvas);\n        this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n        this._decorationsCanvas.setPosition('absolute');\n        this._decorationsCanvas.setClassName('minimap-decorations-layer');\n        this._decorationsCanvas.setLeft(0);\n        this._domNode.appendChild(this._decorationsCanvas);\n        this._slider = createFastDomNode(document.createElement('div'));\n        this._slider.setPosition('absolute');\n        this._slider.setClassName('minimap-slider');\n        this._slider.setLayerHinting(true);\n        this._slider.setContain('strict');\n        this._domNode.appendChild(this._slider);\n        this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n        this._sliderHorizontal.setPosition('absolute');\n        this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n        this._slider.appendChild(this._sliderHorizontal);\n        this._applyLayout();\n        this._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            const renderMinimap = this._model.options.renderMinimap;\n            if (renderMinimap === 0 /* RenderMinimap.None */) {\n                return;\n            }\n            if (!this._lastRenderData) {\n                return;\n            }\n            if (this._model.options.size !== 'proportional') {\n                if (e.button === 0 && this._lastRenderData) {\n                    // pretend the click occurred in the center of the slider\n                    const position = dom.getDomNodePagePosition(this._slider.domNode);\n                    const initialPosY = position.top + position.height / 2;\n                    this._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n                }\n                return;\n            }\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n            const lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n            let lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n            lineNumber = Math.min(lineNumber, this._model.getLineCount());\n            this._model.revealLineNumber(lineNumber);\n        });\n        this._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n        this._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.button === 0 && this._lastRenderData) {\n                this._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n            }\n        });\n        this._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n        this._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData) {\n                this._slider.toggleClassName('active', true);\n                this._gestureInProgress = true;\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData && this._gestureInProgress) {\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._gestureInProgress = false;\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    _startSliderDragging(e, initialPosY, initialSliderState) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPosX = e.pageX;\n        this._slider.toggleClassName('active', true);\n        const handlePointerMove = (posy, posx) => {\n            const minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n            const pointerOrthogonalDelta = Math.min(Math.abs(posx - initialPosX), Math.abs(posx - minimapPosition.left), Math.abs(posx - minimapPosition.left - minimapPosition.width));\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._model.setScrollTop(initialSliderState.scrollTop);\n                return;\n            }\n            const pointerDelta = posy - initialPosY;\n            this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n        };\n        if (e.pageY !== initialPosY) {\n            handlePointerMove(e.pageY, initialPosX);\n        }\n        this._sliderPointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, pointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX), () => {\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    scrollDueToTouchEvent(touch) {\n        const startY = this._domNode.domNode.getBoundingClientRect().top;\n        const scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n        this._model.setScrollTop(scrollTop);\n    }\n    dispose() {\n        this._pointerDownListener.dispose();\n        this._sliderPointerMoveMonitor.dispose();\n        this._sliderPointerDownListener.dispose();\n        this._gestureDisposable.dispose();\n        this._sliderTouchStartListener.dispose();\n        this._sliderTouchMoveListener.dispose();\n        this._sliderTouchEndListener.dispose();\n        super.dispose();\n    }\n    _getMinimapDomNodeClassName() {\n        const class_ = ['minimap'];\n        if (this._model.options.showSlider === 'always') {\n            class_.push('slider-always');\n        }\n        else {\n            class_.push('slider-mouseover');\n        }\n        if (this._model.options.autohide) {\n            class_.push('autohide');\n        }\n        return class_.join(' ');\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _applyLayout() {\n        this._domNode.setLeft(this._model.options.minimapLeft);\n        this._domNode.setWidth(this._model.options.minimapWidth);\n        this._domNode.setHeight(this._model.options.minimapHeight);\n        this._shadow.setHeight(this._model.options.minimapHeight);\n        this._canvas.setWidth(this._model.options.canvasOuterWidth);\n        this._canvas.setHeight(this._model.options.canvasOuterHeight);\n        this._canvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._canvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n        this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n        this._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._slider.setWidth(this._model.options.minimapWidth);\n    }\n    _getBuffer() {\n        if (!this._buffers) {\n            if (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._model.options.canvasInnerWidth, this._model.options.canvasInnerHeight, this._model.options.backgroundColor);\n            }\n        }\n        return this._buffers ? this._buffers.getBuffer() : null;\n    }\n    // ---- begin view event handlers\n    onDidChangeOptions() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._applyLayout();\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    }\n    onSelectionChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onDecorationsChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onFlushed() {\n        this._lastRenderData = null;\n        return true;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n        }\n        return false;\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._lastRenderData?.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n        return true;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._lastRenderData?.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n        return true;\n    }\n    onScrollChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onThemeChanged() {\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._renderDecorations = true;\n        return true;\n    }\n    onTokensChanged(ranges) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onTokensChanged(ranges);\n        }\n        return false;\n    }\n    onTokensColorsChanged() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        return true;\n    }\n    onZonesChanged() {\n        this._lastRenderData = null;\n        return true;\n    }\n    // --- end event handlers\n    render(renderingCtx) {\n        const renderMinimap = this._model.options.renderMinimap;\n        if (renderMinimap === 0 /* RenderMinimap.None */) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n            this._sliderHorizontal.setWidth(0);\n            this._sliderHorizontal.setHeight(0);\n            return;\n        }\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n        }\n        else {\n            this._shadow.setClassName('minimap-shadow-visible');\n        }\n        const layout = MinimapLayout.create(this._model.options, renderingCtx.viewportStartLineNumber, renderingCtx.viewportEndLineNumber, renderingCtx.viewportStartLineNumberVerticalOffset, renderingCtx.viewportHeight, renderingCtx.viewportContainsWhitespaceGaps, this._model.getLineCount(), this._model.getRealLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n        this._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n        this._slider.setTop(layout.sliderTop);\n        this._slider.setHeight(layout.sliderHeight);\n        // Compute horizontal slider coordinates\n        this._sliderHorizontal.setLeft(0);\n        this._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n        this._sliderHorizontal.setTop(0);\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\n        this.renderDecorations(layout);\n        this._lastRenderData = this.renderLines(layout);\n    }\n    renderDecorations(layout) {\n        if (this._renderDecorations) {\n            this._renderDecorations = false;\n            const selections = this._model.getSelections();\n            selections.sort(Range.compareRangesUsingStarts);\n            const decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n            decorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n            const { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const minimapCharWidth = this._model.options.minimapCharWidth;\n            const tabSize = this._model.getOptions().tabSize;\n            const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n            // We first need to render line highlights and then render decorations on top of those.\n            // But we need to pick a single color for each line, and use that as a line highlight.\n            // This needs to be the color of the decoration with the highest `zIndex`, but priority\n            // is given to the selection.\n            const highlightedLines = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, false);\n            this._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n            this._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n            const lineOffsetMap = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, null);\n            this._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderSectionHeaders(layout);\n        }\n    }\n    _renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        canvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n        let y1 = 0;\n        let y2 = 0;\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                highlightedLines.set(line, true);\n            }\n            const yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n            const yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n            if (y2 >= yy1) {\n                // merge into previous\n                y2 = yy2;\n            }\n            else {\n                if (y2 > y1) {\n                    // flush\n                    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n                }\n                y1 = yy1;\n                y2 = yy2;\n            }\n        }\n        if (y2 > y1) {\n            // flush\n            canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n        }\n    }\n    _renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight) {\n        const highlightColors = new Map();\n        // Loop backwards to hit first decorations with higher `zIndex`\n        for (let i = decorations.length - 1; i >= 0; i--) {\n            const decoration = decorations[i];\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions || minimapOptions.position !== 1 /* MinimapPosition.Inline */) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            let highlightColor = highlightColors.get(decorationColor.toString());\n            if (!highlightColor) {\n                highlightColor = decorationColor.transparent(0.5).toString();\n                highlightColors.set(decorationColor.toString(), highlightColor);\n            }\n            canvasContext.fillStyle = highlightColor;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                if (highlightedLines.has(line)) {\n                    continue;\n                }\n                highlightedLines.set(line, true);\n                const y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n                canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n            }\n        }\n    }\n    _renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            }\n        }\n    }\n    _renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        // Loop forwards to hit first decorations with lower `zIndex`\n        for (const decoration of decorations) {\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                switch (minimapOptions.position) {\n                    case 1 /* MinimapPosition.Inline */:\n                        this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n                        continue;\n                    case 2 /* MinimapPosition.Gutter */: {\n                        const y = layout.getYForLineNumber(line, minimapLineHeight);\n                        const x = 2;\n                        this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    renderDecorationOnLine(canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, minimapLineHeight, tabSize, charWidth, canvasInnerWidth) {\n        const y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n        // Skip rendering the line if it's vertically outside our viewport\n        if (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n            return;\n        }\n        const { startLineNumber, endLineNumber } = decorationRange;\n        const startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n        const endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n        const x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n        const x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n        this.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n    }\n    getXOffsetForPosition(lineOffsetMap, lineNumber, column, tabSize, charWidth, canvasInnerWidth) {\n        if (column === 1) {\n            return MINIMAP_GUTTER_WIDTH;\n        }\n        const minimumXOffset = (column - 1) * charWidth;\n        if (minimumXOffset >= canvasInnerWidth) {\n            // there is no need to look at actual characters,\n            // as this column is certainly after the minimap width\n            return canvasInnerWidth;\n        }\n        // Cache line offset data so that it is only read once per line\n        let lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n        if (!lineIndexToXOffset) {\n            const lineData = this._model.getLineContent(lineNumber);\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n            let prevx = MINIMAP_GUTTER_WIDTH;\n            for (let i = 1; i < lineData.length + 1; i++) {\n                const charCode = lineData.charCodeAt(i - 1);\n                const dx = charCode === 9 /* CharCode.Tab */\n                    ? tabSize * charWidth\n                    : strings.isFullWidthCharacter(charCode)\n                        ? 2 * charWidth\n                        : charWidth;\n                const x = prevx + dx;\n                if (x >= canvasInnerWidth) {\n                    // no need to keep on going, as we've hit the canvas width\n                    lineIndexToXOffset[i] = canvasInnerWidth;\n                    break;\n                }\n                lineIndexToXOffset[i] = x;\n                prevx = x;\n            }\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n        }\n        if (column - 1 < lineIndexToXOffset.length) {\n            return lineIndexToXOffset[column - 1];\n        }\n        // goes over the canvas width\n        return canvasInnerWidth;\n    }\n    renderDecoration(canvasContext, decorationColor, x, y, width, height) {\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n        canvasContext.fillRect(x, y, width, height);\n    }\n    _renderSectionHeaders(layout) {\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        const sectionHeaderFontSize = this._model.options.sectionHeaderFontSize;\n        const sectionHeaderLetterSpacing = this._model.options.sectionHeaderLetterSpacing;\n        const backgroundFillHeight = sectionHeaderFontSize * 1.5;\n        const { canvasInnerWidth } = this._model.options;\n        const backgroundColor = this._model.options.backgroundColor;\n        const backgroundFill = `rgb(${backgroundColor.r} ${backgroundColor.g} ${backgroundColor.b} / .7)`;\n        const foregroundColor = this._model.options.sectionHeaderFontColor;\n        const foregroundFill = `rgb(${foregroundColor.r} ${foregroundColor.g} ${foregroundColor.b})`;\n        const separatorStroke = foregroundFill;\n        const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n        canvasContext.letterSpacing = sectionHeaderLetterSpacing + 'px';\n        canvasContext.font = '500 ' + sectionHeaderFontSize + 'px ' + this._model.options.sectionHeaderFontFamily;\n        canvasContext.strokeStyle = separatorStroke;\n        canvasContext.lineWidth = 0.2;\n        const decorations = this._model.getSectionHeaderDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n        decorations.sort((a, b) => a.range.startLineNumber - b.range.startLineNumber);\n        const fitWidth = InnerMinimap._fitSectionHeader.bind(null, canvasContext, canvasInnerWidth - MINIMAP_GUTTER_WIDTH);\n        for (const decoration of decorations) {\n            const y = layout.getYForLineNumber(decoration.range.startLineNumber, minimapLineHeight) + sectionHeaderFontSize;\n            const backgroundFillY = y - sectionHeaderFontSize;\n            const separatorY = backgroundFillY + 2;\n            const headerText = this._model.getSectionHeaderText(decoration, fitWidth);\n            InnerMinimap._renderSectionLabel(canvasContext, headerText, decoration.options.minimap?.sectionHeaderStyle === 2 /* MinimapSectionHeaderStyle.Underlined */, backgroundFill, foregroundFill, canvasInnerWidth, backgroundFillY, backgroundFillHeight, y, separatorY);\n        }\n    }\n    static _fitSectionHeader(target, maxWidth, headerText) {\n        if (!headerText) {\n            return headerText;\n        }\n        const ellipsis = '…';\n        const width = target.measureText(headerText).width;\n        const ellipsisWidth = target.measureText(ellipsis).width;\n        if (width <= maxWidth || width <= ellipsisWidth) {\n            return headerText;\n        }\n        const len = headerText.length;\n        const averageCharWidth = width / headerText.length;\n        const maxCharCount = Math.floor((maxWidth - ellipsisWidth) / averageCharWidth) - 1;\n        // Find a halfway point that isn't after whitespace\n        let halfCharCount = Math.ceil(maxCharCount / 2);\n        while (halfCharCount > 0 && /\\s/.test(headerText[halfCharCount - 1])) {\n            --halfCharCount;\n        }\n        // Split with ellipsis\n        return headerText.substring(0, halfCharCount)\n            + ellipsis + headerText.substring(len - (maxCharCount - halfCharCount));\n    }\n    static _renderSectionLabel(target, headerText, hasSeparatorLine, backgroundFill, foregroundFill, minimapWidth, backgroundFillY, backgroundFillHeight, textY, separatorY) {\n        if (headerText) {\n            target.fillStyle = backgroundFill;\n            target.fillRect(0, backgroundFillY, minimapWidth, backgroundFillHeight);\n            target.fillStyle = foregroundFill;\n            target.fillText(headerText, MINIMAP_GUTTER_WIDTH, textY);\n        }\n        if (hasSeparatorLine) {\n            target.beginPath();\n            target.moveTo(0, separatorY);\n            target.lineTo(minimapWidth, separatorY);\n            target.closePath();\n            target.stroke();\n        }\n    }\n    renderLines(layout) {\n        const startLineNumber = layout.startLineNumber;\n        const endLineNumber = layout.endLineNumber;\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        // Check if nothing changed w.r.t. lines from last frame\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n            const _lastData = this._lastRenderData._get();\n            // Nice!! Nothing changed from last frame\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\n        }\n        // Oh well!! We need to repaint some lines...\n        const imageData = this._getBuffer();\n        if (!imageData) {\n            // 0 width or 0 height canvas, nothing to do\n            return null;\n        }\n        // Render untouched lines by using last rendered data.\n        const [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(imageData, layout.topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData);\n        // Fetch rendering info from view model for rest of lines that need rendering.\n        const lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n        const tabSize = this._model.getOptions().tabSize;\n        const defaultBackground = this._model.options.defaultBackgroundColor;\n        const background = this._model.options.backgroundColor;\n        const foregroundAlpha = this._model.options.foregroundAlpha;\n        const tokensColorTracker = this._model.tokensColorTracker;\n        const useLighterFont = tokensColorTracker.backgroundIsLight();\n        const renderMinimap = this._model.options.renderMinimap;\n        const charRenderer = this._model.options.charRenderer();\n        const fontScale = this._model.options.fontScale;\n        const minimapCharWidth = this._model.options.minimapCharWidth;\n        const baseCharHeight = (renderMinimap === 1 /* RenderMinimap.Text */ ? 2 /* Constants.BASE_CHAR_HEIGHT */ : 2 /* Constants.BASE_CHAR_HEIGHT */ + 1);\n        const renderMinimapLineHeight = baseCharHeight * fontScale;\n        const innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n        // Render the rest of lines\n        const backgroundA = background.a / 255;\n        const renderBackground = new RGBA8(Math.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r), Math.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g), Math.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b), 255);\n        let dy = layout.topPaddingLineCount * minimapLineHeight;\n        const renderedLines = [];\n        for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n            if (needed[lineIndex]) {\n                InnerMinimap._renderLine(imageData, renderBackground, background.a, useLighterFont, renderMinimap, minimapCharWidth, tokensColorTracker, foregroundAlpha, charRenderer, dy, innerLinePadding, tabSize, lineInfo[lineIndex], fontScale, minimapLineHeight);\n            }\n            renderedLines[lineIndex] = new MinimapLine(dy);\n            dy += minimapLineHeight;\n        }\n        const dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n        const dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n        const dirtyHeight = dirtyY2 - dirtyY1;\n        // Finally, paint to the canvas\n        const ctx = this._canvas.domNode.getContext('2d');\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n        // Save rendered data for reuse on next frame if possible\n        return new RenderData(layout, imageData, renderedLines);\n    }\n    static _renderUntouchedLines(target, topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n        const needed = [];\n        if (!lastRenderData) {\n            for (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n                needed[i] = true;\n            }\n            return [-1, -1, needed];\n        }\n        const _lastData = lastRenderData._get();\n        const lastTargetData = _lastData.imageData.data;\n        const lastStartLineNumber = _lastData.rendLineNumberStart;\n        const lastLines = _lastData.lines;\n        const lastLinesLength = lastLines.length;\n        const WIDTH = target.width;\n        const targetData = target.data;\n        const maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n        let dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n        let dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n        let copySourceStart = -1;\n        let copySourceEnd = -1;\n        let copyDestStart = -1;\n        let copyDestEnd = -1;\n        let dest_dy = topPaddingLineCount * minimapLineHeight;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - startLineNumber;\n            const lastLineIndex = lineNumber - lastStartLineNumber;\n            const source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n            if (source_dy === -1) {\n                needed[lineIndex] = true;\n                dest_dy += minimapLineHeight;\n                continue;\n            }\n            const sourceStart = source_dy * WIDTH * 4;\n            const sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n            const destStart = dest_dy * WIDTH * 4;\n            const destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n                // contiguous zone => extend copy request\n                copySourceEnd = sourceEnd;\n                copyDestEnd = destEnd;\n            }\n            else {\n                if (copySourceStart !== -1) {\n                    // flush existing copy request\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                        dirtyPixel1 = copySourceEnd;\n                    }\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                        dirtyPixel2 = copySourceStart;\n                    }\n                }\n                copySourceStart = sourceStart;\n                copySourceEnd = sourceEnd;\n                copyDestStart = destStart;\n                copyDestEnd = destEnd;\n            }\n            needed[lineIndex] = false;\n            dest_dy += minimapLineHeight;\n        }\n        if (copySourceStart !== -1) {\n            // flush existing copy request\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                dirtyPixel1 = copySourceEnd;\n            }\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                dirtyPixel2 = copySourceStart;\n            }\n        }\n        const dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n        const dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n        return [dirtyY1, dirtyY2, needed];\n    }\n    static _renderLine(target, backgroundColor, backgroundAlpha, useLighterFont, renderMinimap, charWidth, colorTracker, foregroundAlpha, minimapCharRenderer, dy, innerLinePadding, tabSize, lineData, fontScale, minimapLineHeight) {\n        const content = lineData.content;\n        const tokens = lineData.tokens;\n        const maxDx = target.width - charWidth;\n        const force1pxHeight = (minimapLineHeight === 1);\n        let dx = MINIMAP_GUTTER_WIDTH;\n        let charIndex = 0;\n        let tabsCharDelta = 0;\n        for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n            const tokenEndIndex = tokens.getEndOffset(tokenIndex);\n            const tokenColorId = tokens.getForeground(tokenIndex);\n            const tokenColor = colorTracker.getColor(tokenColorId);\n            for (; charIndex < tokenEndIndex; charIndex++) {\n                if (dx > maxDx) {\n                    // hit edge of minimap\n                    return;\n                }\n                const charCode = content.charCodeAt(charIndex);\n                if (charCode === 9 /* CharCode.Tab */) {\n                    const insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    // No need to render anything since tab is invisible\n                    dx += insertSpacesCount * charWidth;\n                }\n                else if (charCode === 32 /* CharCode.Space */) {\n                    // No need to render anything since space is invisible\n                    dx += charWidth;\n                }\n                else {\n                    // Render twice for a full width character\n                    const count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n                    for (let i = 0; i < count; i++) {\n                        if (renderMinimap === 2 /* RenderMinimap.Blocks */) {\n                            minimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n                        }\n                        else { // RenderMinimap.Text\n                            minimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n                        }\n                        dx += charWidth;\n                        if (dx > maxDx) {\n                            // hit edge of minimap\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nclass ContiguousLineMap {\n    constructor(startLineNumber, endLineNumber, defaultValue) {\n        this._startLineNumber = startLineNumber;\n        this._endLineNumber = endLineNumber;\n        this._defaultValue = defaultValue;\n        this._values = [];\n        for (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n            this._values[i] = defaultValue;\n        }\n    }\n    has(lineNumber) {\n        return (this.get(lineNumber) !== this._defaultValue);\n    }\n    set(lineNumber, value) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return;\n        }\n        this._values[lineNumber - this._startLineNumber] = value;\n    }\n    get(lineNumber) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return this._defaultValue;\n        }\n        return this._values[lineNumber - this._startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport * as dom from '../../../../base/browser/dom.js';\nexport class ViewOverlayWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._widgets = {};\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        this._viewDomNodeRect = { top: 0, left: 0, width: 0, height: 0 };\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n        this._domNode.setClassName('overlayWidgets');\n        this.overflowingOverlayWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingOverlayWidgetsDomNode, 5 /* PartFingerprint.OverflowingOverlayWidgets */);\n        this.overflowingOverlayWidgetsDomNode.setClassName('overflowingOverlayWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        return true;\n    }\n    // ---- end view event handlers\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        if (widget.allowEditorOverflow) {\n            this.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n        }\n        else {\n            this._domNode.appendChild(domNode);\n        }\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n    }\n    setWidgetPosition(widget, position) {\n        const widgetData = this._widgets[widget.getId()];\n        const preference = position ? position.preference : null;\n        const stack = position?.stackOridinal;\n        if (widgetData.preference === preference && widgetData.stack === stack) {\n            this._updateMaxMinWidth();\n            return false;\n        }\n        widgetData.preference = preference;\n        widgetData.stack = stack;\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.remove();\n            this.setShouldRender();\n            this._updateMaxMinWidth();\n        }\n    }\n    _updateMaxMinWidth() {\n        let maxMinWidth = 0;\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            const widget = this._widgets[widgetId];\n            const widgetMinWidthInPx = widget.widget.getMinContentWidthInPx?.();\n            if (typeof widgetMinWidthInPx !== 'undefined') {\n                maxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n            }\n        }\n        this._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n    }\n    _renderWidget(widgetData, stackCoordinates) {\n        const domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.setTop('');\n            return;\n        }\n        const maxRight = (2 * this._verticalScrollbarWidth) + this._minimapWidth;\n        if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */ || widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n            if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n                const widgetHeight = domNode.domNode.clientHeight;\n                domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            }\n            else {\n                domNode.setTop(0);\n            }\n            if (widgetData.stack !== undefined) {\n                domNode.setTop(stackCoordinates[widgetData.preference]);\n                stackCoordinates[widgetData.preference] += domNode.domNode.clientWidth;\n            }\n            else {\n                domNode.setRight(maxRight);\n            }\n        }\n        else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n            domNode.domNode.style.right = '50%';\n            if (widgetData.stack !== undefined) {\n                domNode.setTop(stackCoordinates[2 /* OverlayWidgetPositionPreference.TOP_CENTER */]);\n                stackCoordinates[2 /* OverlayWidgetPositionPreference.TOP_CENTER */] += domNode.domNode.clientHeight;\n            }\n            else {\n                domNode.setTop(0);\n            }\n        }\n        else {\n            const { top, left } = widgetData.preference;\n            const fixedOverflowWidgets = this._context.configuration.options.get(42 /* EditorOption.fixedOverflowWidgets */);\n            if (fixedOverflowWidgets && widgetData.widget.allowEditorOverflow) {\n                // top, left are computed relative to the editor and we need them relative to the page\n                const editorBoundingBox = this._viewDomNodeRect;\n                domNode.setTop(top + editorBoundingBox.top);\n                domNode.setLeft(left + editorBoundingBox.left);\n                domNode.setPosition('fixed');\n            }\n            else {\n                domNode.setTop(top);\n                domNode.setLeft(left);\n                domNode.setPosition('absolute');\n            }\n        }\n    }\n    prepareRender(ctx) {\n        this._viewDomNodeRect = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        const keys = Object.keys(this._widgets);\n        const stackCoordinates = Array.from({ length: 2 /* OverlayWidgetPositionPreference.TOP_CENTER */ + 1 }, () => 0);\n        keys.sort((a, b) => (this._widgets[a].stack || 0) - (this._widgets[b].stack || 0));\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId], stackCoordinates);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground, editorMultiCursorSecondaryForeground, editorMultiCursorPrimaryForeground } from '../../../common/core/editorColorRegistry.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\nclass Settings {\n    constructor(config, theme) {\n        const options = config.options;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.pixelRatio = options.get(144 /* EditorOption.pixelRatio */);\n        this.overviewRulerLanes = options.get(83 /* EditorOption.overviewRulerLanes */);\n        this.renderBorder = options.get(82 /* EditorOption.overviewRulerBorder */);\n        const borderColor = theme.getColor(editorOverviewRulerBorder);\n        this.borderColor = borderColor ? borderColor.toString() : null;\n        this.hideCursor = options.get(59 /* EditorOption.hideCursorInOverviewRuler */);\n        const cursorColorSingle = theme.getColor(editorCursorForeground);\n        this.cursorColorSingle = cursorColorSingle ? cursorColorSingle.transparent(0.7).toString() : null;\n        const cursorColorPrimary = theme.getColor(editorMultiCursorPrimaryForeground);\n        this.cursorColorPrimary = cursorColorPrimary ? cursorColorPrimary.transparent(0.7).toString() : null;\n        const cursorColorSecondary = theme.getColor(editorMultiCursorSecondaryForeground);\n        this.cursorColorSecondary = cursorColorSecondary ? cursorColorSecondary.transparent(0.7).toString() : null;\n        this.themeType = theme.type;\n        const minimapOpts = options.get(73 /* EditorOption.minimap */);\n        const minimapEnabled = minimapOpts.enabled;\n        const minimapSide = minimapOpts.side;\n        const themeColor = theme.getColor(editorOverviewRulerBackground);\n        const defaultBackground = TokenizationRegistry.getDefaultBackground();\n        if (themeColor) {\n            this.backgroundColor = themeColor;\n        }\n        else if (minimapEnabled && minimapSide === 'right') {\n            this.backgroundColor = defaultBackground;\n        }\n        else {\n            this.backgroundColor = null;\n        }\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const position = layoutInfo.overviewRuler;\n        this.top = position.top;\n        this.right = position.right;\n        this.domWidth = position.width;\n        this.domHeight = position.height;\n        if (this.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this.canvasWidth = 0;\n            this.canvasHeight = 0;\n        }\n        else {\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n        }\n        const [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n        this.x = x;\n        this.w = w;\n    }\n    _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\n        const remainingWidth = canvasWidth - canvasLeftOffset;\n        if (laneCount >= 3) {\n            const leftWidth = Math.floor(remainingWidth / 3);\n            const rightWidth = Math.floor(remainingWidth / 3);\n            const centerWidth = remainingWidth - leftWidth - rightWidth;\n            const leftOffset = canvasLeftOffset;\n            const centerOffset = leftOffset + leftWidth;\n            const rightOffset = leftOffset + leftWidth + centerWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    centerOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    centerOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    centerWidth, // Center\n                    leftWidth + centerWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + centerWidth + rightWidth, // Left | Right\n                    centerWidth + rightWidth, // Center | Right\n                    leftWidth + centerWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else if (laneCount === 2) {\n            const leftWidth = Math.floor(remainingWidth / 2);\n            const rightWidth = remainingWidth - leftWidth;\n            const leftOffset = canvasLeftOffset;\n            const rightOffset = leftOffset + leftWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    leftOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    leftOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    leftWidth, // Center\n                    leftWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + rightWidth, // Left | Right\n                    leftWidth + rightWidth, // Center | Right\n                    leftWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else {\n            const offset = canvasLeftOffset;\n            const width = remainingWidth;\n            return [\n                [\n                    0,\n                    offset, // Left\n                    offset, // Center\n                    offset, // Left | Center\n                    offset, // Right\n                    offset, // Left | Right\n                    offset, // Center | Right\n                    offset, // Left | Center | Right\n                ], [\n                    0,\n                    width, // Left\n                    width, // Center\n                    width, // Left | Center\n                    width, // Right\n                    width, // Left | Right\n                    width, // Center | Right\n                    width, // Left | Center | Right\n                ]\n            ];\n        }\n    }\n    equals(other) {\n        return (this.lineHeight === other.lineHeight\n            && this.pixelRatio === other.pixelRatio\n            && this.overviewRulerLanes === other.overviewRulerLanes\n            && this.renderBorder === other.renderBorder\n            && this.borderColor === other.borderColor\n            && this.hideCursor === other.hideCursor\n            && this.cursorColorSingle === other.cursorColorSingle\n            && this.cursorColorPrimary === other.cursorColorPrimary\n            && this.cursorColorSecondary === other.cursorColorSecondary\n            && this.themeType === other.themeType\n            && Color.equals(this.backgroundColor, other.backgroundColor)\n            && this.top === other.top\n            && this.right === other.right\n            && this.domWidth === other.domWidth\n            && this.domHeight === other.domHeight\n            && this.canvasWidth === other.canvasWidth\n            && this.canvasHeight === other.canvasHeight);\n    }\n}\nexport class DecorationsOverviewRuler extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n        this._renderedDecorations = [];\n        this._renderedCursorPositions = [];\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName('decorationsOverviewRuler');\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateSettings(false);\n        this._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n            if (e.changedColorMap) {\n                this._updateSettings(true);\n            }\n        });\n        this._cursorPositions = [{ position: new Position(1, 1), color: this._settings.cursorColorSingle }];\n    }\n    dispose() {\n        super.dispose();\n        this._tokensColorTrackerListener.dispose();\n    }\n    _updateSettings(renderNow) {\n        const newSettings = new Settings(this._context.configuration, this._context.theme);\n        if (this._settings && this._settings.equals(newSettings)) {\n            // nothing to do\n            return false;\n        }\n        this._settings = newSettings;\n        this._domNode.setTop(this._settings.top);\n        this._domNode.setRight(this._settings.right);\n        this._domNode.setWidth(this._settings.domWidth);\n        this._domNode.setHeight(this._settings.domHeight);\n        this._domNode.domNode.width = this._settings.canvasWidth;\n        this._domNode.domNode.height = this._settings.canvasHeight;\n        if (renderNow) {\n            this._render();\n        }\n        return true;\n    }\n    // ---- begin view event handlers\n    _markRenderingIsNeeded() {\n        this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        return true;\n    }\n    _markRenderingIsMaybeNeeded() {\n        this._actualShouldRender = 1 /* ShouldRenderValue.Maybe */;\n        return true;\n    }\n    onConfigurationChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    onCursorStateChanged(e) {\n        this._cursorPositions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            let color = this._settings.cursorColorSingle;\n            if (len > 1) {\n                color = i === 0 ? this._settings.cursorColorPrimary : this._settings.cursorColorSecondary;\n            }\n            this._cursorPositions.push({ position: e.selections[i].getPosition(), color });\n        }\n        this._cursorPositions.sort((a, b) => Position.compare(a.position, b.position));\n        return this._markRenderingIsMaybeNeeded();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsOverviewRuler) {\n            return this._markRenderingIsMaybeNeeded();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n    }\n    onZonesChanged(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onThemeChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(editorCtx) {\n        this._render();\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n    }\n    _render() {\n        const backgroundColor = this._settings.backgroundColor;\n        if (this._settings.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n            this._domNode.setDisplay('none');\n            return;\n        }\n        const decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n        decorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.position.lineNumber === b.position.lineNumber && a.color === b.color)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */) {\n            // both decorations and cursor positions are unchanged, nothing to do\n            return;\n        }\n        this._renderedDecorations = decorations;\n        this._renderedCursorPositions = this._cursorPositions;\n        this._domNode.setDisplay('block');\n        const canvasWidth = this._settings.canvasWidth;\n        const canvasHeight = this._settings.canvasHeight;\n        const lineHeight = this._settings.lineHeight;\n        const viewLayout = this._context.viewLayout;\n        const outerHeight = this._context.viewLayout.getScrollHeight();\n        const heightRatio = canvasHeight / outerHeight;\n        const minDecorationHeight = (6 /* Constants.MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\n        const halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n        const canvasCtx = this._domNode.domNode.getContext('2d');\n        if (backgroundColor) {\n            if (backgroundColor.isOpaque()) {\n                // We have a background color which is opaque, we can just paint the entire surface with it\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n            else {\n                // We have a background color which is transparent, we need to first clear the surface and\n                // then fill it\n                canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n        }\n        else {\n            // We don't have a background color\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        }\n        const x = this._settings.x;\n        const w = this._settings.w;\n        for (const decorationGroup of decorations) {\n            const color = decorationGroup.color;\n            const decorationGroupData = decorationGroup.data;\n            canvasCtx.fillStyle = color;\n            let prevLane = 0;\n            let prevY1 = 0;\n            let prevY2 = 0;\n            for (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n                const lane = decorationGroupData[3 * i];\n                const startLineNumber = decorationGroupData[3 * i + 1];\n                const endLineNumber = decorationGroupData[3 * i + 2];\n                let y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n                let y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n                const height = y2 - y1;\n                if (height < minDecorationHeight) {\n                    let yCenter = ((y1 + y2) / 2) | 0;\n                    if (yCenter < halfMinDecorationHeight) {\n                        yCenter = halfMinDecorationHeight;\n                    }\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n                        yCenter = canvasHeight - halfMinDecorationHeight;\n                    }\n                    y1 = yCenter - halfMinDecorationHeight;\n                    y2 = yCenter + halfMinDecorationHeight;\n                }\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n                    }\n                    prevLane = lane;\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n        }\n        // Draw cursors\n        if (!this._settings.hideCursor) {\n            const cursorHeight = (2 * this._settings.pixelRatio) | 0;\n            const halfCursorHeight = (cursorHeight / 2) | 0;\n            const cursorX = this._settings.x[7 /* OverviewRulerLane.Full */];\n            const cursorW = this._settings.w[7 /* OverviewRulerLane.Full */];\n            let prevY1 = -100;\n            let prevY2 = -100;\n            let prevColor = null;\n            for (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n                const color = this._cursorPositions[i].color;\n                if (!color) {\n                    continue;\n                }\n                const cursor = this._cursorPositions[i].position;\n                let yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n                if (yCenter < halfCursorHeight) {\n                    yCenter = halfCursorHeight;\n                }\n                else if (yCenter + halfCursorHeight > canvasHeight) {\n                    yCenter = canvasHeight - halfCursorHeight;\n                }\n                const y1 = yCenter - halfCursorHeight;\n                const y2 = y1 + cursorHeight;\n                if (y1 > prevY2 + 1 || color !== prevColor) {\n                    // flush prev\n                    if (i !== 0 && prevColor) {\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n                    }\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n                prevColor = color;\n                canvasCtx.fillStyle = color;\n            }\n            if (prevColor) {\n                canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n            }\n        }\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n            canvasCtx.beginPath();\n            canvasCtx.lineWidth = 1;\n            canvasCtx.strokeStyle = this._settings.borderColor;\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(0, canvasHeight);\n            canvasCtx.moveTo(1, 0);\n            canvasCtx.lineTo(canvasWidth, 0);\n            canvasCtx.stroke();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\nexport class OverviewRuler extends ViewEventHandler {\n    constructor(context, cssClassName) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName(cssClassName);\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._zoneManager = new OverviewZoneManager((lineNumber) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n        this._zoneManager.setDOMWidth(0);\n        this._zoneManager.setDOMHeight(0);\n        this._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n        this._zoneManager.setLineHeight(options.get(67 /* EditorOption.lineHeight */));\n        this._zoneManager.setPixelRatio(options.get(144 /* EditorOption.pixelRatio */));\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n            this._zoneManager.setLineHeight(options.get(67 /* EditorOption.lineHeight */));\n            this._render();\n        }\n        if (e.hasChanged(144 /* EditorOption.pixelRatio */)) {\n            this._zoneManager.setPixelRatio(options.get(144 /* EditorOption.pixelRatio */));\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n        return true;\n    }\n    onFlushed(e) {\n        this._render();\n        return true;\n    }\n    onScrollChanged(e) {\n        if (e.scrollHeightChanged) {\n            this._zoneManager.setOuterHeight(e.scrollHeight);\n            this._render();\n        }\n        return true;\n    }\n    onZonesChanged(e) {\n        this._render();\n        return true;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    setLayout(position) {\n        this._domNode.setTop(position.top);\n        this._domNode.setRight(position.right);\n        let hasChanged = false;\n        hasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n        hasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n        if (hasChanged) {\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n    }\n    setZones(zones) {\n        this._zoneManager.setZones(zones);\n        this._render();\n    }\n    _render() {\n        if (this._zoneManager.getOuterHeight() === 0) {\n            return false;\n        }\n        const width = this._zoneManager.getCanvasWidth();\n        const height = this._zoneManager.getCanvasHeight();\n        const colorZones = this._zoneManager.resolveColorZones();\n        const id2Color = this._zoneManager.getId2Color();\n        const ctx = this._domNode.domNode.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        if (colorZones.length > 0) {\n            this._renderOneLane(ctx, colorZones, id2Color, width);\n        }\n        return true;\n    }\n    _renderOneLane(ctx, colorZones, id2Color, width) {\n        let currentColorId = 0;\n        let currentFrom = 0;\n        let currentTo = 0;\n        for (const zone of colorZones) {\n            const zoneColorId = zone.colorId;\n            const zoneFrom = zone.from;\n            const zoneTo = zone.to;\n            if (zoneColorId !== currentColorId) {\n                ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                currentColorId = zoneColorId;\n                ctx.fillStyle = id2Color[currentColorId];\n                currentFrom = zoneFrom;\n                currentTo = zoneTo;\n            }\n            else {\n                if (currentTo >= zoneFrom) {\n                    currentTo = Math.max(currentTo, zoneTo);\n                }\n                else {\n                    ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                    currentFrom = zoneFrom;\n                    currentTo = zoneTo;\n                }\n            }\n        }\n        ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './rulers.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Rulers extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('view-rulers');\n        this._renderedRulers = [];\n        const options = this._context.configuration.options;\n        this._rulers = options.get(103 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._rulers = options.get(103 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    _ensureRulersCount() {\n        const currentCount = this._renderedRulers.length;\n        const desiredCount = this._rulers.length;\n        if (currentCount === desiredCount) {\n            // Nothing to do\n            return;\n        }\n        if (currentCount < desiredCount) {\n            const { tabSize } = this._context.viewModel.model.getOptions();\n            const rulerWidth = tabSize;\n            let addCount = desiredCount - currentCount;\n            while (addCount > 0) {\n                const node = createFastDomNode(document.createElement('div'));\n                node.setClassName('view-ruler');\n                node.setWidth(rulerWidth);\n                this.domNode.appendChild(node);\n                this._renderedRulers.push(node);\n                addCount--;\n            }\n            return;\n        }\n        let removeCount = currentCount - desiredCount;\n        while (removeCount > 0) {\n            const node = this._renderedRulers.pop();\n            this.domNode.removeChild(node);\n            removeCount--;\n        }\n    }\n    render(ctx) {\n        this._ensureRulersCount();\n        for (let i = 0, len = this._rulers.length; i < len; i++) {\n            const node = this._renderedRulers[i];\n            const ruler = this._rulers[i];\n            node.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n            node.setHeight(Math.min(ctx.scrollHeight, 1000000));\n            node.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    static { this.SELECTION_CLASS_NAME = 'selected-text'; }\n    static { this.SELECTION_TOP_LEFT = 'top-left-radius'; }\n    static { this.SELECTION_BOTTOM_LEFT = 'bottom-left-radius'; }\n    static { this.SELECTION_TOP_RIGHT = 'top-right-radius'; }\n    static { this.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius'; }\n    static { this.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background'; }\n    static { this.ROUNDED_PIECE_WIDTH = 10; }\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, bottom, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"'\n            + 'top:' + top.toString() + 'px;'\n            + 'bottom:' + bottom.toString() + 'px;'\n            + 'left:' + left.toString() + 'px;'\n            + 'width:' + width.toString() + 'px;'\n            + '\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            const bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.paddingLeft = paddingLeft;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport var CursorPlurality;\n(function (CursorPlurality) {\n    CursorPlurality[CursorPlurality[\"Single\"] = 0] = \"Single\";\n    CursorPlurality[CursorPlurality[\"MultiPrimary\"] = 1] = \"MultiPrimary\";\n    CursorPlurality[CursorPlurality[\"MultiSecondary\"] = 2] = \"MultiSecondary\";\n})(CursorPlurality || (CursorPlurality = {}));\nexport class ViewCursor {\n    constructor(context, plurality) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._pluralityClass = '';\n        this.setPlurality(plurality);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    setPlurality(plurality) {\n        switch (plurality) {\n            default:\n            case CursorPlurality.Single:\n                this._pluralityClass = '';\n                break;\n            case CursorPlurality.MultiPrimary:\n                this._pluralityClass = 'cursor-primary';\n                break;\n            case CursorPlurality.MultiSecondary:\n                this._pluralityClass = 'cursor-secondary';\n                break;\n        }\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position, pauseAnimation) {\n        if (pauseAnimation) {\n            this._domNode.domNode.style.transitionProperty = 'none';\n        }\n        else {\n            this._domNode.domNode.style.transitionProperty = '';\n        }\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        let textContentClassName = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            const window = dom.getWindow(this._domNode.domNode);\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(window, this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                    textContentClassName = this._getTokenClassName(position);\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(window, 1);\n            }\n            let left = visibleRange.left;\n            let paddingLeft = 0;\n            if (width >= 2 && left >= 1) {\n                // shift the cursor a bit between the characters\n                paddingLeft = 1;\n                left -= paddingLeft;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            textContent = nextGrapheme;\n            textContentClassName = this._getTokenClassName(position);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n    }\n    _getTokenClassName(position) {\n        const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n        const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n        return lineData.tokens.getClassName(tokenIndex);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${this._pluralityClass} ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor, CursorPlurality } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground, editorMultiCursorPrimaryForeground, editorMultiCursorPrimaryBackground, editorMultiCursorSecondaryForeground, editorMultiCursorSecondaryBackground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\nexport class ViewCursors extends ViewPart {\n    static { this.BLINK_INTERVAL = 500; }\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(92 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context, CursorPlurality.Single);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new WindowIntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(92 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions, reason) {\n        const pauseAnimation = (this._secondaryCursors.length !== secondaryPositions.length\n            || (this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */));\n        this._primaryCursor.setPlurality(secondaryPositions.length ? CursorPlurality.MultiPrimary : CursorPlurality.Single);\n        this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context, CursorPlurality.MultiSecondary);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */);\n        const isSolid = (blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const cursorThemes = [\n        { class: '.cursor', foreground: editorCursorForeground, background: editorCursorBackground },\n        { class: '.cursor-primary', foreground: editorMultiCursorPrimaryForeground, background: editorMultiCursorPrimaryBackground },\n        { class: '.cursor-secondary', foreground: editorMultiCursorSecondaryForeground, background: editorMultiCursorSecondaryBackground },\n    ];\n    for (const cursorTheme of cursorThemes) {\n        const caret = theme.getColor(cursorTheme.foreground);\n        if (caret) {\n            let caretBackground = theme.getColor(cursorTheme.background);\n            if (!caretBackground) {\n                caretBackground = caret.opposite();\n            }\n            collector.addRule(`.monaco-editor .cursors-layer ${cursorTheme.class} { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .cursors-layer.has-selection ${cursorTheme.class} { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n            }\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        return zone.ordinal ?? zone.afterColumn ?? 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n        const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.remove();\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.remove();\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._options = new WhitespaceOptions(this._context.configuration);\n        this._selection = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const newOptions = new WhitespaceOptions(this._context.configuration);\n        if (this._options.equals(newOptions)) {\n            return e.hasChanged(146 /* EditorOption.layoutInfo */);\n        }\n        this._options = newOptions;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selection = e.selections;\n        if (this._options.renderWhitespace === 'selection') {\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._options.renderWhitespace === 'none') {\n            this._renderResult = null;\n            return;\n        }\n        const startLineNumber = ctx.visibleRange.startLineNumber;\n        const endLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = endLineNumber - startLineNumber + 1;\n        const needed = new Array(lineCount);\n        for (let i = 0; i < lineCount; i++) {\n            needed[i] = true;\n        }\n        const viewportData = this._context.viewModel.getMinimapLinesRenderingData(ctx.viewportData.startLineNumber, ctx.viewportData.endLineNumber, needed);\n        this._renderResult = [];\n        for (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n            const lineData = viewportData.data[lineIndex];\n            let selectionsOnLine = null;\n            if (this._options.renderWhitespace === 'selection') {\n                const selections = this._selection;\n                for (const selection of selections) {\n                    if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                        // Selection does not intersect line\n                        continue;\n                    }\n                    const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                    const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                    if (startColumn < endColumn) {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n            this._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n        }\n    }\n    _applyRenderWhitespace(ctx, lineNumber, selections, lineData) {\n        if (this._options.renderWhitespace === 'selection' && !selections) {\n            return '';\n        }\n        if (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n            return '';\n        }\n        const color = this._context.theme.getColor(editorWhitespaces);\n        const USE_SVG = this._options.renderWithSVG;\n        const lineContent = lineData.content;\n        const len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n        const continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n        const fauxIndentLength = lineData.minColumn - 1;\n        const onlyBoundary = (this._options.renderWhitespace === 'boundary');\n        const onlyTrailing = (this._options.renderWhitespace === 'trailing');\n        const lineHeight = this._options.lineHeight;\n        const middotWidth = this._options.middotWidth;\n        const wsmiddotWidth = this._options.wsmiddotWidth;\n        const spaceWidth = this._options.spaceWidth;\n        const wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n        const middotDiff = Math.abs(middotWidth - spaceWidth);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        // U+00B7 - MIDDLE DOT\n        const renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n        const canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n        let result = '';\n        let lineIsEmptyOrWhitespace = false;\n        let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n        let lastNonWhitespaceIndex;\n        if (firstNonWhitespaceIndex === -1) {\n            lineIsEmptyOrWhitespace = true;\n            firstNonWhitespaceIndex = len;\n            lastNonWhitespaceIndex = len;\n        }\n        else {\n            lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        }\n        let currentSelectionIndex = 0;\n        let currentSelection = selections && selections[currentSelectionIndex];\n        let maxLeft = 0;\n        for (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n            const chCode = lineContent.charCodeAt(charIndex);\n            if (currentSelection && charIndex >= currentSelection.endOffset) {\n                currentSelectionIndex++;\n                currentSelection = selections && selections[currentSelectionIndex];\n            }\n            if (chCode !== 9 /* CharCode.Tab */ && chCode !== 32 /* CharCode.Space */) {\n                continue;\n            }\n            if (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n                // If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n                continue;\n            }\n            if (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === 32 /* CharCode.Space */) {\n                // rendering only boundary whitespace\n                const prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n                if (prevChCode !== 32 /* CharCode.Space */ && nextChCode !== 32 /* CharCode.Space */) {\n                    continue;\n                }\n            }\n            if (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n                const prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const isSingleTrailingSpace = (chCode === 32 /* CharCode.Space */ && (prevCharCode !== 32 /* CharCode.Space */ && prevCharCode !== 9 /* CharCode.Tab */));\n                if (isSingleTrailingSpace) {\n                    continue;\n                }\n            }\n            if (selections && (!currentSelection || currentSelection.startOffset > charIndex || currentSelection.endOffset <= charIndex)) {\n                // If rendering whitespace on selection, check that the charIndex falls within a selection\n                continue;\n            }\n            const visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n            if (!visibleRange) {\n                continue;\n            }\n            if (USE_SVG) {\n                maxLeft = Math.max(maxLeft, visibleRange.left);\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n                }\n                else {\n                    result += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n                }\n            }\n            else {\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n                }\n                else {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n                }\n            }\n        }\n        if (USE_SVG) {\n            maxLeft = Math.round(maxLeft + spaceWidth);\n            return (`<svg style=\"bottom:0;position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n                + result\n                + `</svg>`);\n        }\n        return result;\n    }\n    _renderArrow(lineHeight, spaceWidth, left) {\n        const strokeWidth = spaceWidth / 7;\n        const width = spaceWidth;\n        const dy = lineHeight / 2;\n        const dx = left;\n        const p1 = { x: 0, y: strokeWidth / 2 };\n        const p2 = { x: 100 / 125 * width, y: p1.y };\n        const p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n        const p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n        const p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n        const p6 = { x: p5.x, y: -p5.y };\n        const p7 = { x: p4.x, y: -p4.y };\n        const p8 = { x: p3.x, y: -p3.y };\n        const p9 = { x: p2.x, y: -p2.y };\n        const p10 = { x: p1.x, y: -p1.y };\n        const p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n        const parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n        return `<path d=\"M ${parts}\" />`;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nclass WhitespaceOptions {\n    constructor(config) {\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            // whitespace is rendered in the view line\n            this.renderWhitespace = 'none';\n            this.renderWithSVG = false;\n        }\n        else if (experimentalWhitespaceRendering === 'svg') {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = true;\n        }\n        else {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = false;\n        }\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(118 /* EditorOption.stopRenderingLineAfter */);\n    }\n    equals(other) {\n        return (this.renderWhitespace === other.renderWhitespace\n            && this.renderWithSVG === other.renderWithSVG\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewController } from './view/viewController.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { Selection } from '../common/core/selection.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nlet View = class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        // Actual mutable state\n        this._shouldRecomputeGlyphMarginLanes = false;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        // Glyph margin widgets\n        this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n        this._viewParts.push(this._glyphMarginWidgets);\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context, this.domNode);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n            overflowWidgetsDomNode.appendChild(this._overlayWidgets.overflowingOverlayWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n            this.domNode.appendChild(this._overlayWidgets.overflowingOverlayWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _computeGlyphMarginLanes() {\n        const model = this._context.viewModel.model;\n        const laneModel = this._context.viewModel.glyphLanes;\n        let glyphs = [];\n        let maxLineNumber = 0;\n        // Add all margin decorations\n        glyphs = glyphs.concat(model.getAllMarginDecorations().map((decoration) => {\n            const lane = decoration.options.glyphMargin?.position ?? GlyphMarginLane.Center;\n            maxLineNumber = Math.max(maxLineNumber, decoration.range.endLineNumber);\n            return { range: decoration.range, lane, persist: decoration.options.glyphMargin?.persistLane };\n        }));\n        // Add all glyph margin widgets\n        glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map((widget) => {\n            const range = model.validateRange(widget.preference.range);\n            maxLineNumber = Math.max(maxLineNumber, range.endLineNumber);\n            return { range, lane: widget.preference.lane };\n        }));\n        // Sorted by their start position\n        glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        laneModel.reset(maxLineNumber);\n        for (const glyph of glyphs) {\n            laneModel.push(glyph.lane, glyph.range, glyph.persist);\n        }\n        return laneModel;\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        // https://stackoverflow.com/questions/38905916/content-in-google-chrome-larger-than-16777216-px-not-being-rendered\n        this._linesContent.setWidth(16777216);\n        this._linesContent.setHeight(16777216);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(143 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsGlyphMargin) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n        }\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n        }\n        if (this._renderAnimationFrame === null) {\n            const rendering = this._createCoordinatedRendering();\n            this._renderAnimationFrame = EditorRenderingCoordinator.INSTANCE.scheduleCoordinatedRendering({\n                window: dom.getWindow(this.domNode?.domNode),\n                prepareRenderText: () => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    try {\n                        return rendering.prepareRenderText();\n                    }\n                    finally {\n                        this._renderAnimationFrame = null;\n                    }\n                },\n                renderText: () => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.renderText();\n                },\n                prepareRender: (viewParts, ctx) => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.prepareRender(viewParts, ctx);\n                },\n                render: (viewParts, ctx) => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.render(viewParts, ctx);\n                }\n            });\n        }\n    }\n    _flushAccumulatedAndRenderNow() {\n        const rendering = this._createCoordinatedRendering();\n        safeInvokeNoArg(() => rendering.prepareRenderText());\n        const data = safeInvokeNoArg(() => rendering.renderText());\n        if (data) {\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n            safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n        }\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _createCoordinatedRendering() {\n        return {\n            prepareRenderText: () => {\n                if (this._shouldRecomputeGlyphMarginLanes) {\n                    this._shouldRecomputeGlyphMarginLanes = false;\n                    const model = this._computeGlyphMarginLanes();\n                    this._context.configuration.setGlyphMarginDecorationLaneCount(model.requiredLanes);\n                }\n                inputLatency.onRenderStart();\n            },\n            renderText: () => {\n                if (!this.domNode.domNode.isConnected) {\n                    return null;\n                }\n                let viewPartsToRender = this._getViewPartsToRender();\n                if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n                    // Nothing to render\n                    return null;\n                }\n                const partialViewportData = this._context.viewLayout.getLinesViewportData();\n                this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n                const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n                if (this._contentWidgets.shouldRender()) {\n                    // Give the content widgets a chance to set their max width before a possible synchronous layout\n                    this._contentWidgets.onBeforeRender(viewportData);\n                }\n                if (this._viewLines.shouldRender()) {\n                    this._viewLines.renderText(viewportData);\n                    this._viewLines.onDidRender();\n                    // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n                    viewPartsToRender = this._getViewPartsToRender();\n                }\n                return [viewPartsToRender, new RenderingContext(this._context.viewLayout, viewportData, this._viewLines)];\n            },\n            prepareRender: (viewPartsToRender, ctx) => {\n                for (const viewPart of viewPartsToRender) {\n                    viewPart.prepareRender(ctx);\n                }\n            },\n            render: (viewPartsToRender, ctx) => {\n                for (const viewPart of viewPartsToRender) {\n                    viewPart.render(ctx);\n                    viewPart.onDidRender();\n                }\n            }\n        };\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        this._contentWidgets.setWidgetPosition(widgetData.widget, widgetData.position?.position ?? null, widgetData.position?.secondaryPosition ?? null, widgetData.position?.preference ?? null, widgetData.position?.positionAffinity ?? null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, widgetData.position);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.addWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n    layoutGlyphMarginWidget(widgetData) {\n        const newPreference = widgetData.position;\n        const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n            this._scheduleRender();\n        }\n    }\n    removeGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.removeWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n};\nView = __decorate([\n    __param(6, IInstantiationService)\n], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n        return null;\n    }\n}\nclass EditorRenderingCoordinator {\n    static { this.INSTANCE = new EditorRenderingCoordinator(); }\n    constructor() {\n        this._coordinatedRenderings = [];\n        this._animationFrameRunners = new Map();\n    }\n    scheduleCoordinatedRendering(rendering) {\n        this._coordinatedRenderings.push(rendering);\n        this._scheduleRender(rendering.window);\n        return {\n            dispose: () => {\n                const renderingIndex = this._coordinatedRenderings.indexOf(rendering);\n                if (renderingIndex === -1) {\n                    return;\n                }\n                this._coordinatedRenderings.splice(renderingIndex, 1);\n                if (this._coordinatedRenderings.length === 0) {\n                    // There are no more renderings to coordinate => cancel animation frames\n                    for (const [_, disposable] of this._animationFrameRunners) {\n                        disposable.dispose();\n                    }\n                    this._animationFrameRunners.clear();\n                }\n            }\n        };\n    }\n    _scheduleRender(window) {\n        if (!this._animationFrameRunners.has(window)) {\n            const runner = () => {\n                this._animationFrameRunners.delete(window);\n                this._onRenderScheduled();\n            };\n            this._animationFrameRunners.set(window, dom.runAtThisOrScheduleAtNextAnimationFrame(window, runner, 100));\n        }\n    }\n    _onRenderScheduled() {\n        const coordinatedRenderings = this._coordinatedRenderings.slice(0);\n        this._coordinatedRenderings = [];\n        for (const rendering of coordinatedRenderings) {\n            safeInvokeNoArg(() => rendering.prepareRenderText());\n        }\n        const datas = [];\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            datas[i] = safeInvokeNoArg(() => rendering.renderText());\n        }\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            const data = datas[i];\n            if (!data) {\n                continue;\n            }\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n        }\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            const data = datas[i];\n            if (!data) {\n                continue;\n            }\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertIsDefined } from '../../../base/common/types.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport { ModelLineProjectionData } from '../../common/modelLineProjectionData.js';\nimport { LineInjectedText } from '../../common/textModelEvents.js';\nconst ttPolicy = createTrustedTypesPolicy('domLineBreaksComputer', { createHTML: value => value });\nexport class DOMLineBreaksComputerFactory {\n    static create(targetWindow) {\n        return new DOMLineBreaksComputerFactory(new WeakRef(targetWindow));\n    }\n    constructor(targetWindow) {\n        this.targetWindow = targetWindow;\n    }\n    createLineBreaksComputer(fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak) {\n        const requests = [];\n        const injectedTexts = [];\n        return {\n            addRequest: (lineText, injectedText, previousLineBreakData) => {\n                requests.push(lineText);\n                injectedTexts.push(injectedText);\n            },\n            finalize: () => {\n                return createLineBreaks(assertIsDefined(this.targetWindow.deref()), requests, fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak, injectedTexts);\n            }\n        };\n    }\n}\nfunction createLineBreaks(targetWindow, requests, fontInfo, tabSize, firstLineBreakColumn, wrappingIndent, wordBreak, injectedTextsPerLine) {\n    function createEmptyLineBreakWithPossiblyInjectedText(requestIdx) {\n        const injectedTexts = injectedTextsPerLine[requestIdx];\n        if (injectedTexts) {\n            const lineText = LineInjectedText.applyInjectedText(requests[requestIdx], injectedTexts);\n            const injectionOptions = injectedTexts.map(t => t.options);\n            const injectionOffsets = injectedTexts.map(text => text.column - 1);\n            // creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK\n            // because `breakOffsetsVisibleColumn` will never be used because it contains injected text\n            return new ModelLineProjectionData(injectionOffsets, injectionOptions, [lineText.length], [], 0);\n        }\n        else {\n            return null;\n        }\n    }\n    if (firstLineBreakColumn === -1) {\n        const result = [];\n        for (let i = 0, len = requests.length; i < len; i++) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n        }\n        return result;\n    }\n    const overallWidth = Math.round(firstLineBreakColumn * fontInfo.typicalHalfwidthCharacterWidth);\n    const additionalIndent = (wrappingIndent === 3 /* WrappingIndent.DeepIndent */ ? 2 : wrappingIndent === 2 /* WrappingIndent.Indent */ ? 1 : 0);\n    const additionalIndentSize = Math.round(tabSize * additionalIndent);\n    const additionalIndentLength = Math.ceil(fontInfo.spaceWidth * additionalIndentSize);\n    const containerDomNode = document.createElement('div');\n    applyFontInfo(containerDomNode, fontInfo);\n    const sb = new StringBuilder(10000);\n    const firstNonWhitespaceIndices = [];\n    const wrappedTextIndentLengths = [];\n    const renderLineContents = [];\n    const allCharOffsets = [];\n    const allVisibleColumns = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineContent = LineInjectedText.applyInjectedText(requests[i], injectedTextsPerLine[i]);\n        let firstNonWhitespaceIndex = 0;\n        let wrappedTextIndentLength = 0;\n        let width = overallWidth;\n        if (wrappingIndent !== 0 /* WrappingIndent.None */) {\n            firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n            if (firstNonWhitespaceIndex === -1) {\n                // all whitespace line\n                firstNonWhitespaceIndex = 0;\n            }\n            else {\n                // Track existing indent\n                for (let i = 0; i < firstNonWhitespaceIndex; i++) {\n                    const charWidth = (lineContent.charCodeAt(i) === 9 /* CharCode.Tab */\n                        ? (tabSize - (wrappedTextIndentLength % tabSize))\n                        : 1);\n                    wrappedTextIndentLength += charWidth;\n                }\n                const indentWidth = Math.ceil(fontInfo.spaceWidth * wrappedTextIndentLength);\n                // Force sticking to beginning of line if no character would fit except for the indentation\n                if (indentWidth + fontInfo.typicalFullwidthCharacterWidth > overallWidth) {\n                    firstNonWhitespaceIndex = 0;\n                    wrappedTextIndentLength = 0;\n                }\n                else {\n                    width = overallWidth - indentWidth;\n                }\n            }\n        }\n        const renderLineContent = lineContent.substr(firstNonWhitespaceIndex);\n        const tmp = renderLine(renderLineContent, wrappedTextIndentLength, tabSize, width, sb, additionalIndentLength);\n        firstNonWhitespaceIndices[i] = firstNonWhitespaceIndex;\n        wrappedTextIndentLengths[i] = wrappedTextIndentLength;\n        renderLineContents[i] = renderLineContent;\n        allCharOffsets[i] = tmp[0];\n        allVisibleColumns[i] = tmp[1];\n    }\n    const html = sb.build();\n    const trustedhtml = ttPolicy?.createHTML(html) ?? html;\n    containerDomNode.innerHTML = trustedhtml;\n    containerDomNode.style.position = 'absolute';\n    containerDomNode.style.top = '10000';\n    if (wordBreak === 'keepAll') {\n        // word-break: keep-all; overflow-wrap: anywhere\n        containerDomNode.style.wordBreak = 'keep-all';\n        containerDomNode.style.overflowWrap = 'anywhere';\n    }\n    else {\n        // overflow-wrap: break-word\n        containerDomNode.style.wordBreak = 'inherit';\n        containerDomNode.style.overflowWrap = 'break-word';\n    }\n    targetWindow.document.body.appendChild(containerDomNode);\n    const range = document.createRange();\n    const lineDomNodes = Array.prototype.slice.call(containerDomNode.children, 0);\n    const result = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineDomNode = lineDomNodes[i];\n        const breakOffsets = readLineBreaks(range, lineDomNode, renderLineContents[i], allCharOffsets[i]);\n        if (breakOffsets === null) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n            continue;\n        }\n        const firstNonWhitespaceIndex = firstNonWhitespaceIndices[i];\n        const wrappedTextIndentLength = wrappedTextIndentLengths[i] + additionalIndentSize;\n        const visibleColumns = allVisibleColumns[i];\n        const breakOffsetsVisibleColumn = [];\n        for (let j = 0, len = breakOffsets.length; j < len; j++) {\n            breakOffsetsVisibleColumn[j] = visibleColumns[breakOffsets[j]];\n        }\n        if (firstNonWhitespaceIndex !== 0) {\n            // All break offsets are relative to the renderLineContent, make them absolute again\n            for (let j = 0, len = breakOffsets.length; j < len; j++) {\n                breakOffsets[j] += firstNonWhitespaceIndex;\n            }\n        }\n        let injectionOptions;\n        let injectionOffsets;\n        const curInjectedTexts = injectedTextsPerLine[i];\n        if (curInjectedTexts) {\n            injectionOptions = curInjectedTexts.map(t => t.options);\n            injectionOffsets = curInjectedTexts.map(text => text.column - 1);\n        }\n        else {\n            injectionOptions = null;\n            injectionOffsets = null;\n        }\n        result[i] = new ModelLineProjectionData(injectionOffsets, injectionOptions, breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength);\n    }\n    containerDomNode.remove();\n    return result;\n}\nfunction renderLine(lineContent, initialVisibleColumn, tabSize, width, sb, wrappingIndentLength) {\n    if (wrappingIndentLength !== 0) {\n        const hangingOffset = String(wrappingIndentLength);\n        sb.appendString('<div style=\"text-indent: -');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; padding-left: ');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; box-sizing: border-box; width:');\n    }\n    else {\n        sb.appendString('<div style=\"width:');\n    }\n    sb.appendString(String(width));\n    sb.appendString('px;\">');\n    // if (containsRTL) {\n    // \tsb.appendASCIIString('\" dir=\"ltr');\n    // }\n    const len = lineContent.length;\n    let visibleColumn = initialVisibleColumn;\n    let charOffset = 0;\n    const charOffsets = [];\n    const visibleColumns = [];\n    let nextCharCode = (0 < len ? lineContent.charCodeAt(0) : 0 /* CharCode.Null */);\n    sb.appendString('<span>');\n    for (let charIndex = 0; charIndex < len; charIndex++) {\n        if (charIndex !== 0 && charIndex % 16384 /* Constants.SPAN_MODULO_LIMIT */ === 0) {\n            sb.appendString('</span><span>');\n        }\n        charOffsets[charIndex] = charOffset;\n        visibleColumns[charIndex] = visibleColumn;\n        const charCode = nextCharCode;\n        nextCharCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n        let producedCharacters = 1;\n        let charWidth = 1;\n        switch (charCode) {\n            case 9 /* CharCode.Tab */:\n                producedCharacters = (tabSize - (visibleColumn % tabSize));\n                charWidth = producedCharacters;\n                for (let space = 1; space <= producedCharacters; space++) {\n                    if (space < producedCharacters) {\n                        sb.appendCharCode(0xA0); // &nbsp;\n                    }\n                    else {\n                        sb.appendASCIICharCode(32 /* CharCode.Space */);\n                    }\n                }\n                break;\n            case 32 /* CharCode.Space */:\n                if (nextCharCode === 32 /* CharCode.Space */) {\n                    sb.appendCharCode(0xA0); // &nbsp;\n                }\n                else {\n                    sb.appendASCIICharCode(32 /* CharCode.Space */);\n                }\n                break;\n            case 60 /* CharCode.LessThan */:\n                sb.appendString('&lt;');\n                break;\n            case 62 /* CharCode.GreaterThan */:\n                sb.appendString('&gt;');\n                break;\n            case 38 /* CharCode.Ampersand */:\n                sb.appendString('&amp;');\n                break;\n            case 0 /* CharCode.Null */:\n                sb.appendString('&#00;');\n                break;\n            case 65279 /* CharCode.UTF8_BOM */:\n            case 8232 /* CharCode.LINE_SEPARATOR */:\n            case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n            case 133 /* CharCode.NEXT_LINE */:\n                sb.appendCharCode(0xFFFD);\n                break;\n            default:\n                if (strings.isFullWidthCharacter(charCode)) {\n                    charWidth++;\n                }\n                if (charCode < 32) {\n                    sb.appendCharCode(9216 + charCode);\n                }\n                else {\n                    sb.appendCharCode(charCode);\n                }\n        }\n        charOffset += producedCharacters;\n        visibleColumn += charWidth;\n    }\n    sb.appendString('</span>');\n    charOffsets[lineContent.length] = charOffset;\n    visibleColumns[lineContent.length] = visibleColumn;\n    sb.appendString('</div>');\n    return [charOffsets, visibleColumns];\n}\nfunction readLineBreaks(range, lineDomNode, lineContent, charOffsets) {\n    if (lineContent.length <= 1) {\n        return null;\n    }\n    const spans = Array.prototype.slice.call(lineDomNode.children, 0);\n    const breakOffsets = [];\n    try {\n        discoverBreaks(range, spans, charOffsets, 0, null, lineContent.length - 1, null, breakOffsets);\n    }\n    catch (err) {\n        console.log(err);\n        return null;\n    }\n    if (breakOffsets.length === 0) {\n        return null;\n    }\n    breakOffsets.push(lineContent.length);\n    return breakOffsets;\n}\nfunction discoverBreaks(range, spans, charOffsets, low, lowRects, high, highRects, result) {\n    if (low === high) {\n        return;\n    }\n    lowRects = lowRects || readClientRect(range, spans, charOffsets[low], charOffsets[low + 1]);\n    highRects = highRects || readClientRect(range, spans, charOffsets[high], charOffsets[high + 1]);\n    if (Math.abs(lowRects[0].top - highRects[0].top) <= 0.1) {\n        // same line\n        return;\n    }\n    // there is at least one line break between these two offsets\n    if (low + 1 === high) {\n        // the two characters are adjacent, so the line break must be exactly between them\n        result.push(high);\n        return;\n    }\n    const mid = low + ((high - low) / 2) | 0;\n    const midRects = readClientRect(range, spans, charOffsets[mid], charOffsets[mid + 1]);\n    discoverBreaks(range, spans, charOffsets, low, lowRects, mid, midRects, result);\n    discoverBreaks(range, spans, charOffsets, mid, midRects, high, highRects, result);\n}\nfunction readClientRect(range, spans, startOffset, endOffset) {\n    range.setStart(spans[(startOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, startOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    range.setEnd(spans[(endOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, endOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    return range.getClientRects();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, runWhenWindowIdle } from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        return runWhenWindowIdle(getWindow(this._editor?.getDomNode()), () => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50);\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CodeEditorWidget_1;\nimport '../../services/markerDecorations.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, createEventDeliveryQueue } from '../../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport './editor.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { EditorConfiguration } from '../../config/editorConfiguration.js';\nimport { TabFocus } from '../../config/tabFocus.js';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { View } from '../../view.js';\nimport { DOMLineBreaksComputerFactory } from '../../view/domLineBreaksComputer.js';\nimport { ViewUserInputEvents } from '../../view/viewUserInputEvents.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { filterValidationDecorations } from '../../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { editorUnnecessaryCodeOpacity } from '../../../common/core/editorColorRegistry.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { WordOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { InternalEditorAction } from '../../../common/editorAction.js';\nimport * as editorCommon from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { ViewModel } from '../../../common/viewModel/viewModelImpl.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    static { CodeEditorWidget_1 = this; }\n    static { this.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n        description: 'workbench-dnd-target',\n        className: 'dnd-target'\n    }); }\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    get contextMenuId() {\n        return this._configuration.contextMenuId;\n    }\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = createEventDeliveryQueue();\n        this._contributions = this._register(new CodeEditorContributions());\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onWillChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onWillChangeModel = this._onWillChangeModel.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._updateCounter = 0;\n        this._onBeginUpdate = this._register(new Emitter());\n        this.onBeginUpdate = this._onBeginUpdate.event;\n        this._onEndUpdate = this._register(new Emitter());\n        this.onEndUpdate = this._onEndUpdate.event;\n        this._actions = new Map();\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        codeEditorService.willCreateCodeEditor();\n        const options = { ..._options };\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, codeEditorWidgetOptions.contextMenuId ?? (codeEditorWidgetOptions.isSimpleWidget ? MenuId.SimpleEditorContext : MenuId.EditorContext), options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = this._register(instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._modelData = null;\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement, this._overflowWidgetsDomNode);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._glyphMarginWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        this._contributions.initialize(this, contributions, this._instantiationService);\n        for (const action of EditorExtensionsRegistry.getEditorActions()) {\n            if (this._actions.has(action.id)) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                continue;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, action.metadata, action.precondition ?? undefined, (args) => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, args));\n                });\n            }, this._contextKeyService);\n            this._actions.set(internalAction.id, internalAction);\n        }\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(92 /* EditorOption.readOnly */)\n                && this._configuration.options.get(36 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target?.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: async (e) => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target?.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            },\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    writeScreenReaderContent(reason) {\n        this._modelData?.view.writeScreenReaderContent(reason);\n    }\n    _createConfiguration(isSimpleWidget, contextMenuId, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, contextMenuId, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        this._actions.clear();\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(132 /* EditorOption.wordSeparators */), this._configuration.options.get(131 /* EditorOption.wordSegmenterLocales */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        try {\n            this._beginUpdate();\n            if (!this._modelData) {\n                return;\n            }\n            this._modelData.model.setValue(newValue);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        try {\n            this._beginUpdate();\n            const model = _model;\n            if (this._modelData === null && model === null) {\n                // Current model is the new model\n                return;\n            }\n            if (this._modelData && this._modelData.model === model) {\n                // Current model is the new model\n                return;\n            }\n            const e = {\n                oldModelUrl: this._modelData?.model.uri || null,\n                newModelUrl: model?.uri || null\n            };\n            this._onWillChangeModel.fire(e);\n            const hasTextFocus = this.hasTextFocus();\n            const detachedModel = this._detachModel();\n            this._attachModel(model);\n            if (hasTextFocus && this.hasModel()) {\n                this.focus();\n            }\n            this._removeDecorationTypes();\n            this._onDidChangeModel.fire(e);\n            this._postDetachModelCleanup(detachedModel);\n            this._contributionsDisposable = this._contributions.onAfterModelAttached();\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        const maxCol = this._modelData.model.getLineMaxColumn(lineNumber);\n        return CodeEditorWidget_1._getVerticalOffsetAfterPosition(this._modelData, lineNumber, maxCol, includeViewZones);\n    }\n    setHiddenAreas(ranges, source) {\n        this._modelData?.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    hasPendingScrollAnimation() {\n        if (!this._modelData) {\n            return false;\n        }\n        return this._modelData.viewModel.viewLayout.hasPendingScrollAnimation();\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = this._contributions.saveViewState();\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    handleInitialized() {\n        this._getViewModel()?.visibleLinesStabilized();\n    }\n    getContribution(id) {\n        return this._contributions.get(id);\n    }\n    getActions() {\n        return Array.from(this._actions.values());\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions.get(id) || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        try {\n            this._beginUpdate();\n            switch (handlerId) {\n                case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                    this._startComposition();\n                    return;\n                case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                    this._endComposition(source);\n                    return;\n                case \"type\" /* editorCommon.Handler.Type */: {\n                    const args = payload;\n                    this._type(source, args.text || '');\n                    return;\n                }\n                case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                    const args = payload;\n                    this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                    return;\n                }\n                case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                    const args = payload;\n                    this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                    return;\n                }\n                case \"paste\" /* editorCommon.Handler.Paste */: {\n                    const args = payload;\n                    this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null, args.clipboardEvent);\n                    return;\n                }\n                case \"cut\" /* editorCommon.Handler.Cut */:\n                    this._cut(source);\n                    return;\n            }\n            const action = this.getAction(handlerId);\n            if (action) {\n                Promise.resolve(action.run(payload)).then(undefined, onUnexpectedError);\n                return;\n            }\n            if (!this._modelData) {\n                return;\n            }\n            if (this._triggerEditorCommand(source, handlerId, payload)) {\n                return;\n            }\n            this._triggerCommand(handlerId, payload);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode, clipboardEvent) {\n        if (!this._modelData) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                clipboardEvent,\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.changeDecorations(accessor => accessor.deltaDecorations(oldDecorationsIds, []));\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    layout(dimension, postponeRendering = false) {\n        this._configuration.observeContainer(dimension);\n        if (!postponeRendering) {\n            this.render();\n        }\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id:' + widget.getId());\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    addGlyphMarginWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._glyphMarginWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a glyph margin widget with the same id.');\n        }\n        this._glyphMarginWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addGlyphMarginWidget(widgetData);\n        }\n    }\n    layoutGlyphMarginWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._glyphMarginWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutGlyphMarginWidget(widgetData);\n            }\n        }\n    }\n    removeGlyphMarginWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._glyphMarginWidgets[widgetId];\n            delete this._glyphMarginWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeGlyphMarginWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(67 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.viewModel.batchEvents(() => {\n            this._modelData.view.render(true, forceRedraw);\n        });\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(50 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._bannerDomNode.remove();\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        const attachedView = model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(dom.getWindow(this._domElement)), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(dom.getWindow(this._domElement), callback), this.languageConfigurationService, this._themeService, attachedView, {\n            batchChanges: (cb) => {\n                try {\n                    this._beginUpdate();\n                    return cb();\n                }\n                finally {\n                    this._endUpdate();\n                }\n            },\n        });\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        const multiCursorLimit = this.getOption(80 /* EditorOption.multiCursorLimit */);\n                        const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n                        this._notificationService.prompt(Severity.Warning, message, [\n                            {\n                                label: 'Find and Replace',\n                                run: () => {\n                                    this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                                }\n                            },\n                            {\n                                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                                run: () => {\n                                    this._commandService.executeCommand('workbench.action.openSettings2', {\n                                        query: 'editor.multiCursorLimit'\n                                    });\n                                }\n                            }\n                        ]);\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            keys = Object.keys(this._glyphMarginWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addGlyphMarginWidget(this._glyphMarginWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove, attachedView);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode, this._instantiationService);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel?.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        this._contributionsDisposable?.dispose();\n        this._contributionsDisposable = undefined;\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            removeDomNode.remove();\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._bannerDomNode.remove();\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget_1.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n    setContextValue(key, value) {\n        this._contextKeyService.createKey(key, value);\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            this._onBeginUpdate.fire();\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            this._onEndUpdate.fire();\n        }\n    }\n};\nCodeEditorWidget = CodeEditorWidget_1 = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove, attachedView) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n        this.attachedView = attachedView;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached(this.attachedView);\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n    constructor(_contributions, deliveryQueue) {\n        super({ deliveryQueue });\n        this._contributions = _contributions;\n    }\n    fire(event) {\n        this._contributions.onBeforeInteractionEvent();\n        super.fire(event);\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._tabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._register(TabFocus.onDidChangeTabFocus((tabFocusMode) => this._tabMovesFocus.set(tabFocusMode)));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._tabMovesFocus.set(TabFocus.getTabFocusMode());\n        this._editorReadonly.set(options.get(92 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(61 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(22 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInEmbeddedEditor = EditorContextKeys.isInEmbeddedEditor.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInEmbeddedEditor.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInEmbeddedEditor.set(model.uri.scheme === Schemas.walkThroughSnippet || model.uri.scheme === Schemas.vscodeChatCodeBlock);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement, overflowWidgetsDomNode) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hadFocus = undefined;\n        this._hasDomElementFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._overflowWidgetsDomNodeHasFocus = false;\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasDomElementFocus = true;\n            this._update();\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasDomElementFocus = false;\n            this._update();\n        }));\n        if (overflowWidgetsDomNode) {\n            this._overflowWidgetsDomNode = this._register(dom.trackFocus(overflowWidgetsDomNode));\n            this._register(this._overflowWidgetsDomNode.onDidFocus(() => {\n                this._overflowWidgetsDomNodeHasFocus = true;\n                this._update();\n            }));\n            this._register(this._overflowWidgetsDomNode.onDidBlur(() => {\n                this._overflowWidgetsDomNodeHasFocus = false;\n                this._update();\n            }));\n        }\n    }\n    _update() {\n        const focused = this._hasDomElementFocus || this._overflowWidgetsDomNodeHasFocus;\n        if (this._hadFocus !== focused) {\n            this._hadFocus = focused;\n            this._onChange.fire(undefined);\n        }\n    }\n    hasFocus() {\n        return this._hadFocus ?? false;\n    }\n}\nclass EditorDecorationsCollection {\n    get length() {\n        return this._decorationIds.length;\n    }\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n        return this._decorationIds;\n    }\n    append(newDecorations) {\n        let newDecorationIds = [];\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                newDecorationIds = accessor.deltaDecorations([], newDecorations);\n                this._decorationIds = this._decorationIds.concat(newDecorationIds);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n        return newDecorationIds;\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    static capture(editor) {\n        if (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n            // Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n            return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n        }\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        const visibleRanges = editor.getVisibleRanges();\n        if (visibleRanges.length > 0) {\n            visiblePosition = visibleRanges[0].getStartPosition();\n            const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n            visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n        }\n        return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    constructor(_initialScrollTop, _initialContentHeight, _visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._initialScrollTop = _initialScrollTop;\n        this._initialContentHeight = _initialContentHeight;\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    restore(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset, 1 /* ScrollType.Immediate */);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, autorunOpts, autorunWithStore, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { ElementSizeObserver } from '../../config/elementSizeObserver.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { TextLength } from '../../../common/core/textLength.js';\nexport function joinCombine(arr1, arr2, keySelector, combine) {\n    if (arr1.length === 0) {\n        return arr2;\n    }\n    if (arr2.length === 0) {\n        return arr1;\n    }\n    const result = [];\n    let i = 0;\n    let j = 0;\n    while (i < arr1.length && j < arr2.length) {\n        const val1 = arr1[i];\n        const val2 = arr2[j];\n        const key1 = keySelector(val1);\n        const key2 = keySelector(val2);\n        if (key1 < key2) {\n            result.push(val1);\n            i++;\n        }\n        else if (key1 > key2) {\n            result.push(val2);\n            j++;\n        }\n        else {\n            result.push(combine(val1, val2));\n            i++;\n            j++;\n        }\n    }\n    while (i < arr1.length) {\n        result.push(arr1[i]);\n        i++;\n    }\n    while (j < arr2.length) {\n        result.push(arr2[j]);\n        j++;\n    }\n    return result;\n}\n// TODO make utility\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function appendRemoveOnDispose(parent, child) {\n    parent.appendChild(child);\n    return toDisposable(() => {\n        child.remove();\n    });\n}\nexport function prependRemoveOnDispose(parent, child) {\n    parent.prepend(child);\n    return toDisposable(() => {\n        child.remove();\n    });\n}\nexport class ObservableElementSizeObserver extends Disposable {\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get automaticLayout() { return this._automaticLayout; }\n    constructor(element, dimension) {\n        super();\n        this._automaticLayout = false;\n        this.elementSizeObserver = this._register(new ElementSizeObserver(element, dimension));\n        this._width = observableValue(this, this.elementSizeObserver.getWidth());\n        this._height = observableValue(this, this.elementSizeObserver.getHeight());\n        this._register(this.elementSizeObserver.onDidChange(e => transaction(tx => {\n            /** @description Set width/height from elementSizeObserver */\n            this._width.set(this.elementSizeObserver.getWidth(), tx);\n            this._height.set(this.elementSizeObserver.getHeight(), tx);\n        })));\n    }\n    observe(dimension) {\n        this.elementSizeObserver.observe(dimension);\n    }\n    setAutomaticLayout(automaticLayout) {\n        this._automaticLayout = automaticLayout;\n        if (automaticLayout) {\n            this.elementSizeObserver.startObserving();\n        }\n        else {\n            this.elementSizeObserver.stopObserving();\n        }\n    }\n}\nexport function animatedObservable(targetWindow, base, store) {\n    let targetVal = base.get();\n    let startVal = targetVal;\n    let curVal = targetVal;\n    const result = observableValue('animatedValue', targetVal);\n    let animationStartMs = -1;\n    const durationMs = 300;\n    let animationFrame = undefined;\n    store.add(autorunHandleChanges({\n        createEmptyChangeSummary: () => ({ animate: false }),\n        handleChange: (ctx, s) => {\n            if (ctx.didChange(base)) {\n                s.animate = s.animate || ctx.change;\n            }\n            return true;\n        }\n    }, (reader, s) => {\n        /** @description update value */\n        if (animationFrame !== undefined) {\n            targetWindow.cancelAnimationFrame(animationFrame);\n            animationFrame = undefined;\n        }\n        startVal = curVal;\n        targetVal = base.read(reader);\n        animationStartMs = Date.now() - (s.animate ? 0 : durationMs);\n        update();\n    }));\n    function update() {\n        const passedMs = Date.now() - animationStartMs;\n        curVal = Math.floor(easeOutExpo(passedMs, startVal, targetVal - startVal, durationMs));\n        if (passedMs < durationMs) {\n            animationFrame = targetWindow.requestAnimationFrame(update);\n        }\n        else {\n            curVal = targetVal;\n        }\n        result.set(curVal, undefined);\n    }\n    return result;\n}\nfunction easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n}\nexport class ViewZoneOverlayWidget extends Disposable {\n    constructor(editor, viewZone, htmlElement) {\n        super();\n        this._register(new ManagedOverlayWidget(editor, htmlElement));\n        this._register(applyStyle(htmlElement, {\n            height: viewZone.actualHeight,\n            top: viewZone.actualTop,\n        }));\n    }\n}\nexport class PlaceholderViewZone {\n    get afterLineNumber() { return this._afterLineNumber.get(); }\n    constructor(_afterLineNumber, heightInPx) {\n        this._afterLineNumber = _afterLineNumber;\n        this.heightInPx = heightInPx;\n        this.domNode = document.createElement('div');\n        this._actualTop = observableValue(this, undefined);\n        this._actualHeight = observableValue(this, undefined);\n        this.actualTop = this._actualTop;\n        this.actualHeight = this._actualHeight;\n        this.showInHiddenAreas = true;\n        this.onChange = this._afterLineNumber;\n        this.onDomNodeTop = (top) => {\n            this._actualTop.set(top, undefined);\n        };\n        this.onComputedHeight = (height) => {\n            this._actualHeight.set(height, undefined);\n        };\n    }\n}\nexport class ManagedOverlayWidget {\n    static { this._counter = 0; }\n    constructor(_editor, _domElement) {\n        this._editor = _editor;\n        this._domElement = _domElement;\n        this._overlayWidgetId = `managedOverlayWidget-${ManagedOverlayWidget._counter++}`;\n        this._overlayWidget = {\n            getId: () => this._overlayWidgetId,\n            getDomNode: () => this._domElement,\n            getPosition: () => null\n        };\n        this._editor.addOverlayWidget(this._overlayWidget);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this._overlayWidget);\n    }\n}\nexport function applyStyle(domNode, style) {\n    return autorun(reader => {\n        /** @description applyStyle */\n        for (let [key, val] of Object.entries(style)) {\n            if (val && typeof val === 'object' && 'read' in val) {\n                val = val.read(reader);\n            }\n            if (typeof val === 'number') {\n                val = `${val}px`;\n            }\n            key = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n            domNode.style[key] = val;\n        }\n    });\n}\nexport function applyViewZones(editor, viewZones, setIsUpdating, zoneIds) {\n    const store = new DisposableStore();\n    const lastViewZoneIds = [];\n    store.add(autorunWithStore((reader, store) => {\n        /** @description applyViewZones */\n        const curViewZones = viewZones.read(reader);\n        const viewZonIdsPerViewZone = new Map();\n        const viewZoneIdPerOnChangeObservable = new Map();\n        // Add/remove view zones\n        if (setIsUpdating) {\n            setIsUpdating(true);\n        }\n        editor.changeViewZones(a => {\n            for (const id of lastViewZoneIds) {\n                a.removeZone(id);\n                zoneIds?.delete(id);\n            }\n            lastViewZoneIds.length = 0;\n            for (const z of curViewZones) {\n                const id = a.addZone(z);\n                if (z.setZoneId) {\n                    z.setZoneId(id);\n                }\n                lastViewZoneIds.push(id);\n                zoneIds?.add(id);\n                viewZonIdsPerViewZone.set(z, id);\n            }\n        });\n        if (setIsUpdating) {\n            setIsUpdating(false);\n        }\n        // Layout zone on change\n        store.add(autorunHandleChanges({\n            createEmptyChangeSummary() {\n                return { zoneIds: [] };\n            },\n            handleChange(context, changeSummary) {\n                const id = viewZoneIdPerOnChangeObservable.get(context.changedObservable);\n                if (id !== undefined) {\n                    changeSummary.zoneIds.push(id);\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            /** @description layoutZone on change */\n            for (const vz of curViewZones) {\n                if (vz.onChange) {\n                    viewZoneIdPerOnChangeObservable.set(vz.onChange, viewZonIdsPerViewZone.get(vz));\n                    vz.onChange.read(reader);\n                }\n            }\n            if (setIsUpdating) {\n                setIsUpdating(true);\n            }\n            editor.changeViewZones(a => { for (const id of changeSummary.zoneIds) {\n                a.layoutZone(id);\n            } });\n            if (setIsUpdating) {\n                setIsUpdating(false);\n            }\n        }));\n    }));\n    store.add({\n        dispose() {\n            if (setIsUpdating) {\n                setIsUpdating(true);\n            }\n            editor.changeViewZones(a => { for (const id of lastViewZoneIds) {\n                a.removeZone(id);\n            } });\n            zoneIds?.clear();\n            if (setIsUpdating) {\n                setIsUpdating(false);\n            }\n        }\n    });\n    return store;\n}\nexport class DisposableCancellationTokenSource extends CancellationTokenSource {\n    dispose() {\n        super.dispose(true);\n    }\n}\nexport function translatePosition(posInOriginal, mappings) {\n    const mapping = findLast(mappings, m => m.original.startLineNumber <= posInOriginal.lineNumber);\n    if (!mapping) {\n        // No changes before the position\n        return Range.fromPositions(posInOriginal);\n    }\n    if (mapping.original.endLineNumberExclusive <= posInOriginal.lineNumber) {\n        const newLineNumber = posInOriginal.lineNumber - mapping.original.endLineNumberExclusive + mapping.modified.endLineNumberExclusive;\n        return Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n    }\n    if (!mapping.innerChanges) {\n        // Only for legacy algorithm\n        return Range.fromPositions(new Position(mapping.modified.startLineNumber, 1));\n    }\n    const innerMapping = findLast(mapping.innerChanges, m => m.originalRange.getStartPosition().isBeforeOrEqual(posInOriginal));\n    if (!innerMapping) {\n        const newLineNumber = posInOriginal.lineNumber - mapping.original.startLineNumber + mapping.modified.startLineNumber;\n        return Range.fromPositions(new Position(newLineNumber, posInOriginal.column));\n    }\n    if (innerMapping.originalRange.containsPosition(posInOriginal)) {\n        return innerMapping.modifiedRange;\n    }\n    else {\n        const l = lengthBetweenPositions(innerMapping.originalRange.getEndPosition(), posInOriginal);\n        return Range.fromPositions(l.addToPosition(innerMapping.modifiedRange.getEndPosition()));\n    }\n}\nfunction lengthBetweenPositions(position1, position2) {\n    if (position1.lineNumber === position2.lineNumber) {\n        return new TextLength(0, position2.column - position1.column);\n    }\n    else {\n        return new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n    }\n}\nexport function filterWithPrevious(arr, filter) {\n    let prev;\n    return arr.filter(cur => {\n        const result = filter(cur, prev);\n        prev = cur;\n        return result;\n    });\n}\nexport class RefCounted {\n    static create(value, debugOwner = undefined) {\n        return new BaseRefCounted(value, value, debugOwner);\n    }\n    static createWithDisposable(value, disposable, debugOwner = undefined) {\n        const store = new DisposableStore();\n        store.add(disposable);\n        store.add(value);\n        return new BaseRefCounted(value, store, debugOwner);\n    }\n}\nclass BaseRefCounted extends RefCounted {\n    constructor(object, _disposable, _debugOwner) {\n        super();\n        this.object = object;\n        this._disposable = _disposable;\n        this._debugOwner = _debugOwner;\n        this._refCount = 1;\n        this._isDisposed = false;\n        this._owners = [];\n        if (_debugOwner) {\n            this._addOwner(_debugOwner);\n        }\n    }\n    _addOwner(debugOwner) {\n        if (debugOwner) {\n            this._owners.push(debugOwner);\n        }\n    }\n    createNewRef(debugOwner) {\n        this._refCount++;\n        if (debugOwner) {\n            this._addOwner(debugOwner);\n        }\n        return new ClonedRefCounted(this, debugOwner);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._decreaseRefCount(this._debugOwner);\n    }\n    _decreaseRefCount(debugOwner) {\n        this._refCount--;\n        if (this._refCount === 0) {\n            this._disposable.dispose();\n        }\n        if (debugOwner) {\n            const idx = this._owners.indexOf(debugOwner);\n            if (idx !== -1) {\n                this._owners.splice(idx, 1);\n            }\n        }\n    }\n}\nclass ClonedRefCounted extends RefCounted {\n    constructor(_base, _debugOwner) {\n        super();\n        this._base = _base;\n        this._debugOwner = _debugOwner;\n        this._isDisposed = false;\n    }\n    get object() { return this._base.object; }\n    createNewRef(debugOwner) {\n        return this._base.createNewRef(debugOwner);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._base._decreaseRefCount(this._debugOwner);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { localize } from '../../../../nls.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nexport const diffMoveBorder = registerColor('diffEditor.move.border', '#8b8b8b9c', localize('diffEditor.move.border', 'The border color for text that got moved in the diff editor.'));\nexport const diffMoveBorderActive = registerColor('diffEditor.moveActive.border', '#FFA500', localize('diffEditor.moveActive.border', 'The active border color for text that got moved in the diff editor.'));\nexport const diffEditorUnchangedRegionShadow = registerColor('diffEditor.unchangedRegionShadow', { dark: '#000000', light: '#737373BF', hcDark: '#000000', hcLight: '#737373BF', }, localize('diffEditor.unchangedRegionShadow', 'The color of the shadow around unchanged region widgets.'));\nexport const diffInsertIcon = registerIcon('diff-insert', Codicon.add, localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nexport const diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nexport const diffLineAddDecorationBackgroundWithIndicator = ModelDecorationOptions.register({\n    className: 'line-insert',\n    description: 'line-insert',\n    isWholeLine: true,\n    linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n    marginClassName: 'gutter-insert',\n});\nexport const diffLineDeleteDecorationBackgroundWithIndicator = ModelDecorationOptions.register({\n    className: 'line-delete',\n    description: 'line-delete',\n    isWholeLine: true,\n    linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n    marginClassName: 'gutter-delete',\n});\nexport const diffLineAddDecorationBackground = ModelDecorationOptions.register({\n    className: 'line-insert',\n    description: 'line-insert',\n    isWholeLine: true,\n    marginClassName: 'gutter-insert',\n});\nexport const diffLineDeleteDecorationBackground = ModelDecorationOptions.register({\n    className: 'line-delete',\n    description: 'line-delete',\n    isWholeLine: true,\n    marginClassName: 'gutter-delete',\n});\nexport const diffAddDecoration = ModelDecorationOptions.register({\n    className: 'char-insert',\n    description: 'char-insert',\n    shouldFillLineOnLineBreak: true,\n});\nexport const diffWholeLineAddDecoration = ModelDecorationOptions.register({\n    className: 'char-insert',\n    description: 'char-insert',\n    isWholeLine: true,\n});\nexport const diffAddDecorationEmpty = ModelDecorationOptions.register({\n    className: 'char-insert diff-range-empty',\n    description: 'char-insert diff-range-empty',\n});\nexport const diffDeleteDecoration = ModelDecorationOptions.register({\n    className: 'char-delete',\n    description: 'char-delete',\n    shouldFillLineOnLineBreak: true,\n});\nexport const diffWholeLineDeleteDecoration = ModelDecorationOptions.register({\n    className: 'char-delete',\n    description: 'char-delete',\n    isWholeLine: true,\n});\nexport const diffDeleteDecorationEmpty = ModelDecorationOptions.register({\n    className: 'char-delete diff-range-empty',\n    description: 'char-delete diff-range-empty',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar WorkerBasedDocumentDiffProvider_1;\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IInstantiationService, createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { DetailedLineRangeMapping, RangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport const IDiffProviderFactoryService = createDecorator('diffProviderFactoryService');\nlet WorkerBasedDiffProviderFactoryService = class WorkerBasedDiffProviderFactoryService {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n    }\n    createDiffProvider(options) {\n        return this.instantiationService.createInstance(WorkerBasedDocumentDiffProvider, options);\n    }\n};\nWorkerBasedDiffProviderFactoryService = __decorate([\n    __param(0, IInstantiationService)\n], WorkerBasedDiffProviderFactoryService);\nexport { WorkerBasedDiffProviderFactoryService };\nregisterSingleton(IDiffProviderFactoryService, WorkerBasedDiffProviderFactoryService, 1 /* InstantiationType.Delayed */);\nlet WorkerBasedDocumentDiffProvider = class WorkerBasedDocumentDiffProvider {\n    static { WorkerBasedDocumentDiffProvider_1 = this; }\n    static { this.diffCache = new Map(); }\n    constructor(options, editorWorkerService, telemetryService) {\n        this.editorWorkerService = editorWorkerService;\n        this.telemetryService = telemetryService;\n        this.onDidChangeEventEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEventEmitter.event;\n        this.diffAlgorithm = 'advanced';\n        this.diffAlgorithmOnDidChangeSubscription = undefined;\n        this.setOptions(options);\n    }\n    dispose() {\n        this.diffAlgorithmOnDidChangeSubscription?.dispose();\n    }\n    async computeDiff(original, modified, options, cancellationToken) {\n        if (typeof this.diffAlgorithm !== 'string') {\n            return this.diffAlgorithm.computeDiff(original, modified, options, cancellationToken);\n        }\n        if (original.isDisposed() || modified.isDisposed()) {\n            // TODO@hediet\n            return {\n                changes: [],\n                identical: true,\n                quitEarly: false,\n                moves: [],\n            };\n        }\n        // This significantly speeds up the case when the original file is empty\n        if (original.getLineCount() === 1 && original.getLineMaxColumn(1) === 1) {\n            if (modified.getLineCount() === 1 && modified.getLineMaxColumn(1) === 1) {\n                return {\n                    changes: [],\n                    identical: true,\n                    quitEarly: false,\n                    moves: [],\n                };\n            }\n            return {\n                changes: [\n                    new DetailedLineRangeMapping(new LineRange(1, 2), new LineRange(1, modified.getLineCount() + 1), [\n                        new RangeMapping(original.getFullModelRange(), modified.getFullModelRange())\n                    ])\n                ],\n                identical: false,\n                quitEarly: false,\n                moves: [],\n            };\n        }\n        const uriKey = JSON.stringify([original.uri.toString(), modified.uri.toString()]);\n        const context = JSON.stringify([original.id, modified.id, original.getAlternativeVersionId(), modified.getAlternativeVersionId(), JSON.stringify(options)]);\n        const c = WorkerBasedDocumentDiffProvider_1.diffCache.get(uriKey);\n        if (c && c.context === context) {\n            return c.result;\n        }\n        const sw = StopWatch.create();\n        const result = await this.editorWorkerService.computeDiff(original.uri, modified.uri, options, this.diffAlgorithm);\n        const timeMs = sw.elapsed();\n        this.telemetryService.publicLog2('diffEditor.computeDiff', {\n            timeMs,\n            timedOut: result?.quitEarly ?? true,\n            detectedMoves: options.computeMoves ? (result?.moves.length ?? 0) : -1,\n        });\n        if (cancellationToken.isCancellationRequested) {\n            // Text models might be disposed!\n            return {\n                changes: [],\n                identical: false,\n                quitEarly: true,\n                moves: [],\n            };\n        }\n        if (!result) {\n            throw new Error('no diff result available');\n        }\n        // max 10 items in cache\n        if (WorkerBasedDocumentDiffProvider_1.diffCache.size > 10) {\n            WorkerBasedDocumentDiffProvider_1.diffCache.delete(WorkerBasedDocumentDiffProvider_1.diffCache.keys().next().value);\n        }\n        WorkerBasedDocumentDiffProvider_1.diffCache.set(uriKey, { result, context });\n        return result;\n    }\n    setOptions(newOptions) {\n        let didChange = false;\n        if (newOptions.diffAlgorithm) {\n            if (this.diffAlgorithm !== newOptions.diffAlgorithm) {\n                this.diffAlgorithmOnDidChangeSubscription?.dispose();\n                this.diffAlgorithmOnDidChangeSubscription = undefined;\n                this.diffAlgorithm = newOptions.diffAlgorithm;\n                if (typeof newOptions.diffAlgorithm !== 'string') {\n                    this.diffAlgorithmOnDidChangeSubscription = newOptions.diffAlgorithm.onDidChange(() => this.onDidChangeEventEmitter.fire());\n                }\n                didChange = true;\n            }\n        }\n        if (didChange) {\n            this.onDidChangeEventEmitter.fire();\n        }\n    }\n};\nWorkerBasedDocumentDiffProvider = WorkerBasedDocumentDiffProvider_1 = __decorate([\n    __param(1, IEditorWorkerService),\n    __param(2, ITelemetryService)\n], WorkerBasedDocumentDiffProvider);\nexport { WorkerBasedDocumentDiffProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableSignal, observableSignalFromEvent, observableValue, transaction, waitForState } from '../../../../base/common/observable.js';\nimport { IDiffProviderFactoryService } from './diffProviderFactoryService.js';\nimport { filterWithPrevious } from './utils.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { LineRange, LineRangeSet } from '../../../common/core/lineRange.js';\nimport { DefaultLinesDiffComputer } from '../../../common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nimport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { TextEditInfo } from '../../../common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper.js';\nimport { combineTextEditInfos } from '../../../common/model/bracketPairsTextModelPart/bracketPairsTree/combineTextEditInfos.js';\nimport { optimizeSequenceDiffs } from '../../../common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { softAssert } from '../../../../base/common/assert.js';\nlet DiffEditorViewModel = class DiffEditorViewModel extends Disposable {\n    setActiveMovedText(movedText) {\n        this._activeMovedText.set(movedText, undefined);\n    }\n    constructor(model, _options, _diffProviderFactoryService) {\n        super();\n        this.model = model;\n        this._options = _options;\n        this._diffProviderFactoryService = _diffProviderFactoryService;\n        this._isDiffUpToDate = observableValue(this, false);\n        this.isDiffUpToDate = this._isDiffUpToDate;\n        this._diff = observableValue(this, undefined);\n        this.diff = this._diff;\n        this._unchangedRegions = observableValue(this, undefined);\n        this.unchangedRegions = derived(this, r => {\n            if (this._options.hideUnchangedRegions.read(r)) {\n                return this._unchangedRegions.read(r)?.regions ?? [];\n            }\n            else {\n                // Reset state\n                transaction(tx => {\n                    for (const r of this._unchangedRegions.get()?.regions || []) {\n                        r.collapseAll(tx);\n                    }\n                });\n                return [];\n            }\n        });\n        this.movedTextToCompare = observableValue(this, undefined);\n        this._activeMovedText = observableValue(this, undefined);\n        this._hoveredMovedText = observableValue(this, undefined);\n        this.activeMovedText = derived(this, r => this.movedTextToCompare.read(r) ?? this._hoveredMovedText.read(r) ?? this._activeMovedText.read(r));\n        this._cancellationTokenSource = new CancellationTokenSource();\n        this._diffProvider = derived(this, reader => {\n            const diffProvider = this._diffProviderFactoryService.createDiffProvider({\n                diffAlgorithm: this._options.diffAlgorithm.read(reader)\n            });\n            const onChangeSignal = observableSignalFromEvent('onDidChange', diffProvider.onDidChange);\n            return {\n                diffProvider,\n                onChangeSignal,\n            };\n        });\n        this._register(toDisposable(() => this._cancellationTokenSource.cancel()));\n        const contentChangedSignal = observableSignal('contentChangedSignal');\n        const debouncer = this._register(new RunOnceScheduler(() => contentChangedSignal.trigger(undefined), 200));\n        this._register(autorun(reader => {\n            /** @description collapse touching unchanged ranges */\n            const lastUnchangedRegions = this._unchangedRegions.read(reader);\n            if (!lastUnchangedRegions || lastUnchangedRegions.regions.some(r => r.isDragged.read(reader))) {\n                return;\n            }\n            const lastUnchangedRegionsOrigRanges = lastUnchangedRegions.originalDecorationIds\n                .map(id => model.original.getDecorationRange(id))\n                .map(r => r ? LineRange.fromRangeInclusive(r) : undefined);\n            const lastUnchangedRegionsModRanges = lastUnchangedRegions.modifiedDecorationIds\n                .map(id => model.modified.getDecorationRange(id))\n                .map(r => r ? LineRange.fromRangeInclusive(r) : undefined);\n            const updatedLastUnchangedRegions = lastUnchangedRegions.regions.map((r, idx) => (!lastUnchangedRegionsOrigRanges[idx] || !lastUnchangedRegionsModRanges[idx]) ? undefined :\n                new UnchangedRegion(lastUnchangedRegionsOrigRanges[idx].startLineNumber, lastUnchangedRegionsModRanges[idx].startLineNumber, lastUnchangedRegionsOrigRanges[idx].length, r.visibleLineCountTop.read(reader), r.visibleLineCountBottom.read(reader))).filter(isDefined);\n            const newRanges = [];\n            let didChange = false;\n            for (const touching of groupAdjacentBy(updatedLastUnchangedRegions, (a, b) => a.getHiddenModifiedRange(reader).endLineNumberExclusive === b.getHiddenModifiedRange(reader).startLineNumber)) {\n                if (touching.length > 1) {\n                    didChange = true;\n                    const sumLineCount = touching.reduce((sum, r) => sum + r.lineCount, 0);\n                    const r = new UnchangedRegion(touching[0].originalLineNumber, touching[0].modifiedLineNumber, sumLineCount, touching[0].visibleLineCountTop.get(), touching[touching.length - 1].visibleLineCountBottom.get());\n                    newRanges.push(r);\n                }\n                else {\n                    newRanges.push(touching[0]);\n                }\n            }\n            if (didChange) {\n                const originalDecorationIds = model.original.deltaDecorations(lastUnchangedRegions.originalDecorationIds, newRanges.map(r => ({ range: r.originalUnchangedRange.toInclusiveRange(), options: { description: 'unchanged' } })));\n                const modifiedDecorationIds = model.modified.deltaDecorations(lastUnchangedRegions.modifiedDecorationIds, newRanges.map(r => ({ range: r.modifiedUnchangedRange.toInclusiveRange(), options: { description: 'unchanged' } })));\n                transaction(tx => {\n                    this._unchangedRegions.set({\n                        regions: newRanges,\n                        originalDecorationIds,\n                        modifiedDecorationIds\n                    }, tx);\n                });\n            }\n        }));\n        const updateUnchangedRegions = (result, tx, reader) => {\n            const newUnchangedRegions = UnchangedRegion.fromDiffs(result.changes, model.original.getLineCount(), model.modified.getLineCount(), this._options.hideUnchangedRegionsMinimumLineCount.read(reader), this._options.hideUnchangedRegionsContextLineCount.read(reader));\n            // Transfer state from cur state\n            let visibleRegions = undefined;\n            const lastUnchangedRegions = this._unchangedRegions.get();\n            if (lastUnchangedRegions) {\n                const lastUnchangedRegionsOrigRanges = lastUnchangedRegions.originalDecorationIds\n                    .map(id => model.original.getDecorationRange(id))\n                    .map(r => r ? LineRange.fromRangeInclusive(r) : undefined);\n                const lastUnchangedRegionsModRanges = lastUnchangedRegions.modifiedDecorationIds\n                    .map(id => model.modified.getDecorationRange(id))\n                    .map(r => r ? LineRange.fromRangeInclusive(r) : undefined);\n                const updatedLastUnchangedRegions = filterWithPrevious(lastUnchangedRegions.regions\n                    .map((r, idx) => {\n                    if (!lastUnchangedRegionsOrigRanges[idx] || !lastUnchangedRegionsModRanges[idx]) {\n                        return undefined;\n                    }\n                    const length = lastUnchangedRegionsOrigRanges[idx].length;\n                    return new UnchangedRegion(lastUnchangedRegionsOrigRanges[idx].startLineNumber, lastUnchangedRegionsModRanges[idx].startLineNumber, length, \n                    // The visible area can shrink by edits -> we have to account for this\n                    Math.min(r.visibleLineCountTop.get(), length), Math.min(r.visibleLineCountBottom.get(), length - r.visibleLineCountTop.get()));\n                }).filter(isDefined), (cur, prev) => !prev || (cur.modifiedLineNumber >= prev.modifiedLineNumber + prev.lineCount && cur.originalLineNumber >= prev.originalLineNumber + prev.lineCount));\n                let hiddenRegions = updatedLastUnchangedRegions.map(r => new LineRangeMapping(r.getHiddenOriginalRange(reader), r.getHiddenModifiedRange(reader)));\n                hiddenRegions = LineRangeMapping.clip(hiddenRegions, LineRange.ofLength(1, model.original.getLineCount()), LineRange.ofLength(1, model.modified.getLineCount()));\n                visibleRegions = LineRangeMapping.inverse(hiddenRegions, model.original.getLineCount(), model.modified.getLineCount());\n            }\n            const newUnchangedRegions2 = [];\n            if (visibleRegions) {\n                for (const r of newUnchangedRegions) {\n                    const intersecting = visibleRegions.filter(f => f.original.intersectsStrict(r.originalUnchangedRange) && f.modified.intersectsStrict(r.modifiedUnchangedRange));\n                    newUnchangedRegions2.push(...r.setVisibleRanges(intersecting, tx));\n                }\n            }\n            else {\n                newUnchangedRegions2.push(...newUnchangedRegions);\n            }\n            const originalDecorationIds = model.original.deltaDecorations(lastUnchangedRegions?.originalDecorationIds || [], newUnchangedRegions2.map(r => ({ range: r.originalUnchangedRange.toInclusiveRange(), options: { description: 'unchanged' } })));\n            const modifiedDecorationIds = model.modified.deltaDecorations(lastUnchangedRegions?.modifiedDecorationIds || [], newUnchangedRegions2.map(r => ({ range: r.modifiedUnchangedRange.toInclusiveRange(), options: { description: 'unchanged' } })));\n            this._unchangedRegions.set({\n                regions: newUnchangedRegions2,\n                originalDecorationIds,\n                modifiedDecorationIds\n            }, tx);\n        };\n        this._register(model.modified.onDidChangeContent((e) => {\n            const diff = this._diff.get();\n            if (diff) {\n                const textEdits = TextEditInfo.fromModelContentChanges(e.changes);\n                const result = applyModifiedEdits(this._lastDiff, textEdits, model.original, model.modified);\n                if (result) {\n                    this._lastDiff = result;\n                    transaction(tx => {\n                        this._diff.set(DiffState.fromDiffResult(this._lastDiff), tx);\n                        updateUnchangedRegions(result, tx);\n                        const currentSyncedMovedText = this.movedTextToCompare.get();\n                        this.movedTextToCompare.set(currentSyncedMovedText ? this._lastDiff.moves.find(m => m.lineRangeMapping.modified.intersect(currentSyncedMovedText.lineRangeMapping.modified)) : undefined, tx);\n                    });\n                }\n            }\n            this._isDiffUpToDate.set(false, undefined);\n            debouncer.schedule();\n        }));\n        this._register(model.original.onDidChangeContent((e) => {\n            const diff = this._diff.get();\n            if (diff) {\n                const textEdits = TextEditInfo.fromModelContentChanges(e.changes);\n                const result = applyOriginalEdits(this._lastDiff, textEdits, model.original, model.modified);\n                if (result) {\n                    this._lastDiff = result;\n                    transaction(tx => {\n                        this._diff.set(DiffState.fromDiffResult(this._lastDiff), tx);\n                        updateUnchangedRegions(result, tx);\n                        const currentSyncedMovedText = this.movedTextToCompare.get();\n                        this.movedTextToCompare.set(currentSyncedMovedText ? this._lastDiff.moves.find(m => m.lineRangeMapping.modified.intersect(currentSyncedMovedText.lineRangeMapping.modified)) : undefined, tx);\n                    });\n                }\n            }\n            this._isDiffUpToDate.set(false, undefined);\n            debouncer.schedule();\n        }));\n        this._register(autorunWithStore(async (reader, store) => {\n            /** @description compute diff */\n            // So that they get recomputed when these settings change\n            this._options.hideUnchangedRegionsMinimumLineCount.read(reader);\n            this._options.hideUnchangedRegionsContextLineCount.read(reader);\n            debouncer.cancel();\n            contentChangedSignal.read(reader);\n            const documentDiffProvider = this._diffProvider.read(reader);\n            documentDiffProvider.onChangeSignal.read(reader);\n            readHotReloadableExport(DefaultLinesDiffComputer, reader);\n            readHotReloadableExport(optimizeSequenceDiffs, reader);\n            this._isDiffUpToDate.set(false, undefined);\n            let originalTextEditInfos = [];\n            store.add(model.original.onDidChangeContent((e) => {\n                const edits = TextEditInfo.fromModelContentChanges(e.changes);\n                originalTextEditInfos = combineTextEditInfos(originalTextEditInfos, edits);\n            }));\n            let modifiedTextEditInfos = [];\n            store.add(model.modified.onDidChangeContent((e) => {\n                const edits = TextEditInfo.fromModelContentChanges(e.changes);\n                modifiedTextEditInfos = combineTextEditInfos(modifiedTextEditInfos, edits);\n            }));\n            let result = await documentDiffProvider.diffProvider.computeDiff(model.original, model.modified, {\n                ignoreTrimWhitespace: this._options.ignoreTrimWhitespace.read(reader),\n                maxComputationTimeMs: this._options.maxComputationTimeMs.read(reader),\n                computeMoves: this._options.showMoves.read(reader),\n            }, this._cancellationTokenSource.token);\n            if (this._cancellationTokenSource.token.isCancellationRequested) {\n                return;\n            }\n            if (model.original.isDisposed() || model.modified.isDisposed()) {\n                // TODO@hediet fishy?\n                return;\n            }\n            result = normalizeDocumentDiff(result, model.original, model.modified);\n            result = applyOriginalEdits(result, originalTextEditInfos, model.original, model.modified) ?? result;\n            result = applyModifiedEdits(result, modifiedTextEditInfos, model.original, model.modified) ?? result;\n            transaction(tx => {\n                /** @description write diff result */\n                updateUnchangedRegions(result, tx);\n                this._lastDiff = result;\n                const state = DiffState.fromDiffResult(result);\n                this._diff.set(state, tx);\n                this._isDiffUpToDate.set(true, tx);\n                const currentSyncedMovedText = this.movedTextToCompare.get();\n                this.movedTextToCompare.set(currentSyncedMovedText ? this._lastDiff.moves.find(m => m.lineRangeMapping.modified.intersect(currentSyncedMovedText.lineRangeMapping.modified)) : undefined, tx);\n            });\n        }));\n    }\n    ensureModifiedLineIsVisible(lineNumber, preference, tx) {\n        if (this.diff.get()?.mappings.length === 0) {\n            return;\n        }\n        const unchangedRegions = this._unchangedRegions.get()?.regions || [];\n        for (const r of unchangedRegions) {\n            if (r.getHiddenModifiedRange(undefined).contains(lineNumber)) {\n                r.showModifiedLine(lineNumber, preference, tx);\n                return;\n            }\n        }\n    }\n    ensureOriginalLineIsVisible(lineNumber, preference, tx) {\n        if (this.diff.get()?.mappings.length === 0) {\n            return;\n        }\n        const unchangedRegions = this._unchangedRegions.get()?.regions || [];\n        for (const r of unchangedRegions) {\n            if (r.getHiddenOriginalRange(undefined).contains(lineNumber)) {\n                r.showOriginalLine(lineNumber, preference, tx);\n                return;\n            }\n        }\n    }\n    async waitForDiff() {\n        await waitForState(this.isDiffUpToDate, s => s);\n    }\n    serializeState() {\n        const regions = this._unchangedRegions.get();\n        return {\n            collapsedRegions: regions?.regions.map(r => ({ range: r.getHiddenModifiedRange(undefined).serialize() }))\n        };\n    }\n    restoreSerializedState(state) {\n        const ranges = state.collapsedRegions?.map(r => LineRange.deserialize(r.range));\n        const regions = this._unchangedRegions.get();\n        if (!regions || !ranges) {\n            return;\n        }\n        transaction(tx => {\n            for (const r of regions.regions) {\n                for (const range of ranges) {\n                    if (r.modifiedUnchangedRange.intersect(range)) {\n                        r.setHiddenModifiedRange(range, tx);\n                        break;\n                    }\n                }\n            }\n        });\n    }\n};\nDiffEditorViewModel = __decorate([\n    __param(2, IDiffProviderFactoryService)\n], DiffEditorViewModel);\nexport { DiffEditorViewModel };\nfunction normalizeDocumentDiff(diff, original, modified) {\n    return {\n        changes: diff.changes.map(c => new DetailedLineRangeMapping(c.original, c.modified, c.innerChanges ? c.innerChanges.map(i => normalizeRangeMapping(i, original, modified)) : undefined)),\n        moves: diff.moves,\n        identical: diff.identical,\n        quitEarly: diff.quitEarly,\n    };\n}\nfunction normalizeRangeMapping(rangeMapping, original, modified) {\n    let originalRange = rangeMapping.originalRange;\n    let modifiedRange = rangeMapping.modifiedRange;\n    if (originalRange.startColumn === 1 && modifiedRange.startColumn === 1 &&\n        (originalRange.endColumn !== 1 || modifiedRange.endColumn !== 1) &&\n        originalRange.endColumn === original.getLineMaxColumn(originalRange.endLineNumber)\n        && modifiedRange.endColumn === modified.getLineMaxColumn(modifiedRange.endLineNumber)\n        && originalRange.endLineNumber < original.getLineCount()\n        && modifiedRange.endLineNumber < modified.getLineCount()) {\n        originalRange = originalRange.setEndPosition(originalRange.endLineNumber + 1, 1);\n        modifiedRange = modifiedRange.setEndPosition(modifiedRange.endLineNumber + 1, 1);\n    }\n    return new RangeMapping(originalRange, modifiedRange);\n}\nexport class DiffState {\n    static fromDiffResult(result) {\n        return new DiffState(result.changes.map(c => new DiffMapping(c)), result.moves || [], result.identical, result.quitEarly);\n    }\n    constructor(mappings, movedTexts, identical, quitEarly) {\n        this.mappings = mappings;\n        this.movedTexts = movedTexts;\n        this.identical = identical;\n        this.quitEarly = quitEarly;\n    }\n}\nexport class DiffMapping {\n    constructor(lineRangeMapping) {\n        this.lineRangeMapping = lineRangeMapping;\n        /*\n        readonly movedTo: MovedText | undefined,\n        readonly movedFrom: MovedText | undefined,\n\n        if (movedTo) {\n            assertFn(() =>\n                movedTo.lineRangeMapping.modifiedRange.equals(lineRangeMapping.modifiedRange)\n                && lineRangeMapping.originalRange.isEmpty\n                && !movedFrom\n            );\n        } else if (movedFrom) {\n            assertFn(() =>\n                movedFrom.lineRangeMapping.originalRange.equals(lineRangeMapping.originalRange)\n                && lineRangeMapping.modifiedRange.isEmpty\n                && !movedTo\n            );\n        }\n        */\n    }\n}\nexport class UnchangedRegion {\n    static fromDiffs(changes, originalLineCount, modifiedLineCount, minHiddenLineCount, minContext) {\n        const inversedMappings = DetailedLineRangeMapping.inverse(changes, originalLineCount, modifiedLineCount);\n        const result = [];\n        for (const mapping of inversedMappings) {\n            let origStart = mapping.original.startLineNumber;\n            let modStart = mapping.modified.startLineNumber;\n            let length = mapping.original.length;\n            const atStart = origStart === 1 && modStart === 1;\n            const atEnd = origStart + length === originalLineCount + 1 && modStart + length === modifiedLineCount + 1;\n            if ((atStart || atEnd) && length >= minContext + minHiddenLineCount) {\n                if (atStart && !atEnd) {\n                    length -= minContext;\n                }\n                if (atEnd && !atStart) {\n                    origStart += minContext;\n                    modStart += minContext;\n                    length -= minContext;\n                }\n                result.push(new UnchangedRegion(origStart, modStart, length, 0, 0));\n            }\n            else if (length >= minContext * 2 + minHiddenLineCount) {\n                origStart += minContext;\n                modStart += minContext;\n                length -= minContext * 2;\n                result.push(new UnchangedRegion(origStart, modStart, length, 0, 0));\n            }\n        }\n        return result;\n    }\n    get originalUnchangedRange() {\n        return LineRange.ofLength(this.originalLineNumber, this.lineCount);\n    }\n    get modifiedUnchangedRange() {\n        return LineRange.ofLength(this.modifiedLineNumber, this.lineCount);\n    }\n    constructor(originalLineNumber, modifiedLineNumber, lineCount, visibleLineCountTop, visibleLineCountBottom) {\n        this.originalLineNumber = originalLineNumber;\n        this.modifiedLineNumber = modifiedLineNumber;\n        this.lineCount = lineCount;\n        this._visibleLineCountTop = observableValue(this, 0);\n        this.visibleLineCountTop = this._visibleLineCountTop;\n        this._visibleLineCountBottom = observableValue(this, 0);\n        this.visibleLineCountBottom = this._visibleLineCountBottom;\n        this._shouldHideControls = derived(this, reader => /** @description isVisible */ this.visibleLineCountTop.read(reader) + this.visibleLineCountBottom.read(reader) === this.lineCount && !this.isDragged.read(reader));\n        this.isDragged = observableValue(this, undefined);\n        const visibleLineCountTop2 = Math.max(Math.min(visibleLineCountTop, this.lineCount), 0);\n        const visibleLineCountBottom2 = Math.max(Math.min(visibleLineCountBottom, this.lineCount - visibleLineCountTop), 0);\n        softAssert(visibleLineCountTop === visibleLineCountTop2);\n        softAssert(visibleLineCountBottom === visibleLineCountBottom2);\n        this._visibleLineCountTop.set(visibleLineCountTop2, undefined);\n        this._visibleLineCountBottom.set(visibleLineCountBottom2, undefined);\n    }\n    setVisibleRanges(visibleRanges, tx) {\n        const result = [];\n        const hiddenModified = new LineRangeSet(visibleRanges.map(r => r.modified)).subtractFrom(this.modifiedUnchangedRange);\n        let originalStartLineNumber = this.originalLineNumber;\n        let modifiedStartLineNumber = this.modifiedLineNumber;\n        const modifiedEndLineNumberEx = this.modifiedLineNumber + this.lineCount;\n        if (hiddenModified.ranges.length === 0) {\n            this.showAll(tx);\n            result.push(this);\n        }\n        else {\n            let i = 0;\n            for (const r of hiddenModified.ranges) {\n                const isLast = i === hiddenModified.ranges.length - 1;\n                i++;\n                const length = (isLast ? modifiedEndLineNumberEx : r.endLineNumberExclusive) - modifiedStartLineNumber;\n                const newR = new UnchangedRegion(originalStartLineNumber, modifiedStartLineNumber, length, 0, 0);\n                newR.setHiddenModifiedRange(r, tx);\n                result.push(newR);\n                originalStartLineNumber = newR.originalUnchangedRange.endLineNumberExclusive;\n                modifiedStartLineNumber = newR.modifiedUnchangedRange.endLineNumberExclusive;\n            }\n        }\n        return result;\n    }\n    shouldHideControls(reader) {\n        return this._shouldHideControls.read(reader);\n    }\n    getHiddenOriginalRange(reader) {\n        return LineRange.ofLength(this.originalLineNumber + this._visibleLineCountTop.read(reader), this.lineCount - this._visibleLineCountTop.read(reader) - this._visibleLineCountBottom.read(reader));\n    }\n    getHiddenModifiedRange(reader) {\n        return LineRange.ofLength(this.modifiedLineNumber + this._visibleLineCountTop.read(reader), this.lineCount - this._visibleLineCountTop.read(reader) - this._visibleLineCountBottom.read(reader));\n    }\n    setHiddenModifiedRange(range, tx) {\n        const visibleLineCountTop = range.startLineNumber - this.modifiedLineNumber;\n        const visibleLineCountBottom = (this.modifiedLineNumber + this.lineCount) - range.endLineNumberExclusive;\n        this.setState(visibleLineCountTop, visibleLineCountBottom, tx);\n    }\n    getMaxVisibleLineCountTop() {\n        return this.lineCount - this._visibleLineCountBottom.get();\n    }\n    getMaxVisibleLineCountBottom() {\n        return this.lineCount - this._visibleLineCountTop.get();\n    }\n    showMoreAbove(count = 10, tx) {\n        const maxVisibleLineCountTop = this.getMaxVisibleLineCountTop();\n        this._visibleLineCountTop.set(Math.min(this._visibleLineCountTop.get() + count, maxVisibleLineCountTop), tx);\n    }\n    showMoreBelow(count = 10, tx) {\n        const maxVisibleLineCountBottom = this.lineCount - this._visibleLineCountTop.get();\n        this._visibleLineCountBottom.set(Math.min(this._visibleLineCountBottom.get() + count, maxVisibleLineCountBottom), tx);\n    }\n    showAll(tx) {\n        this._visibleLineCountBottom.set(this.lineCount - this._visibleLineCountTop.get(), tx);\n    }\n    showModifiedLine(lineNumber, preference, tx) {\n        const top = lineNumber + 1 - (this.modifiedLineNumber + this._visibleLineCountTop.get());\n        const bottom = (this.modifiedLineNumber - this._visibleLineCountBottom.get() + this.lineCount) - lineNumber;\n        if (preference === 0 /* RevealPreference.FromCloserSide */ && top < bottom || preference === 1 /* RevealPreference.FromTop */) {\n            this._visibleLineCountTop.set(this._visibleLineCountTop.get() + top, tx);\n        }\n        else {\n            this._visibleLineCountBottom.set(this._visibleLineCountBottom.get() + bottom, tx);\n        }\n    }\n    showOriginalLine(lineNumber, preference, tx) {\n        const top = lineNumber - this.originalLineNumber;\n        const bottom = (this.originalLineNumber + this.lineCount) - lineNumber;\n        if (preference === 0 /* RevealPreference.FromCloserSide */ && top < bottom || preference === 1 /* RevealPreference.FromTop */) {\n            this._visibleLineCountTop.set(Math.min(this._visibleLineCountTop.get() + bottom - top, this.getMaxVisibleLineCountTop()), tx);\n        }\n        else {\n            this._visibleLineCountBottom.set(Math.min(this._visibleLineCountBottom.get() + top - bottom, this.getMaxVisibleLineCountBottom()), tx);\n        }\n    }\n    collapseAll(tx) {\n        this._visibleLineCountTop.set(0, tx);\n        this._visibleLineCountBottom.set(0, tx);\n    }\n    setState(visibleLineCountTop, visibleLineCountBottom, tx) {\n        visibleLineCountTop = Math.max(Math.min(visibleLineCountTop, this.lineCount), 0);\n        visibleLineCountBottom = Math.max(Math.min(visibleLineCountBottom, this.lineCount - visibleLineCountTop), 0);\n        this._visibleLineCountTop.set(visibleLineCountTop, tx);\n        this._visibleLineCountBottom.set(visibleLineCountBottom, tx);\n    }\n}\nfunction applyOriginalEdits(diff, textEdits, originalTextModel, modifiedTextModel) {\n    return undefined;\n    /*\n    TODO@hediet\n    if (textEdits.length === 0) {\n        return diff;\n    }\n\n    const diff2 = flip(diff);\n    const diff3 = applyModifiedEdits(diff2, textEdits, modifiedTextModel, originalTextModel);\n    if (!diff3) {\n        return undefined;\n    }\n    return flip(diff3);*/\n}\n/*\nfunction flip(diff: IDocumentDiff): IDocumentDiff {\n    return {\n        changes: diff.changes.map(c => c.flip()),\n        moves: diff.moves.map(m => m.flip()),\n        identical: diff.identical,\n        quitEarly: diff.quitEarly,\n    };\n}\n*/\nfunction applyModifiedEdits(diff, textEdits, originalTextModel, modifiedTextModel) {\n    return undefined;\n    /*\n    TODO@hediet\n    if (textEdits.length === 0) {\n        return diff;\n    }\n    if (diff.changes.some(c => !c.innerChanges) || diff.moves.length > 0) {\n        // TODO support these cases\n        return undefined;\n    }\n\n    const changes = applyModifiedEditsToLineRangeMappings(diff.changes, textEdits, originalTextModel, modifiedTextModel);\n\n    const moves = diff.moves.map(m => {\n        const newModifiedRange = applyEditToLineRange(m.lineRangeMapping.modified, textEdits);\n        return newModifiedRange ? new MovedText(\n            new SimpleLineRangeMapping(m.lineRangeMapping.original, newModifiedRange),\n            applyModifiedEditsToLineRangeMappings(m.changes, textEdits, originalTextModel, modifiedTextModel),\n        ) : undefined;\n    }).filter(isDefined);\n\n    return {\n        identical: false,\n        quitEarly: false,\n        changes,\n        moves,\n    };*/\n}\n/*\nfunction applyEditToLineRange(range: LineRange, textEdits: TextEditInfo[]): LineRange | undefined {\n    let rangeStartLineNumber = range.startLineNumber;\n    let rangeEndLineNumberEx = range.endLineNumberExclusive;\n\n    for (let i = textEdits.length - 1; i >= 0; i--) {\n        const textEdit = textEdits[i];\n        const textEditStartLineNumber = lengthGetLineCount(textEdit.startOffset) + 1;\n        const textEditEndLineNumber = lengthGetLineCount(textEdit.endOffset) + 1;\n        const newLengthLineCount = lengthGetLineCount(textEdit.newLength);\n        const delta = newLengthLineCount - (textEditEndLineNumber - textEditStartLineNumber);\n\n        if (textEditEndLineNumber < rangeStartLineNumber) {\n            // the text edit is before us\n            rangeStartLineNumber += delta;\n            rangeEndLineNumberEx += delta;\n        } else if (textEditStartLineNumber > rangeEndLineNumberEx) {\n            // the text edit is after us\n            // NOOP\n        } else if (textEditStartLineNumber < rangeStartLineNumber && rangeEndLineNumberEx < textEditEndLineNumber) {\n            // the range is fully contained in the text edit\n            return undefined;\n        } else if (textEditStartLineNumber < rangeStartLineNumber && textEditEndLineNumber <= rangeEndLineNumberEx) {\n            // the text edit ends inside our range\n            rangeStartLineNumber = textEditEndLineNumber + 1;\n            rangeStartLineNumber += delta;\n            rangeEndLineNumberEx += delta;\n        } else if (rangeStartLineNumber <= textEditStartLineNumber && textEditEndLineNumber < rangeStartLineNumber) {\n            // the text edit starts inside our range\n            rangeEndLineNumberEx = textEditStartLineNumber;\n        } else {\n            rangeEndLineNumberEx += delta;\n        }\n    }\n\n    return new LineRange(rangeStartLineNumber, rangeEndLineNumberEx);\n}\n\nfunction applyModifiedEditsToLineRangeMappings(changes: readonly LineRangeMapping[], textEdits: TextEditInfo[], originalTextModel: ITextModel, modifiedTextModel: ITextModel): LineRangeMapping[] {\n    const diffTextEdits = changes.flatMap(c => c.innerChanges!.map(c => new TextEditInfo(\n        positionToLength(c.originalRange.getStartPosition()),\n        positionToLength(c.originalRange.getEndPosition()),\n        lengthOfRange(c.modifiedRange).toLength(),\n    )));\n\n    const combined = combineTextEditInfos(diffTextEdits, textEdits);\n\n    let lastOriginalEndOffset = lengthZero;\n    let lastModifiedEndOffset = lengthZero;\n    const rangeMappings = combined.map(c => {\n        const modifiedStartOffset = lengthAdd(lastModifiedEndOffset, lengthDiffNonNegative(lastOriginalEndOffset, c.startOffset));\n        lastOriginalEndOffset = c.endOffset;\n        lastModifiedEndOffset = lengthAdd(modifiedStartOffset, c.newLength);\n\n        return new RangeMapping(\n            Range.fromPositions(lengthToPosition(c.startOffset), lengthToPosition(c.endOffset)),\n            Range.fromPositions(lengthToPosition(modifiedStartOffset), lengthToPosition(lastModifiedEndOffset)),\n        );\n    });\n\n    const newChanges = lineRangeMappingFromRangeMappings(\n        rangeMappings,\n        originalTextModel.getLinesContent(),\n        modifiedTextModel.getLinesContent(),\n    );\n    return newChanges;\n}\n*/\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h } from '../../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../../base/common/actions.js';\nimport { booleanComparator, compareBy, numberComparator, tieBreakComparators } from '../../../../../base/common/arrays.js';\nimport { findMaxIdx } from '../../../../../base/common/arraysFind.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, autorunWithStore, constObservable, derived, derivedWithStore, observableFromEvent, observableSignalFromEvent, observableValue, recomputeInitiallyAndOnChange } from '../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { PlaceholderViewZone, ViewZoneOverlayWidget, applyStyle, applyViewZones } from '../utils.js';\nimport { OffsetRange, OffsetRangeSet } from '../../../../common/core/offsetRange.js';\nimport { localize } from '../../../../../nls.js';\nexport class MovedBlocksLinesFeature extends Disposable {\n    static { this.movedCodeBlockPadding = 4; }\n    constructor(_rootElement, _diffModel, _originalEditorLayoutInfo, _modifiedEditorLayoutInfo, _editors) {\n        super();\n        this._rootElement = _rootElement;\n        this._diffModel = _diffModel;\n        this._originalEditorLayoutInfo = _originalEditorLayoutInfo;\n        this._modifiedEditorLayoutInfo = _modifiedEditorLayoutInfo;\n        this._editors = _editors;\n        this._originalScrollTop = observableFromEvent(this, this._editors.original.onDidScrollChange, () => this._editors.original.getScrollTop());\n        this._modifiedScrollTop = observableFromEvent(this, this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollTop());\n        this._viewZonesChanged = observableSignalFromEvent('onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n        this.width = observableValue(this, 0);\n        this._modifiedViewZonesChangedSignal = observableSignalFromEvent('modified.onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n        this._originalViewZonesChangedSignal = observableSignalFromEvent('original.onDidChangeViewZones', this._editors.original.onDidChangeViewZones);\n        this._state = derivedWithStore(this, (reader, store) => {\n            /** @description state */\n            this._element.replaceChildren();\n            const model = this._diffModel.read(reader);\n            const moves = model?.diff.read(reader)?.movedTexts;\n            if (!moves || moves.length === 0) {\n                this.width.set(0, undefined);\n                return;\n            }\n            this._viewZonesChanged.read(reader);\n            const infoOrig = this._originalEditorLayoutInfo.read(reader);\n            const infoMod = this._modifiedEditorLayoutInfo.read(reader);\n            if (!infoOrig || !infoMod) {\n                this.width.set(0, undefined);\n                return;\n            }\n            this._modifiedViewZonesChangedSignal.read(reader);\n            this._originalViewZonesChangedSignal.read(reader);\n            const lines = moves.map((move) => {\n                function computeLineStart(range, editor) {\n                    const t1 = editor.getTopForLineNumber(range.startLineNumber, true);\n                    const t2 = editor.getTopForLineNumber(range.endLineNumberExclusive, true);\n                    return (t1 + t2) / 2;\n                }\n                const start = computeLineStart(move.lineRangeMapping.original, this._editors.original);\n                const startOffset = this._originalScrollTop.read(reader);\n                const end = computeLineStart(move.lineRangeMapping.modified, this._editors.modified);\n                const endOffset = this._modifiedScrollTop.read(reader);\n                const from = start - startOffset;\n                const to = end - endOffset;\n                const top = Math.min(start, end);\n                const bottom = Math.max(start, end);\n                return { range: new OffsetRange(top, bottom), from, to, fromWithoutScroll: start, toWithoutScroll: end, move };\n            });\n            lines.sort(tieBreakComparators(compareBy(l => l.fromWithoutScroll > l.toWithoutScroll, booleanComparator), compareBy(l => l.fromWithoutScroll > l.toWithoutScroll ? l.fromWithoutScroll : -l.toWithoutScroll, numberComparator)));\n            const layout = LinesLayout.compute(lines.map(l => l.range));\n            const padding = 10;\n            const lineAreaLeft = infoOrig.verticalScrollbarWidth;\n            const lineAreaWidth = (layout.getTrackCount() - 1) * 10 + padding * 2;\n            const width = lineAreaLeft + lineAreaWidth + (infoMod.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding);\n            let idx = 0;\n            for (const line of lines) {\n                const track = layout.getTrack(idx);\n                const verticalY = lineAreaLeft + padding + track * 10;\n                const arrowHeight = 15;\n                const arrowWidth = 15;\n                const right = width;\n                const rectWidth = infoMod.glyphMarginWidth + infoMod.lineNumbersWidth;\n                const rectHeight = 18;\n                const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n                rect.classList.add('arrow-rectangle');\n                rect.setAttribute('x', `${right - rectWidth}`);\n                rect.setAttribute('y', `${line.to - rectHeight / 2}`);\n                rect.setAttribute('width', `${rectWidth}`);\n                rect.setAttribute('height', `${rectHeight}`);\n                this._element.appendChild(rect);\n                const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n                const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                path.setAttribute('d', `M ${0} ${line.from} L ${verticalY} ${line.from} L ${verticalY} ${line.to} L ${right - arrowWidth} ${line.to}`);\n                path.setAttribute('fill', 'none');\n                g.appendChild(path);\n                const arrowRight = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n                arrowRight.classList.add('arrow');\n                store.add(autorun(reader => {\n                    path.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n                    arrowRight.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n                }));\n                arrowRight.setAttribute('points', `${right - arrowWidth},${line.to - arrowHeight / 2} ${right},${line.to} ${right - arrowWidth},${line.to + arrowHeight / 2}`);\n                g.appendChild(arrowRight);\n                this._element.appendChild(g);\n                /*\n                TODO@hediet\n                path.addEventListener('mouseenter', () => {\n                    model.setHoveredMovedText(line.move);\n                });\n                path.addEventListener('mouseleave', () => {\n                    model.setHoveredMovedText(undefined);\n                });*/\n                idx++;\n            }\n            this.width.set(lineAreaWidth, undefined);\n        });\n        this._element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        this._element.setAttribute('class', 'moved-blocks-lines');\n        this._rootElement.appendChild(this._element);\n        this._register(toDisposable(() => this._element.remove()));\n        this._register(autorun(reader => {\n            /** @description update moved blocks lines positioning */\n            const info = this._originalEditorLayoutInfo.read(reader);\n            const info2 = this._modifiedEditorLayoutInfo.read(reader);\n            if (!info || !info2) {\n                return;\n            }\n            this._element.style.left = `${info.width - info.verticalScrollbarWidth}px`;\n            this._element.style.height = `${info.height}px`;\n            this._element.style.width = `${info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding + this.width.read(reader)}px`;\n        }));\n        this._register(recomputeInitiallyAndOnChange(this._state));\n        const movedBlockViewZones = derived(reader => {\n            const model = this._diffModel.read(reader);\n            const d = model?.diff.read(reader);\n            if (!d) {\n                return [];\n            }\n            return d.movedTexts.map(move => ({\n                move,\n                original: new PlaceholderViewZone(constObservable(move.lineRangeMapping.original.startLineNumber - 1), 18),\n                modified: new PlaceholderViewZone(constObservable(move.lineRangeMapping.modified.startLineNumber - 1), 18),\n            }));\n        });\n        this._register(applyViewZones(this._editors.original, movedBlockViewZones.map(zones => /** @description movedBlockViewZones.original */ zones.map(z => z.original))));\n        this._register(applyViewZones(this._editors.modified, movedBlockViewZones.map(zones => /** @description movedBlockViewZones.modified */ zones.map(z => z.modified))));\n        this._register(autorunWithStore((reader, store) => {\n            const blocks = movedBlockViewZones.read(reader);\n            for (const b of blocks) {\n                store.add(new MovedBlockOverlayWidget(this._editors.original, b.original, b.move, 'original', this._diffModel.get()));\n                store.add(new MovedBlockOverlayWidget(this._editors.modified, b.modified, b.move, 'modified', this._diffModel.get()));\n            }\n        }));\n        const originalHasFocus = observableSignalFromEvent('original.onDidFocusEditorWidget', e => this._editors.original.onDidFocusEditorWidget(() => setTimeout(() => e(undefined), 0)));\n        const modifiedHasFocus = observableSignalFromEvent('modified.onDidFocusEditorWidget', e => this._editors.modified.onDidFocusEditorWidget(() => setTimeout(() => e(undefined), 0)));\n        let lastChangedEditor = 'modified';\n        this._register(autorunHandleChanges({\n            createEmptyChangeSummary: () => undefined,\n            handleChange: (ctx, summary) => {\n                if (ctx.didChange(originalHasFocus)) {\n                    lastChangedEditor = 'original';\n                }\n                if (ctx.didChange(modifiedHasFocus)) {\n                    lastChangedEditor = 'modified';\n                }\n                return true;\n            }\n        }, reader => {\n            /** @description MovedBlocksLines.setActiveMovedTextFromCursor */\n            originalHasFocus.read(reader);\n            modifiedHasFocus.read(reader);\n            const m = this._diffModel.read(reader);\n            if (!m) {\n                return;\n            }\n            const diff = m.diff.read(reader);\n            let movedText = undefined;\n            if (diff && lastChangedEditor === 'original') {\n                const originalPos = this._editors.originalCursor.read(reader);\n                if (originalPos) {\n                    movedText = diff.movedTexts.find(m => m.lineRangeMapping.original.contains(originalPos.lineNumber));\n                }\n            }\n            if (diff && lastChangedEditor === 'modified') {\n                const modifiedPos = this._editors.modifiedCursor.read(reader);\n                if (modifiedPos) {\n                    movedText = diff.movedTexts.find(m => m.lineRangeMapping.modified.contains(modifiedPos.lineNumber));\n                }\n            }\n            if (movedText !== m.movedTextToCompare.get()) {\n                m.movedTextToCompare.set(undefined, undefined);\n            }\n            m.setActiveMovedText(movedText);\n        }));\n    }\n}\nclass LinesLayout {\n    static compute(lines) {\n        const setsPerTrack = [];\n        const trackPerLineIdx = [];\n        for (const line of lines) {\n            let trackIdx = setsPerTrack.findIndex(set => !set.intersectsStrict(line));\n            if (trackIdx === -1) {\n                const maxTrackCount = 6;\n                if (setsPerTrack.length >= maxTrackCount) {\n                    trackIdx = findMaxIdx(setsPerTrack, compareBy(set => set.intersectWithRangeLength(line), numberComparator));\n                }\n                else {\n                    trackIdx = setsPerTrack.length;\n                    setsPerTrack.push(new OffsetRangeSet());\n                }\n            }\n            setsPerTrack[trackIdx].addRange(line);\n            trackPerLineIdx.push(trackIdx);\n        }\n        return new LinesLayout(setsPerTrack.length, trackPerLineIdx);\n    }\n    constructor(_trackCount, trackPerLineIdx) {\n        this._trackCount = _trackCount;\n        this.trackPerLineIdx = trackPerLineIdx;\n    }\n    getTrack(lineIdx) {\n        return this.trackPerLineIdx[lineIdx];\n    }\n    getTrackCount() {\n        return this._trackCount;\n    }\n}\nclass MovedBlockOverlayWidget extends ViewZoneOverlayWidget {\n    constructor(_editor, _viewZone, _move, _kind, _diffModel) {\n        const root = h('div.diff-hidden-lines-widget');\n        super(_editor, _viewZone, root.root);\n        this._editor = _editor;\n        this._move = _move;\n        this._kind = _kind;\n        this._diffModel = _diffModel;\n        this._nodes = h('div.diff-moved-code-block', { style: { marginRight: '4px' } }, [\n            h('div.text-content@textContent'),\n            h('div.action-bar@actionBar'),\n        ]);\n        root.root.appendChild(this._nodes.root);\n        const editorLayout = observableFromEvent(this._editor.onDidLayoutChange, () => this._editor.getLayoutInfo());\n        this._register(applyStyle(this._nodes.root, {\n            paddingRight: editorLayout.map(l => l.verticalScrollbarWidth)\n        }));\n        let text;\n        if (_move.changes.length > 0) {\n            text = this._kind === 'original' ? localize('codeMovedToWithChanges', 'Code moved with changes to line {0}-{1}', this._move.lineRangeMapping.modified.startLineNumber, this._move.lineRangeMapping.modified.endLineNumberExclusive - 1) : localize('codeMovedFromWithChanges', 'Code moved with changes from line {0}-{1}', this._move.lineRangeMapping.original.startLineNumber, this._move.lineRangeMapping.original.endLineNumberExclusive - 1);\n        }\n        else {\n            text = this._kind === 'original' ? localize('codeMovedTo', 'Code moved to line {0}-{1}', this._move.lineRangeMapping.modified.startLineNumber, this._move.lineRangeMapping.modified.endLineNumberExclusive - 1) : localize('codeMovedFrom', 'Code moved from line {0}-{1}', this._move.lineRangeMapping.original.startLineNumber, this._move.lineRangeMapping.original.endLineNumberExclusive - 1);\n        }\n        const actionBar = this._register(new ActionBar(this._nodes.actionBar, {\n            highlightToggledItems: true,\n        }));\n        const caption = new Action('', text, '', false);\n        actionBar.push(caption, { icon: false, label: true });\n        const actionCompare = new Action('', 'Compare', ThemeIcon.asClassName(Codicon.compareChanges), true, () => {\n            this._editor.focus();\n            this._diffModel.movedTextToCompare.set(this._diffModel.movedTextToCompare.get() === _move ? undefined : this._move, undefined);\n        });\n        this._register(autorun(reader => {\n            const isActive = this._diffModel.movedTextToCompare.read(reader) === _move;\n            actionCompare.checked = isActive;\n        }));\n        actionBar.push(actionCompare, { icon: false, label: true });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h, reset } from '../../../../../base/browser/dom.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, observableFromEvent, observableSignal, observableSignalFromEvent, observableValue, transaction } from '../../../../../base/common/observable.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/offsetRange.js';\nexport class EditorGutter extends Disposable {\n    constructor(_editor, _domNode, itemProvider) {\n        super();\n        this._editor = _editor;\n        this._domNode = _domNode;\n        this.itemProvider = itemProvider;\n        this.scrollTop = observableFromEvent(this, this._editor.onDidScrollChange, (e) => /** @description editor.onDidScrollChange */ this._editor.getScrollTop());\n        this.isScrollTopZero = this.scrollTop.map((scrollTop) => /** @description isScrollTopZero */ scrollTop === 0);\n        this.modelAttached = observableFromEvent(this, this._editor.onDidChangeModel, (e) => /** @description editor.onDidChangeModel */ this._editor.hasModel());\n        this.editorOnDidChangeViewZones = observableSignalFromEvent('onDidChangeViewZones', this._editor.onDidChangeViewZones);\n        this.editorOnDidContentSizeChange = observableSignalFromEvent('onDidContentSizeChange', this._editor.onDidContentSizeChange);\n        this.domNodeSizeChanged = observableSignal('domNodeSizeChanged');\n        this.views = new Map();\n        this._domNode.className = 'gutter monaco-editor';\n        const scrollDecoration = this._domNode.appendChild(h('div.scroll-decoration', { role: 'presentation', ariaHidden: 'true', style: { width: '100%' } })\n            .root);\n        const o = new ResizeObserver(() => {\n            transaction(tx => {\n                /** @description ResizeObserver: size changed */\n                this.domNodeSizeChanged.trigger(tx);\n            });\n        });\n        o.observe(this._domNode);\n        this._register(toDisposable(() => o.disconnect()));\n        this._register(autorun(reader => {\n            /** @description update scroll decoration */\n            scrollDecoration.className = this.isScrollTopZero.read(reader) ? '' : 'scroll-decoration';\n        }));\n        this._register(autorun(reader => /** @description EditorGutter.Render */ this.render(reader)));\n    }\n    dispose() {\n        super.dispose();\n        reset(this._domNode);\n    }\n    render(reader) {\n        if (!this.modelAttached.read(reader)) {\n            return;\n        }\n        this.domNodeSizeChanged.read(reader);\n        this.editorOnDidChangeViewZones.read(reader);\n        this.editorOnDidContentSizeChange.read(reader);\n        const scrollTop = this.scrollTop.read(reader);\n        const visibleRanges = this._editor.getVisibleRanges();\n        const unusedIds = new Set(this.views.keys());\n        const viewRange = OffsetRange.ofStartAndLength(0, this._domNode.clientHeight);\n        if (!viewRange.isEmpty) {\n            for (const visibleRange of visibleRanges) {\n                const visibleRange2 = new LineRange(visibleRange.startLineNumber, visibleRange.endLineNumber + 1);\n                const gutterItems = this.itemProvider.getIntersectingGutterItems(visibleRange2, reader);\n                transaction(tx => {\n                    /** EditorGutter.render */\n                    for (const gutterItem of gutterItems) {\n                        if (!gutterItem.range.intersect(visibleRange2)) {\n                            continue;\n                        }\n                        unusedIds.delete(gutterItem.id);\n                        let view = this.views.get(gutterItem.id);\n                        if (!view) {\n                            const viewDomNode = document.createElement('div');\n                            this._domNode.appendChild(viewDomNode);\n                            const gutterItemObs = observableValue('item', gutterItem);\n                            const itemView = this.itemProvider.createView(gutterItemObs, viewDomNode);\n                            view = new ManagedGutterItemView(gutterItemObs, itemView, viewDomNode);\n                            this.views.set(gutterItem.id, view);\n                        }\n                        else {\n                            view.item.set(gutterItem, tx);\n                        }\n                        const top = gutterItem.range.startLineNumber <= this._editor.getModel().getLineCount()\n                            ? this._editor.getTopForLineNumber(gutterItem.range.startLineNumber, true) - scrollTop\n                            : this._editor.getBottomForLineNumber(gutterItem.range.startLineNumber - 1, false) - scrollTop;\n                        const bottom = gutterItem.range.endLineNumberExclusive === 1 ?\n                            Math.max(top, this._editor.getTopForLineNumber(gutterItem.range.startLineNumber, false) - scrollTop)\n                            : Math.max(top, this._editor.getBottomForLineNumber(gutterItem.range.endLineNumberExclusive - 1, true) - scrollTop);\n                        const height = bottom - top;\n                        view.domNode.style.top = `${top}px`;\n                        view.domNode.style.height = `${height}px`;\n                        view.gutterItemView.layout(OffsetRange.ofStartAndLength(top, height), viewRange);\n                    }\n                });\n            }\n        }\n        for (const id of unusedIds) {\n            const view = this.views.get(id);\n            view.gutterItemView.dispose();\n            view.domNode.remove();\n            this.views.delete(id);\n        }\n    }\n}\nclass ManagedGutterItemView {\n    constructor(item, gutterItemView, domNode) {\n        this.item = item;\n        this.gutterItemView = gutterItemView;\n        this.domNode = domNode;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ActionRunner } from '../../../../base/common/actions.js';\nexport class ActionRunnerWithContext extends ActionRunner {\n    constructor(_getContext) {\n        super();\n        this._getContext = _getContext;\n    }\n    runAction(action, _context) {\n        const ctx = this._getContext();\n        return super.runAction(action, ctx);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { EventType, addDisposableListener, h } from '../../../../../base/browser/dom.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent, observableValue } from '../../../../../base/common/observable.js';\nimport { derivedDisposable, derivedWithSetter } from '../../../../../base/common/observableInternal/derived.js';\nimport { DiffEditorSash } from '../components/diffEditorSash.js';\nimport { appendRemoveOnDispose, applyStyle, prependRemoveOnDispose } from '../utils.js';\nimport { EditorGutter } from '../utils/editorGutter.js';\nimport { ActionRunnerWithContext } from '../../multiDiffEditor/utils.js';\nimport { LineRange, LineRangeSet } from '../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../common/core/offsetRange.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextEdit } from '../../../../common/core/textEdit.js';\nimport { DetailedLineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { MenuWorkbenchToolBar } from '../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { WorkbenchHoverDelegate } from '../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nconst emptyArr = [];\nconst width = 35;\nlet DiffEditorGutter = class DiffEditorGutter extends Disposable {\n    constructor(diffEditorRoot, _diffModel, _editors, _options, _sashLayout, _boundarySashes, _instantiationService, _contextKeyService, _menuService) {\n        super();\n        this._diffModel = _diffModel;\n        this._editors = _editors;\n        this._options = _options;\n        this._sashLayout = _sashLayout;\n        this._boundarySashes = _boundarySashes;\n        this._instantiationService = _instantiationService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this._menu = this._register(this._menuService.createMenu(MenuId.DiffEditorHunkToolbar, this._contextKeyService));\n        this._actions = observableFromEvent(this, this._menu.onDidChange, () => this._menu.getActions());\n        this._hasActions = this._actions.map(a => a.length > 0);\n        this._showSash = derived(this, reader => this._options.renderSideBySide.read(reader) && this._hasActions.read(reader));\n        this.width = derived(this, reader => this._hasActions.read(reader) ? width : 0);\n        this.elements = h('div.gutter@gutter', { style: { position: 'absolute', height: '100%', width: width + 'px' } }, []);\n        this._currentDiff = derived(this, (reader) => {\n            const model = this._diffModel.read(reader);\n            if (!model) {\n                return undefined;\n            }\n            const mappings = model.diff.read(reader)?.mappings;\n            const cursorPosition = this._editors.modifiedCursor.read(reader);\n            if (!cursorPosition) {\n                return undefined;\n            }\n            return mappings?.find(m => m.lineRangeMapping.modified.contains(cursorPosition.lineNumber));\n        });\n        this._selectedDiffs = derived(this, (reader) => {\n            /** @description selectedDiffs */\n            const model = this._diffModel.read(reader);\n            const diff = model?.diff.read(reader);\n            // Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n            if (!diff) {\n                return emptyArr;\n            }\n            const selections = this._editors.modifiedSelections.read(reader);\n            if (selections.every(s => s.isEmpty())) {\n                return emptyArr;\n            }\n            const selectedLineNumbers = new LineRangeSet(selections.map(s => LineRange.fromRangeInclusive(s)));\n            const selectedMappings = diff.mappings.filter(m => m.lineRangeMapping.innerChanges && selectedLineNumbers.intersects(m.lineRangeMapping.modified));\n            const result = selectedMappings.map(mapping => ({\n                mapping,\n                rangeMappings: mapping.lineRangeMapping.innerChanges.filter(c => selections.some(s => Range.areIntersecting(c.modifiedRange, s)))\n            }));\n            if (result.length === 0 || result.every(r => r.rangeMappings.length === 0)) {\n                return emptyArr;\n            }\n            return result;\n        });\n        this._register(prependRemoveOnDispose(diffEditorRoot, this.elements.root));\n        this._register(addDisposableListener(this.elements.root, 'click', () => {\n            this._editors.modified.focus();\n        }));\n        this._register(applyStyle(this.elements.root, { display: this._hasActions.map(a => a ? 'block' : 'none') }));\n        derivedDisposable(this, reader => {\n            const showSash = this._showSash.read(reader);\n            return !showSash ? undefined : new DiffEditorSash(diffEditorRoot, this._sashLayout.dimensions, this._options.enableSplitViewResizing, this._boundarySashes, derivedWithSetter(this, reader => this._sashLayout.sashLeft.read(reader) - width, (v, tx) => this._sashLayout.sashLeft.set(v + width, tx)), () => this._sashLayout.resetSash());\n        }).recomputeInitiallyAndOnChange(this._store);\n        this._register(new EditorGutter(this._editors.modified, this.elements.root, {\n            getIntersectingGutterItems: (range, reader) => {\n                const model = this._diffModel.read(reader);\n                if (!model) {\n                    return [];\n                }\n                const diffs = model.diff.read(reader);\n                if (!diffs) {\n                    return [];\n                }\n                const selection = this._selectedDiffs.read(reader);\n                if (selection.length > 0) {\n                    const m = DetailedLineRangeMapping.fromRangeMappings(selection.flatMap(s => s.rangeMappings));\n                    return [\n                        new DiffGutterItem(m, true, MenuId.DiffEditorSelectionToolbar, undefined, model.model.original.uri, model.model.modified.uri)\n                    ];\n                }\n                const currentDiff = this._currentDiff.read(reader);\n                return diffs.mappings.map(m => new DiffGutterItem(m.lineRangeMapping.withInnerChangesFromLineRanges(), m.lineRangeMapping === currentDiff?.lineRangeMapping, MenuId.DiffEditorHunkToolbar, undefined, model.model.original.uri, model.model.modified.uri));\n            },\n            createView: (item, target) => {\n                return this._instantiationService.createInstance(DiffToolBar, item, target, this);\n            },\n        }));\n        this._register(addDisposableListener(this.elements.gutter, EventType.MOUSE_WHEEL, (e) => {\n            if (this._editors.modified.getOption(104 /* EditorOption.scrollbar */).handleMouseWheel) {\n                this._editors.modified.delegateScrollFromMouseWheelEvent(e);\n            }\n        }, { passive: false }));\n    }\n    computeStagedValue(mapping) {\n        const c = mapping.innerChanges ?? [];\n        const modified = new TextModelText(this._editors.modifiedModel.get());\n        const original = new TextModelText(this._editors.original.getModel());\n        const edit = new TextEdit(c.map(c => c.toTextEdit(modified)));\n        const value = edit.apply(original);\n        return value;\n    }\n    layout(left) {\n        this.elements.gutter.style.left = left + 'px';\n    }\n};\nDiffEditorGutter = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IMenuService)\n], DiffEditorGutter);\nexport { DiffEditorGutter };\nclass DiffGutterItem {\n    constructor(mapping, showAlways, menuId, rangeOverride, originalUri, modifiedUri) {\n        this.mapping = mapping;\n        this.showAlways = showAlways;\n        this.menuId = menuId;\n        this.rangeOverride = rangeOverride;\n        this.originalUri = originalUri;\n        this.modifiedUri = modifiedUri;\n    }\n    get id() { return this.mapping.modified.toString(); }\n    get range() { return this.rangeOverride ?? this.mapping.modified; }\n}\nlet DiffToolBar = class DiffToolBar extends Disposable {\n    constructor(_item, target, gutter, instantiationService) {\n        super();\n        this._item = _item;\n        this._elements = h('div.gutterItem', { style: { height: '20px', width: '34px' } }, [\n            h('div.background@background', {}, []),\n            h('div.buttons@buttons', {}, []),\n        ]);\n        this._showAlways = this._item.map(this, item => item.showAlways);\n        this._menuId = this._item.map(this, item => item.menuId);\n        this._isSmall = observableValue(this, false);\n        this._lastItemRange = undefined;\n        this._lastViewRange = undefined;\n        const hoverDelegate = this._register(instantiationService.createInstance(WorkbenchHoverDelegate, 'element', true, { position: { hoverPosition: 1 /* HoverPosition.RIGHT */ } }));\n        this._register(appendRemoveOnDispose(target, this._elements.root));\n        this._register(autorun(reader => {\n            /** @description update showAlways */\n            const showAlways = this._showAlways.read(reader);\n            this._elements.root.classList.toggle('noTransition', true);\n            this._elements.root.classList.toggle('showAlways', showAlways);\n            setTimeout(() => {\n                this._elements.root.classList.toggle('noTransition', false);\n            }, 0);\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            this._elements.buttons.replaceChildren();\n            const i = store.add(instantiationService.createInstance(MenuWorkbenchToolBar, this._elements.buttons, this._menuId.read(reader), {\n                orientation: 1 /* ActionsOrientation.VERTICAL */,\n                hoverDelegate,\n                toolbarOptions: {\n                    primaryGroup: g => g.startsWith('primary'),\n                },\n                overflowBehavior: { maxItems: this._isSmall.read(reader) ? 1 : 3 },\n                hiddenItemStrategy: 0 /* HiddenItemStrategy.Ignore */,\n                actionRunner: new ActionRunnerWithContext(() => {\n                    const item = this._item.get();\n                    const mapping = item.mapping;\n                    return {\n                        mapping,\n                        originalWithModifiedChanges: gutter.computeStagedValue(mapping),\n                        originalUri: item.originalUri,\n                        modifiedUri: item.modifiedUri,\n                    };\n                }),\n                menuOptions: {\n                    shouldForwardArgs: true,\n                },\n            }));\n            store.add(i.onDidChangeMenuItems(() => {\n                if (this._lastItemRange) {\n                    this.layout(this._lastItemRange, this._lastViewRange);\n                }\n            }));\n        }));\n    }\n    layout(itemRange, viewRange) {\n        this._lastItemRange = itemRange;\n        this._lastViewRange = viewRange;\n        let itemHeight = this._elements.buttons.clientHeight;\n        this._isSmall.set(this._item.get().mapping.original.startLineNumber === 1 && itemRange.length < 30, undefined);\n        // Item might have changed\n        itemHeight = this._elements.buttons.clientHeight;\n        const middleHeight = itemRange.length / 2 - itemHeight / 2;\n        const margin = itemHeight;\n        let effectiveCheckboxTop = itemRange.start + middleHeight;\n        const preferredViewPortRange = OffsetRange.tryCreate(margin, viewRange.endExclusive - margin - itemHeight);\n        const preferredParentRange = OffsetRange.tryCreate(itemRange.start + margin, itemRange.endExclusive - itemHeight - margin);\n        if (preferredParentRange && preferredViewPortRange && preferredParentRange.start < preferredParentRange.endExclusive) {\n            effectiveCheckboxTop = preferredViewPortRange.clip(effectiveCheckboxTop);\n            effectiveCheckboxTop = preferredParentRange.clip(effectiveCheckboxTop);\n        }\n        this._elements.buttons.style.top = `${effectiveCheckboxTop - itemRange.start}px`;\n    }\n};\nDiffToolBar = __decorate([\n    __param(3, IInstantiationService)\n], DiffToolBar);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equalsIfDefined, itemsEquals } from '../../base/common/equals.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../base/common/lifecycle.js';\nimport { autorun, autorunOpts, autorunWithStoreHandleChanges, derived, derivedOpts, observableFromEvent, observableSignal, observableValue, observableValueOpts } from '../../base/common/observable.js';\nimport { TransactionImpl } from '../../base/common/observableInternal/base.js';\nimport { derivedWithSetter } from '../../base/common/observableInternal/derived.js';\nimport { Selection } from '../common/core/selection.js';\n/**\n * Returns a facade for the code editor that provides observables for various states/events.\n*/\nexport function observableCodeEditor(editor) {\n    return ObservableCodeEditor.get(editor);\n}\nexport class ObservableCodeEditor extends Disposable {\n    static { this._map = new Map(); }\n    /**\n     * Make sure that editor is not disposed yet!\n    */\n    static get(editor) {\n        let result = ObservableCodeEditor._map.get(editor);\n        if (!result) {\n            result = new ObservableCodeEditor(editor);\n            ObservableCodeEditor._map.set(editor, result);\n            const d = editor.onDidDispose(() => {\n                const item = ObservableCodeEditor._map.get(editor);\n                if (item) {\n                    ObservableCodeEditor._map.delete(editor);\n                    item.dispose();\n                    d.dispose();\n                }\n            });\n        }\n        return result;\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            this._currentTransaction = new TransactionImpl(() => {\n                /** @description Update editor state */\n            });\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            const t = this._currentTransaction;\n            this._currentTransaction = undefined;\n            t.finish();\n        }\n    }\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._updateCounter = 0;\n        this._currentTransaction = undefined;\n        this._model = observableValue(this, this.editor.getModel());\n        this.model = this._model;\n        this.isReadonly = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(92 /* EditorOption.readOnly */));\n        this._versionId = observableValueOpts({ owner: this, lazy: true }, this.editor.getModel()?.getVersionId() ?? null);\n        this.versionId = this._versionId;\n        this._selections = observableValueOpts({ owner: this, equalsFn: equalsIfDefined(itemsEquals(Selection.selectionsEqual)), lazy: true }, this.editor.getSelections() ?? null);\n        this.selections = this._selections;\n        this.isFocused = observableFromEvent(this, e => {\n            const d1 = this.editor.onDidFocusEditorWidget(e);\n            const d2 = this.editor.onDidBlurEditorWidget(e);\n            return {\n                dispose() {\n                    d1.dispose();\n                    d2.dispose();\n                }\n            };\n        }, () => this.editor.hasWidgetFocus());\n        this.value = derivedWithSetter(this, reader => { this.versionId.read(reader); return this.model.read(reader)?.getValue() ?? ''; }, (value, tx) => {\n            const model = this.model.get();\n            if (model !== null) {\n                if (value !== model.getValue()) {\n                    model.setValue(value);\n                }\n            }\n        });\n        this.valueIsEmpty = derived(this, reader => { this.versionId.read(reader); return this.editor.getModel()?.getValueLength() === 0; });\n        this.cursorSelection = derivedOpts({ owner: this, equalsFn: equalsIfDefined(Selection.selectionsEqual) }, reader => this.selections.read(reader)?.[0] ?? null);\n        this.onDidType = observableSignal(this);\n        this.scrollTop = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollTop());\n        this.scrollLeft = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollLeft());\n        this.layoutInfo = observableFromEvent(this.editor.onDidLayoutChange, () => this.editor.getLayoutInfo());\n        this.layoutInfoContentLeft = this.layoutInfo.map(l => l.contentLeft);\n        this.layoutInfoDecorationsLeft = this.layoutInfo.map(l => l.decorationsLeft);\n        this.contentWidth = observableFromEvent(this.editor.onDidContentSizeChange, () => this.editor.getContentWidth());\n        this._overlayWidgetCounter = 0;\n        this._register(this.editor.onBeginUpdate(() => this._beginUpdate()));\n        this._register(this.editor.onEndUpdate(() => this._endUpdate()));\n        this._register(this.editor.onDidChangeModel(() => {\n            this._beginUpdate();\n            try {\n                this._model.set(this.editor.getModel(), this._currentTransaction);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this._beginUpdate();\n            try {\n                this._forceUpdate();\n                this.onDidType.trigger(this._currentTransaction, e);\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent(e => {\n            this._beginUpdate();\n            try {\n                this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, e);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidChangeCursorSelection(e => {\n            this._beginUpdate();\n            try {\n                this._selections.set(this.editor.getSelections(), this._currentTransaction, e);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n    }\n    forceUpdate(cb) {\n        this._beginUpdate();\n        try {\n            this._forceUpdate();\n            if (!cb) {\n                return undefined;\n            }\n            return cb(this._currentTransaction);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _forceUpdate() {\n        this._beginUpdate();\n        try {\n            this._model.set(this.editor.getModel(), this._currentTransaction);\n            this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, undefined);\n            this._selections.set(this.editor.getSelections(), this._currentTransaction, undefined);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    getOption(id) {\n        return observableFromEvent(this, cb => this.editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(id)) {\n                cb(undefined);\n            }\n        }), () => this.editor.getOption(id));\n    }\n    setDecorations(decorations) {\n        const d = new DisposableStore();\n        const decorationsCollection = this.editor.createDecorationsCollection();\n        d.add(autorunOpts({ owner: this, debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n            const d = decorations.read(reader);\n            decorationsCollection.set(d);\n        }));\n        d.add({\n            dispose: () => {\n                decorationsCollection.clear();\n            }\n        });\n        return d;\n    }\n    createOverlayWidget(widget) {\n        const overlayWidgetId = 'observableOverlayWidget' + (this._overlayWidgetCounter++);\n        const w = {\n            getDomNode: () => widget.domNode,\n            getPosition: () => widget.position.get(),\n            getId: () => overlayWidgetId,\n            allowEditorOverflow: widget.allowEditorOverflow,\n            getMinContentWidthInPx: () => widget.minContentWidthInPx.get(),\n        };\n        this.editor.addOverlayWidget(w);\n        const d = autorun(reader => {\n            widget.position.read(reader);\n            widget.minContentWidthInPx.read(reader);\n            this.editor.layoutOverlayWidget(w);\n        });\n        return toDisposable(() => {\n            d.dispose();\n            this.editor.removeOverlayWidget(w);\n        });\n    }\n}\nexport function reactToChange(observable, cb) {\n    return autorunWithStoreHandleChanges({\n        createEmptyChangeSummary: () => ({ deltas: [], didChange: false }),\n        handleChange: (context, changeSummary) => {\n            if (context.didChange(observable)) {\n                const e = context.change;\n                if (e !== undefined) {\n                    changeSummary.deltas.push(e);\n                }\n                changeSummary.didChange = true;\n            }\n            return true;\n        },\n    }, (reader, changeSummary) => {\n        const value = observable.read(reader);\n        if (changeSummary.didChange) {\n            cb(value, changeSummary.deltas);\n        }\n    });\n}\nexport function reactToChangeWithStore(observable, cb) {\n    const store = new DisposableStore();\n    const disposable = reactToChange(observable, (value, deltas) => {\n        store.clear();\n        cb(value, deltas, store);\n    });\n    return {\n        dispose() {\n            disposable.dispose();\n            store.dispose();\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar HideUnchangedRegionsFeature_1;\nimport { $, addDisposableListener, getWindow, h, reset } from '../../../../../base/browser/dom.js';\nimport { renderIcon, renderLabelWithIcons } from '../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedWithStore, observableValue, transaction } from '../../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../../base/common/observableInternal/derived.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { observableCodeEditor } from '../../../observableCodeEditor.js';\nimport { PlaceholderViewZone, ViewZoneOverlayWidget, applyObservableDecorations, applyStyle } from '../utils.js';\nimport { LineRange } from '../../../../common/core/lineRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { SymbolKinds } from '../../../../common/languages.js';\nimport { localize } from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\n/**\n * Make sure to add the view zones to the editor!\n */\nlet HideUnchangedRegionsFeature = class HideUnchangedRegionsFeature extends Disposable {\n    static { HideUnchangedRegionsFeature_1 = this; }\n    static { this._breadcrumbsSourceFactory = observableValue(HideUnchangedRegionsFeature_1, () => ({\n        dispose() {\n        },\n        getBreadcrumbItems(startRange, reader) {\n            return [];\n        },\n    })); }\n    static setBreadcrumbsSourceFactory(factory) {\n        this._breadcrumbsSourceFactory.set(factory, undefined);\n    }\n    get isUpdatingHiddenAreas() { return this._isUpdatingHiddenAreas; }\n    constructor(_editors, _diffModel, _options, _instantiationService) {\n        super();\n        this._editors = _editors;\n        this._diffModel = _diffModel;\n        this._options = _options;\n        this._instantiationService = _instantiationService;\n        this._modifiedOutlineSource = derivedDisposable(this, (reader) => {\n            const m = this._editors.modifiedModel.read(reader);\n            const factory = HideUnchangedRegionsFeature_1._breadcrumbsSourceFactory.read(reader);\n            return (!m || !factory) ? undefined : factory(m, this._instantiationService);\n        });\n        this._isUpdatingHiddenAreas = false;\n        this._register(this._editors.original.onDidChangeCursorPosition(e => {\n            if (e.reason === 1 /* CursorChangeReason.ContentFlush */) {\n                return;\n            }\n            const m = this._diffModel.get();\n            transaction(tx => {\n                for (const s of this._editors.original.getSelections() || []) {\n                    m?.ensureOriginalLineIsVisible(s.getStartPosition().lineNumber, 0 /* RevealPreference.FromCloserSide */, tx);\n                    m?.ensureOriginalLineIsVisible(s.getEndPosition().lineNumber, 0 /* RevealPreference.FromCloserSide */, tx);\n                }\n            });\n        }));\n        this._register(this._editors.modified.onDidChangeCursorPosition(e => {\n            if (e.reason === 1 /* CursorChangeReason.ContentFlush */) {\n                return;\n            }\n            const m = this._diffModel.get();\n            transaction(tx => {\n                for (const s of this._editors.modified.getSelections() || []) {\n                    m?.ensureModifiedLineIsVisible(s.getStartPosition().lineNumber, 0 /* RevealPreference.FromCloserSide */, tx);\n                    m?.ensureModifiedLineIsVisible(s.getEndPosition().lineNumber, 0 /* RevealPreference.FromCloserSide */, tx);\n                }\n            });\n        }));\n        const unchangedRegions = this._diffModel.map((m, reader) => {\n            const regions = m?.unchangedRegions.read(reader) ?? [];\n            if (regions.length === 1 && regions[0].modifiedLineNumber === 1 && regions[0].lineCount === this._editors.modifiedModel.read(reader)?.getLineCount()) {\n                return [];\n            }\n            return regions;\n        });\n        this.viewZones = derivedWithStore(this, (reader, store) => {\n            /** @description view Zones */\n            const modifiedOutlineSource = this._modifiedOutlineSource.read(reader);\n            if (!modifiedOutlineSource) {\n                return { origViewZones: [], modViewZones: [] };\n            }\n            const origViewZones = [];\n            const modViewZones = [];\n            const sideBySide = this._options.renderSideBySide.read(reader);\n            const compactMode = this._options.compactMode.read(reader);\n            const curUnchangedRegions = unchangedRegions.read(reader);\n            for (let i = 0; i < curUnchangedRegions.length; i++) {\n                const r = curUnchangedRegions[i];\n                if (r.shouldHideControls(reader)) {\n                    continue;\n                }\n                if (compactMode && (i === 0 || i === curUnchangedRegions.length - 1)) {\n                    continue;\n                }\n                if (compactMode) {\n                    {\n                        const d = derived(this, reader => /** @description hiddenOriginalRangeStart */ r.getHiddenOriginalRange(reader).startLineNumber - 1);\n                        const origVz = new PlaceholderViewZone(d, 12);\n                        origViewZones.push(origVz);\n                        store.add(new CompactCollapsedCodeOverlayWidget(this._editors.original, origVz, r, !sideBySide));\n                    }\n                    {\n                        const d = derived(this, reader => /** @description hiddenModifiedRangeStart */ r.getHiddenModifiedRange(reader).startLineNumber - 1);\n                        const modViewZone = new PlaceholderViewZone(d, 12);\n                        modViewZones.push(modViewZone);\n                        store.add(new CompactCollapsedCodeOverlayWidget(this._editors.modified, modViewZone, r));\n                    }\n                }\n                else {\n                    {\n                        const d = derived(this, reader => /** @description hiddenOriginalRangeStart */ r.getHiddenOriginalRange(reader).startLineNumber - 1);\n                        const origVz = new PlaceholderViewZone(d, 24);\n                        origViewZones.push(origVz);\n                        store.add(new CollapsedCodeOverlayWidget(this._editors.original, origVz, r, r.originalUnchangedRange, !sideBySide, modifiedOutlineSource, l => this._diffModel.get().ensureModifiedLineIsVisible(l, 2 /* RevealPreference.FromBottom */, undefined), this._options));\n                    }\n                    {\n                        const d = derived(this, reader => /** @description hiddenModifiedRangeStart */ r.getHiddenModifiedRange(reader).startLineNumber - 1);\n                        const modViewZone = new PlaceholderViewZone(d, 24);\n                        modViewZones.push(modViewZone);\n                        store.add(new CollapsedCodeOverlayWidget(this._editors.modified, modViewZone, r, r.modifiedUnchangedRange, false, modifiedOutlineSource, l => this._diffModel.get().ensureModifiedLineIsVisible(l, 2 /* RevealPreference.FromBottom */, undefined), this._options));\n                    }\n                }\n            }\n            return { origViewZones, modViewZones, };\n        });\n        const unchangedLinesDecoration = {\n            description: 'unchanged lines',\n            className: 'diff-unchanged-lines',\n            isWholeLine: true,\n        };\n        const unchangedLinesDecorationShow = {\n            description: 'Fold Unchanged',\n            glyphMarginHoverMessage: new MarkdownString(undefined, { isTrusted: true, supportThemeIcons: true })\n                .appendMarkdown(localize('foldUnchanged', 'Fold Unchanged Region')),\n            glyphMarginClassName: 'fold-unchanged ' + ThemeIcon.asClassName(Codicon.fold),\n            zIndex: 10001,\n        };\n        this._register(applyObservableDecorations(this._editors.original, derived(this, reader => {\n            /** @description decorations */\n            const curUnchangedRegions = unchangedRegions.read(reader);\n            const result = curUnchangedRegions.map(r => ({\n                range: r.originalUnchangedRange.toInclusiveRange(),\n                options: unchangedLinesDecoration,\n            }));\n            for (const r of curUnchangedRegions) {\n                if (r.shouldHideControls(reader)) {\n                    result.push({\n                        range: Range.fromPositions(new Position(r.originalLineNumber, 1)),\n                        options: unchangedLinesDecorationShow,\n                    });\n                }\n            }\n            return result;\n        })));\n        this._register(applyObservableDecorations(this._editors.modified, derived(this, reader => {\n            /** @description decorations */\n            const curUnchangedRegions = unchangedRegions.read(reader);\n            const result = curUnchangedRegions.map(r => ({\n                range: r.modifiedUnchangedRange.toInclusiveRange(),\n                options: unchangedLinesDecoration,\n            }));\n            for (const r of curUnchangedRegions) {\n                if (r.shouldHideControls(reader)) {\n                    result.push({\n                        range: LineRange.ofLength(r.modifiedLineNumber, 1).toInclusiveRange(),\n                        options: unchangedLinesDecorationShow,\n                    });\n                }\n            }\n            return result;\n        })));\n        this._register(autorun((reader) => {\n            /** @description update folded unchanged regions */\n            const curUnchangedRegions = unchangedRegions.read(reader);\n            this._isUpdatingHiddenAreas = true;\n            try {\n                this._editors.original.setHiddenAreas(curUnchangedRegions.map(r => r.getHiddenOriginalRange(reader).toInclusiveRange()).filter(isDefined));\n                this._editors.modified.setHiddenAreas(curUnchangedRegions.map(r => r.getHiddenModifiedRange(reader).toInclusiveRange()).filter(isDefined));\n            }\n            finally {\n                this._isUpdatingHiddenAreas = false;\n            }\n        }));\n        this._register(this._editors.modified.onMouseUp(event => {\n            if (!event.event.rightButton && event.target.position && event.target.element?.className.includes('fold-unchanged')) {\n                const lineNumber = event.target.position.lineNumber;\n                const model = this._diffModel.get();\n                if (!model) {\n                    return;\n                }\n                const region = model.unchangedRegions.get().find(r => r.modifiedUnchangedRange.includes(lineNumber));\n                if (!region) {\n                    return;\n                }\n                region.collapseAll(undefined);\n                event.event.stopPropagation();\n                event.event.preventDefault();\n            }\n        }));\n        this._register(this._editors.original.onMouseUp(event => {\n            if (!event.event.rightButton && event.target.position && event.target.element?.className.includes('fold-unchanged')) {\n                const lineNumber = event.target.position.lineNumber;\n                const model = this._diffModel.get();\n                if (!model) {\n                    return;\n                }\n                const region = model.unchangedRegions.get().find(r => r.originalUnchangedRange.includes(lineNumber));\n                if (!region) {\n                    return;\n                }\n                region.collapseAll(undefined);\n                event.event.stopPropagation();\n                event.event.preventDefault();\n            }\n        }));\n    }\n};\nHideUnchangedRegionsFeature = HideUnchangedRegionsFeature_1 = __decorate([\n    __param(3, IInstantiationService)\n], HideUnchangedRegionsFeature);\nexport { HideUnchangedRegionsFeature };\nclass CompactCollapsedCodeOverlayWidget extends ViewZoneOverlayWidget {\n    constructor(editor, _viewZone, _unchangedRegion, _hide = false) {\n        const root = h('div.diff-hidden-lines-widget');\n        super(editor, _viewZone, root.root);\n        this._unchangedRegion = _unchangedRegion;\n        this._hide = _hide;\n        this._nodes = h('div.diff-hidden-lines-compact', [\n            h('div.line-left', []),\n            h('div.text@text', []),\n            h('div.line-right', [])\n        ]);\n        root.root.appendChild(this._nodes.root);\n        if (this._hide) {\n            this._nodes.root.replaceChildren();\n        }\n        this._register(autorun(reader => {\n            /** @description update labels */\n            if (!this._hide) {\n                const lineCount = this._unchangedRegion.getHiddenModifiedRange(reader).length;\n                const linesHiddenText = localize('hiddenLines', '{0} hidden lines', lineCount);\n                this._nodes.text.innerText = linesHiddenText;\n            }\n        }));\n    }\n}\nclass CollapsedCodeOverlayWidget extends ViewZoneOverlayWidget {\n    constructor(_editor, _viewZone, _unchangedRegion, _unchangedRegionRange, _hide, _modifiedOutlineSource, _revealModifiedHiddenLine, _options) {\n        const root = h('div.diff-hidden-lines-widget');\n        super(_editor, _viewZone, root.root);\n        this._editor = _editor;\n        this._unchangedRegion = _unchangedRegion;\n        this._unchangedRegionRange = _unchangedRegionRange;\n        this._hide = _hide;\n        this._modifiedOutlineSource = _modifiedOutlineSource;\n        this._revealModifiedHiddenLine = _revealModifiedHiddenLine;\n        this._options = _options;\n        this._nodes = h('div.diff-hidden-lines', [\n            h('div.top@top', { title: localize('diff.hiddenLines.top', 'Click or drag to show more above') }),\n            h('div.center@content', { style: { display: 'flex' } }, [\n                h('div@first', { style: { display: 'flex', justifyContent: 'center', alignItems: 'center', flexShrink: '0' } }, [$('a', { title: localize('showUnchangedRegion', 'Show Unchanged Region'), role: 'button', onclick: () => { this._unchangedRegion.showAll(undefined); } }, ...renderLabelWithIcons('$(unfold)'))]),\n                h('div@others', { style: { display: 'flex', justifyContent: 'center', alignItems: 'center' } }),\n            ]),\n            h('div.bottom@bottom', { title: localize('diff.bottom', 'Click or drag to show more below'), role: 'button' }),\n        ]);\n        root.root.appendChild(this._nodes.root);\n        if (!this._hide) {\n            this._register(applyStyle(this._nodes.first, { width: observableCodeEditor(this._editor).layoutInfoContentLeft }));\n        }\n        else {\n            reset(this._nodes.first);\n        }\n        this._register(autorun(reader => {\n            /** @description Update CollapsedCodeOverlayWidget canMove* css classes */\n            const isFullyRevealed = this._unchangedRegion.visibleLineCountTop.read(reader) + this._unchangedRegion.visibleLineCountBottom.read(reader) === this._unchangedRegion.lineCount;\n            this._nodes.bottom.classList.toggle('canMoveTop', !isFullyRevealed);\n            this._nodes.bottom.classList.toggle('canMoveBottom', this._unchangedRegion.visibleLineCountBottom.read(reader) > 0);\n            this._nodes.top.classList.toggle('canMoveTop', this._unchangedRegion.visibleLineCountTop.read(reader) > 0);\n            this._nodes.top.classList.toggle('canMoveBottom', !isFullyRevealed);\n            const isDragged = this._unchangedRegion.isDragged.read(reader);\n            const domNode = this._editor.getDomNode();\n            if (domNode) {\n                domNode.classList.toggle('draggingUnchangedRegion', !!isDragged);\n                if (isDragged === 'top') {\n                    domNode.classList.toggle('canMoveTop', this._unchangedRegion.visibleLineCountTop.read(reader) > 0);\n                    domNode.classList.toggle('canMoveBottom', !isFullyRevealed);\n                }\n                else if (isDragged === 'bottom') {\n                    domNode.classList.toggle('canMoveTop', !isFullyRevealed);\n                    domNode.classList.toggle('canMoveBottom', this._unchangedRegion.visibleLineCountBottom.read(reader) > 0);\n                }\n                else {\n                    domNode.classList.toggle('canMoveTop', false);\n                    domNode.classList.toggle('canMoveBottom', false);\n                }\n            }\n        }));\n        const editor = this._editor;\n        this._register(addDisposableListener(this._nodes.top, 'mousedown', e => {\n            if (e.button !== 0) {\n                return;\n            }\n            this._nodes.top.classList.toggle('dragging', true);\n            this._nodes.root.classList.toggle('dragging', true);\n            e.preventDefault();\n            const startTop = e.clientY;\n            let didMove = false;\n            const cur = this._unchangedRegion.visibleLineCountTop.get();\n            this._unchangedRegion.isDragged.set('top', undefined);\n            const window = getWindow(this._nodes.top);\n            const mouseMoveListener = addDisposableListener(window, 'mousemove', e => {\n                const currentTop = e.clientY;\n                const delta = currentTop - startTop;\n                didMove = didMove || Math.abs(delta) > 2;\n                const lineDelta = Math.round(delta / editor.getOption(67 /* EditorOption.lineHeight */));\n                const newVal = Math.max(0, Math.min(cur + lineDelta, this._unchangedRegion.getMaxVisibleLineCountTop()));\n                this._unchangedRegion.visibleLineCountTop.set(newVal, undefined);\n            });\n            const mouseUpListener = addDisposableListener(window, 'mouseup', e => {\n                if (!didMove) {\n                    this._unchangedRegion.showMoreAbove(this._options.hideUnchangedRegionsRevealLineCount.get(), undefined);\n                }\n                this._nodes.top.classList.toggle('dragging', false);\n                this._nodes.root.classList.toggle('dragging', false);\n                this._unchangedRegion.isDragged.set(undefined, undefined);\n                mouseMoveListener.dispose();\n                mouseUpListener.dispose();\n            });\n        }));\n        this._register(addDisposableListener(this._nodes.bottom, 'mousedown', e => {\n            if (e.button !== 0) {\n                return;\n            }\n            this._nodes.bottom.classList.toggle('dragging', true);\n            this._nodes.root.classList.toggle('dragging', true);\n            e.preventDefault();\n            const startTop = e.clientY;\n            let didMove = false;\n            const cur = this._unchangedRegion.visibleLineCountBottom.get();\n            this._unchangedRegion.isDragged.set('bottom', undefined);\n            const window = getWindow(this._nodes.bottom);\n            const mouseMoveListener = addDisposableListener(window, 'mousemove', e => {\n                const currentTop = e.clientY;\n                const delta = currentTop - startTop;\n                didMove = didMove || Math.abs(delta) > 2;\n                const lineDelta = Math.round(delta / editor.getOption(67 /* EditorOption.lineHeight */));\n                const newVal = Math.max(0, Math.min(cur - lineDelta, this._unchangedRegion.getMaxVisibleLineCountBottom()));\n                const top = this._unchangedRegionRange.endLineNumberExclusive > editor.getModel().getLineCount()\n                    ? editor.getContentHeight()\n                    : editor.getTopForLineNumber(this._unchangedRegionRange.endLineNumberExclusive);\n                this._unchangedRegion.visibleLineCountBottom.set(newVal, undefined);\n                const top2 = this._unchangedRegionRange.endLineNumberExclusive > editor.getModel().getLineCount()\n                    ? editor.getContentHeight()\n                    : editor.getTopForLineNumber(this._unchangedRegionRange.endLineNumberExclusive);\n                editor.setScrollTop(editor.getScrollTop() + (top2 - top));\n            });\n            const mouseUpListener = addDisposableListener(window, 'mouseup', e => {\n                this._unchangedRegion.isDragged.set(undefined, undefined);\n                if (!didMove) {\n                    const top = editor.getTopForLineNumber(this._unchangedRegionRange.endLineNumberExclusive);\n                    this._unchangedRegion.showMoreBelow(this._options.hideUnchangedRegionsRevealLineCount.get(), undefined);\n                    const top2 = editor.getTopForLineNumber(this._unchangedRegionRange.endLineNumberExclusive);\n                    editor.setScrollTop(editor.getScrollTop() + (top2 - top));\n                }\n                this._nodes.bottom.classList.toggle('dragging', false);\n                this._nodes.root.classList.toggle('dragging', false);\n                mouseMoveListener.dispose();\n                mouseUpListener.dispose();\n            });\n        }));\n        this._register(autorun(reader => {\n            /** @description update labels */\n            const children = [];\n            if (!this._hide) {\n                const lineCount = _unchangedRegion.getHiddenModifiedRange(reader).length;\n                const linesHiddenText = localize('hiddenLines', '{0} hidden lines', lineCount);\n                const span = $('span', { title: localize('diff.hiddenLines.expandAll', 'Double click to unfold') }, linesHiddenText);\n                span.addEventListener('dblclick', e => {\n                    if (e.button !== 0) {\n                        return;\n                    }\n                    e.preventDefault();\n                    this._unchangedRegion.showAll(undefined);\n                });\n                children.push(span);\n                const range = this._unchangedRegion.getHiddenModifiedRange(reader);\n                const items = this._modifiedOutlineSource.getBreadcrumbItems(range, reader);\n                if (items.length > 0) {\n                    children.push($('span', undefined, '\\u00a0\\u00a0|\\u00a0\\u00a0'));\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i];\n                        const icon = SymbolKinds.toIcon(item.kind);\n                        const divItem = h('div.breadcrumb-item', {\n                            style: { display: 'flex', alignItems: 'center' },\n                        }, [\n                            renderIcon(icon),\n                            '\\u00a0',\n                            item.name,\n                            ...(i === items.length - 1\n                                ? []\n                                : [renderIcon(Codicon.chevronRight)])\n                        ]).root;\n                        children.push(divItem);\n                        divItem.onclick = () => {\n                            this._revealModifiedHiddenLine(item.startLineNumber);\n                        };\n                    }\n                }\n            }\n            reset(this._nodes.others, ...children);\n        }));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar OverviewRulerFeature_1;\nimport { EventType, addDisposableListener, addStandardDisposableListener, h } from '../../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { ScrollbarState } from '../../../../../base/browser/ui/scrollbar/scrollbarState.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent, observableSignalFromEvent } from '../../../../../base/common/observable.js';\nimport { appendRemoveOnDispose } from '../utils.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { OverviewRulerZone } from '../../../../common/viewModel/overviewZoneManager.js';\nimport { defaultInsertColor, defaultRemoveColor, diffInserted, diffOverviewRulerInserted, diffOverviewRulerRemoved, diffRemoved } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nlet OverviewRulerFeature = class OverviewRulerFeature extends Disposable {\n    static { OverviewRulerFeature_1 = this; }\n    static { this.ONE_OVERVIEW_WIDTH = 15; }\n    static { this.ENTIRE_DIFF_OVERVIEW_WIDTH = this.ONE_OVERVIEW_WIDTH * 2; }\n    constructor(_editors, _rootElement, _diffModel, _rootWidth, _rootHeight, _modifiedEditorLayoutInfo, _themeService) {\n        super();\n        this._editors = _editors;\n        this._rootElement = _rootElement;\n        this._diffModel = _diffModel;\n        this._rootWidth = _rootWidth;\n        this._rootHeight = _rootHeight;\n        this._modifiedEditorLayoutInfo = _modifiedEditorLayoutInfo;\n        this._themeService = _themeService;\n        this.width = OverviewRulerFeature_1.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        const currentColorTheme = observableFromEvent(this._themeService.onDidColorThemeChange, () => this._themeService.getColorTheme());\n        const currentColors = derived(reader => {\n            /** @description colors */\n            const theme = currentColorTheme.read(reader);\n            const insertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n            const removeColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n            return { insertColor, removeColor };\n        });\n        const viewportDomElement = createFastDomNode(document.createElement('div'));\n        viewportDomElement.setClassName('diffViewport');\n        viewportDomElement.setPosition('absolute');\n        const diffOverviewRoot = h('div.diffOverview', {\n            style: { position: 'absolute', top: '0px', width: OverviewRulerFeature_1.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px' }\n        }).root;\n        this._register(appendRemoveOnDispose(diffOverviewRoot, viewportDomElement.domNode));\n        this._register(addStandardDisposableListener(diffOverviewRoot, EventType.POINTER_DOWN, (e) => {\n            this._editors.modified.delegateVerticalScrollbarPointerDown(e);\n        }));\n        this._register(addDisposableListener(diffOverviewRoot, EventType.MOUSE_WHEEL, (e) => {\n            this._editors.modified.delegateScrollFromMouseWheelEvent(e);\n        }, { passive: false }));\n        this._register(appendRemoveOnDispose(this._rootElement, diffOverviewRoot));\n        this._register(autorunWithStore((reader, store) => {\n            /** @description recreate overview rules when model changes */\n            const m = this._diffModel.read(reader);\n            const originalOverviewRuler = this._editors.original.createOverviewRuler('original diffOverviewRuler');\n            if (originalOverviewRuler) {\n                store.add(originalOverviewRuler);\n                store.add(appendRemoveOnDispose(diffOverviewRoot, originalOverviewRuler.getDomNode()));\n            }\n            const modifiedOverviewRuler = this._editors.modified.createOverviewRuler('modified diffOverviewRuler');\n            if (modifiedOverviewRuler) {\n                store.add(modifiedOverviewRuler);\n                store.add(appendRemoveOnDispose(diffOverviewRoot, modifiedOverviewRuler.getDomNode()));\n            }\n            if (!originalOverviewRuler || !modifiedOverviewRuler) {\n                // probably no model\n                return;\n            }\n            const origViewZonesChanged = observableSignalFromEvent('viewZoneChanged', this._editors.original.onDidChangeViewZones);\n            const modViewZonesChanged = observableSignalFromEvent('viewZoneChanged', this._editors.modified.onDidChangeViewZones);\n            const origHiddenRangesChanged = observableSignalFromEvent('hiddenRangesChanged', this._editors.original.onDidChangeHiddenAreas);\n            const modHiddenRangesChanged = observableSignalFromEvent('hiddenRangesChanged', this._editors.modified.onDidChangeHiddenAreas);\n            store.add(autorun(reader => {\n                /** @description set overview ruler zones */\n                origViewZonesChanged.read(reader);\n                modViewZonesChanged.read(reader);\n                origHiddenRangesChanged.read(reader);\n                modHiddenRangesChanged.read(reader);\n                const colors = currentColors.read(reader);\n                const diff = m?.diff.read(reader)?.mappings;\n                function createZones(ranges, color, editor) {\n                    const vm = editor._getViewModel();\n                    if (!vm) {\n                        return [];\n                    }\n                    return ranges\n                        .filter(d => d.length > 0)\n                        .map(r => {\n                        const start = vm.coordinatesConverter.convertModelPositionToViewPosition(new Position(r.startLineNumber, 1));\n                        const end = vm.coordinatesConverter.convertModelPositionToViewPosition(new Position(r.endLineNumberExclusive, 1));\n                        // By computing the lineCount, we won't ask the view model later for the bottom vertical position.\n                        // (The view model will take into account the alignment viewzones, which will give\n                        // modifications and deletetions always the same height.)\n                        const lineCount = end.lineNumber - start.lineNumber;\n                        return new OverviewRulerZone(start.lineNumber, end.lineNumber, lineCount, color.toString());\n                    });\n                }\n                const originalZones = createZones((diff || []).map(d => d.lineRangeMapping.original), colors.removeColor, this._editors.original);\n                const modifiedZones = createZones((diff || []).map(d => d.lineRangeMapping.modified), colors.insertColor, this._editors.modified);\n                originalOverviewRuler?.setZones(originalZones);\n                modifiedOverviewRuler?.setZones(modifiedZones);\n            }));\n            store.add(autorun(reader => {\n                /** @description layout overview ruler */\n                const height = this._rootHeight.read(reader);\n                const width = this._rootWidth.read(reader);\n                const layoutInfo = this._modifiedEditorLayoutInfo.read(reader);\n                if (layoutInfo) {\n                    const freeSpace = OverviewRulerFeature_1.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * OverviewRulerFeature_1.ONE_OVERVIEW_WIDTH;\n                    originalOverviewRuler.setLayout({\n                        top: 0,\n                        height: height,\n                        right: freeSpace + OverviewRulerFeature_1.ONE_OVERVIEW_WIDTH,\n                        width: OverviewRulerFeature_1.ONE_OVERVIEW_WIDTH,\n                    });\n                    modifiedOverviewRuler.setLayout({\n                        top: 0,\n                        height: height,\n                        right: 0,\n                        width: OverviewRulerFeature_1.ONE_OVERVIEW_WIDTH,\n                    });\n                    const scrollTop = this._editors.modifiedScrollTop.read(reader);\n                    const scrollHeight = this._editors.modifiedScrollHeight.read(reader);\n                    const scrollBarOptions = this._editors.modified.getOption(104 /* EditorOption.scrollbar */);\n                    const state = new ScrollbarState(scrollBarOptions.verticalHasArrows ? scrollBarOptions.arrowSize : 0, scrollBarOptions.verticalScrollbarSize, 0, layoutInfo.height, scrollHeight, scrollTop);\n                    viewportDomElement.setTop(state.getSliderPosition());\n                    viewportDomElement.setHeight(state.getSliderSize());\n                }\n                else {\n                    viewportDomElement.setTop(0);\n                    viewportDomElement.setHeight(0);\n                }\n                diffOverviewRoot.style.height = height + 'px';\n                diffOverviewRoot.style.left = (width - OverviewRulerFeature_1.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n                viewportDomElement.setWidth(OverviewRulerFeature_1.ENTIRE_DIFF_OVERVIEW_WIDTH);\n            }));\n        }));\n    }\n};\nOverviewRulerFeature = OverviewRulerFeature_1 = __decorate([\n    __param(6, IThemeService)\n], OverviewRulerFeature);\nexport { OverviewRulerFeature };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { addDisposableListener, h, EventType } from '../../../../../base/browser/dom.js';\nimport { renderIcon } from '../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, derived } from '../../../../../base/common/observable.js';\nimport { LineRange, LineRangeSet } from '../../../../common/core/lineRange.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { LineRangeMapping } from '../../../../common/diff/rangeMapping.js';\nimport { GlyphMarginLane } from '../../../../common/model.js';\nimport { localize } from '../../../../../nls.js';\nconst emptyArr = [];\nexport class RevertButtonsFeature extends Disposable {\n    constructor(_editors, _diffModel, _options, _widget) {\n        super();\n        this._editors = _editors;\n        this._diffModel = _diffModel;\n        this._options = _options;\n        this._widget = _widget;\n        this._selectedDiffs = derived(this, (reader) => {\n            /** @description selectedDiffs */\n            const model = this._diffModel.read(reader);\n            const diff = model?.diff.read(reader);\n            // Return `emptyArr` because it is a constant. [] is always a new array and would trigger a change.\n            if (!diff) {\n                return emptyArr;\n            }\n            const selections = this._editors.modifiedSelections.read(reader);\n            if (selections.every(s => s.isEmpty())) {\n                return emptyArr;\n            }\n            const selectedLineNumbers = new LineRangeSet(selections.map(s => LineRange.fromRangeInclusive(s)));\n            const selectedMappings = diff.mappings.filter(m => m.lineRangeMapping.innerChanges && selectedLineNumbers.intersects(m.lineRangeMapping.modified));\n            const result = selectedMappings.map(mapping => ({\n                mapping,\n                rangeMappings: mapping.lineRangeMapping.innerChanges.filter(c => selections.some(s => Range.areIntersecting(c.modifiedRange, s)))\n            }));\n            if (result.length === 0 || result.every(r => r.rangeMappings.length === 0)) {\n                return emptyArr;\n            }\n            return result;\n        });\n        this._register(autorunWithStore((reader, store) => {\n            if (!this._options.shouldRenderOldRevertArrows.read(reader)) {\n                return;\n            }\n            const model = this._diffModel.read(reader);\n            const diff = model?.diff.read(reader);\n            if (!model || !diff) {\n                return;\n            }\n            if (model.movedTextToCompare.read(reader)) {\n                return;\n            }\n            const glyphWidgetsModified = [];\n            const selectedDiffs = this._selectedDiffs.read(reader);\n            const selectedDiffsSet = new Set(selectedDiffs.map(d => d.mapping));\n            if (selectedDiffs.length > 0) {\n                // The button to revert the selection\n                const selections = this._editors.modifiedSelections.read(reader);\n                const btn = store.add(new RevertButton(selections[selections.length - 1].positionLineNumber, this._widget, selectedDiffs.flatMap(d => d.rangeMappings), true));\n                this._editors.modified.addGlyphMarginWidget(btn);\n                glyphWidgetsModified.push(btn);\n            }\n            for (const m of diff.mappings) {\n                if (selectedDiffsSet.has(m)) {\n                    continue;\n                }\n                if (!m.lineRangeMapping.modified.isEmpty && m.lineRangeMapping.innerChanges) {\n                    const btn = store.add(new RevertButton(m.lineRangeMapping.modified.startLineNumber, this._widget, m.lineRangeMapping, false));\n                    this._editors.modified.addGlyphMarginWidget(btn);\n                    glyphWidgetsModified.push(btn);\n                }\n            }\n            store.add(toDisposable(() => {\n                for (const w of glyphWidgetsModified) {\n                    this._editors.modified.removeGlyphMarginWidget(w);\n                }\n            }));\n        }));\n    }\n}\nexport class RevertButton extends Disposable {\n    static { this.counter = 0; }\n    getId() { return this._id; }\n    constructor(_lineNumber, _widget, _diffs, _revertSelection) {\n        super();\n        this._lineNumber = _lineNumber;\n        this._widget = _widget;\n        this._diffs = _diffs;\n        this._revertSelection = _revertSelection;\n        this._id = `revertButton${RevertButton.counter++}`;\n        this._domNode = h('div.revertButton', {\n            title: this._revertSelection\n                ? localize('revertSelectedChanges', 'Revert Selected Changes')\n                : localize('revertChange', 'Revert Change')\n        }, [renderIcon(Codicon.arrowRight)]).root;\n        this._register(addDisposableListener(this._domNode, EventType.MOUSE_DOWN, e => {\n            // don't prevent context menu from showing up\n            if (e.button !== 2) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        }));\n        this._register(addDisposableListener(this._domNode, EventType.MOUSE_UP, e => {\n            e.stopPropagation();\n            e.preventDefault();\n        }));\n        this._register(addDisposableListener(this._domNode, EventType.CLICK, (e) => {\n            if (this._diffs instanceof LineRangeMapping) {\n                this._widget.revert(this._diffs);\n            }\n            else {\n                this._widget.revertRangeMappings(this._diffs);\n            }\n            e.stopPropagation();\n            e.preventDefault();\n        }));\n    }\n    /**\n     * Get the dom node of the glyph widget.\n     */\n    getDomNode() {\n        return this._domNode;\n    }\n    /**\n     * Get the placement of the glyph widget.\n     */\n    getPosition() {\n        return {\n            lane: GlyphMarginLane.Right,\n            range: {\n                startColumn: 1,\n                startLineNumber: this._lineNumber,\n                endColumn: 1,\n                endLineNumber: this._lineNumber,\n            },\n            zIndex: 10001,\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class DelegatingEditor extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._id = ++DelegatingEditor.idCounter;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        // #endregion\n    }\n    static { this.idCounter = 0; }\n    getId() { return this.getEditorType() + ':v2:' + this._id; }\n    // #region editorBrowser.IDiffEditor: Delegating to modified Editor\n    getVisibleColumnFromPosition(position) {\n        return this._targetEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._targetEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._targetEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._targetEditor.getSelection();\n    }\n    getSelections() {\n        return this._targetEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._targetEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._targetEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._targetEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* ScrollType.Smooth */) {\n        this._targetEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._targetEditor.getSupportedActions();\n    }\n    focus() {\n        this._targetEditor.focus();\n    }\n    trigger(source, handlerId, payload) {\n        this._targetEditor.trigger(source, handlerId, payload);\n    }\n    createDecorationsCollection(decorations) {\n        return this._targetEditor.createDecorationsCollection(decorations);\n    }\n    changeDecorations(callback) {\n        return this._targetEditor.changeDecorations(callback);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { derived, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { derivedConstOnceDefined } from '../../../../base/common/observableInternal/utils.js';\nimport { allowsTrueInlineDiffRendering } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { diffEditorDefaultOptions } from '../../../common/config/diffEditor.js';\nimport { clampedFloat, clampedInt, boolean as validateBooleanOption, stringSet as validateStringSetOption } from '../../../common/config/editorOptions.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nlet DiffEditorOptions = class DiffEditorOptions {\n    get editorOptions() { return this._options; }\n    constructor(options, _accessibilityService) {\n        this._accessibilityService = _accessibilityService;\n        this._diffEditorWidth = observableValue(this, 0);\n        this._screenReaderMode = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n        this.couldShowInlineViewBecauseOfSize = derived(this, reader => this._options.read(reader).renderSideBySide && this._diffEditorWidth.read(reader) <= this._options.read(reader).renderSideBySideInlineBreakpoint);\n        this.renderOverviewRuler = derived(this, reader => this._options.read(reader).renderOverviewRuler);\n        this.renderSideBySide = derived(this, reader => {\n            if (this.compactMode.read(reader)) {\n                if (this.shouldRenderInlineViewInSmartMode.read(reader)) {\n                    return false;\n                }\n            }\n            return this._options.read(reader).renderSideBySide\n                && !(this._options.read(reader).useInlineViewWhenSpaceIsLimited && this.couldShowInlineViewBecauseOfSize.read(reader) && !this._screenReaderMode.read(reader));\n        });\n        this.readOnly = derived(this, reader => this._options.read(reader).readOnly);\n        this.shouldRenderOldRevertArrows = derived(this, reader => {\n            if (!this._options.read(reader).renderMarginRevertIcon) {\n                return false;\n            }\n            if (!this.renderSideBySide.read(reader)) {\n                return false;\n            }\n            if (this.readOnly.read(reader)) {\n                return false;\n            }\n            if (this.shouldRenderGutterMenu.read(reader)) {\n                return false;\n            }\n            return true;\n        });\n        this.shouldRenderGutterMenu = derived(this, reader => this._options.read(reader).renderGutterMenu);\n        this.renderIndicators = derived(this, reader => this._options.read(reader).renderIndicators);\n        this.enableSplitViewResizing = derived(this, reader => this._options.read(reader).enableSplitViewResizing);\n        this.splitViewDefaultRatio = derived(this, reader => this._options.read(reader).splitViewDefaultRatio);\n        this.ignoreTrimWhitespace = derived(this, reader => this._options.read(reader).ignoreTrimWhitespace);\n        this.maxComputationTimeMs = derived(this, reader => this._options.read(reader).maxComputationTime);\n        this.showMoves = derived(this, reader => this._options.read(reader).experimental.showMoves && this.renderSideBySide.read(reader));\n        this.isInEmbeddedEditor = derived(this, reader => this._options.read(reader).isInEmbeddedEditor);\n        this.diffWordWrap = derived(this, reader => this._options.read(reader).diffWordWrap);\n        this.originalEditable = derived(this, reader => this._options.read(reader).originalEditable);\n        this.diffCodeLens = derived(this, reader => this._options.read(reader).diffCodeLens);\n        this.accessibilityVerbose = derived(this, reader => this._options.read(reader).accessibilityVerbose);\n        this.diffAlgorithm = derived(this, reader => this._options.read(reader).diffAlgorithm);\n        this.showEmptyDecorations = derived(this, reader => this._options.read(reader).experimental.showEmptyDecorations);\n        this.onlyShowAccessibleDiffViewer = derived(this, reader => this._options.read(reader).onlyShowAccessibleDiffViewer);\n        this.compactMode = derived(this, reader => this._options.read(reader).compactMode);\n        this.trueInlineDiffRenderingEnabled = derived(this, reader => this._options.read(reader).experimental.useTrueInlineView);\n        this.useTrueInlineDiffRendering = derived(this, reader => !this.renderSideBySide.read(reader) && this.trueInlineDiffRenderingEnabled.read(reader));\n        this.hideUnchangedRegions = derived(this, reader => this._options.read(reader).hideUnchangedRegions.enabled);\n        this.hideUnchangedRegionsRevealLineCount = derived(this, reader => this._options.read(reader).hideUnchangedRegions.revealLineCount);\n        this.hideUnchangedRegionsContextLineCount = derived(this, reader => this._options.read(reader).hideUnchangedRegions.contextLineCount);\n        this.hideUnchangedRegionsMinimumLineCount = derived(this, reader => this._options.read(reader).hideUnchangedRegions.minimumLineCount);\n        this._model = observableValue(this, undefined);\n        this.shouldRenderInlineViewInSmartMode = this._model\n            .map(this, model => derivedConstOnceDefined(this, reader => {\n            const diffs = model?.diff.read(reader);\n            return diffs ? isSimpleDiff(diffs, this.trueInlineDiffRenderingEnabled.read(reader)) : undefined;\n        }))\n            .flatten()\n            .map(this, v => !!v);\n        this.inlineViewHideOriginalLineNumbers = this.compactMode;\n        const optionsCopy = { ...options, ...validateDiffEditorOptions(options, diffEditorDefaultOptions) };\n        this._options = observableValue(this, optionsCopy);\n    }\n    updateOptions(changedOptions) {\n        const newDiffEditorOptions = validateDiffEditorOptions(changedOptions, this._options.get());\n        const newOptions = { ...this._options.get(), ...changedOptions, ...newDiffEditorOptions };\n        this._options.set(newOptions, undefined, { changedOptions: changedOptions });\n    }\n    setWidth(width) {\n        this._diffEditorWidth.set(width, undefined);\n    }\n    setModel(model) {\n        this._model.set(model, undefined);\n    }\n};\nDiffEditorOptions = __decorate([\n    __param(1, IAccessibilityService)\n], DiffEditorOptions);\nexport { DiffEditorOptions };\nfunction isSimpleDiff(diff, supportsTrueDiffRendering) {\n    return diff.mappings.every(m => isInsertion(m.lineRangeMapping) || isDeletion(m.lineRangeMapping) || (supportsTrueDiffRendering && allowsTrueInlineDiffRendering(m.lineRangeMapping)));\n}\nfunction isInsertion(mapping) {\n    return mapping.original.length === 0;\n}\nfunction isDeletion(mapping) {\n    return mapping.modified.length === 0;\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        splitViewDefaultRatio: clampedFloat(options.splitViewDefaultRatio, 0.5, 0.1, 0.9),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        renderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateStringSetOption(options.diffWordWrap, defaults.diffWordWrap, ['off', 'on', 'inherit']),\n        diffAlgorithm: validateStringSetOption(options.diffAlgorithm, defaults.diffAlgorithm, ['legacy', 'advanced'], { 'smart': 'legacy', 'experimental': 'advanced' }),\n        accessibilityVerbose: validateBooleanOption(options.accessibilityVerbose, defaults.accessibilityVerbose),\n        experimental: {\n            showMoves: validateBooleanOption(options.experimental?.showMoves, defaults.experimental.showMoves),\n            showEmptyDecorations: validateBooleanOption(options.experimental?.showEmptyDecorations, defaults.experimental.showEmptyDecorations),\n            useTrueInlineView: validateBooleanOption(options.experimental?.useTrueInlineView, defaults.experimental.useTrueInlineView),\n        },\n        hideUnchangedRegions: {\n            enabled: validateBooleanOption(options.hideUnchangedRegions?.enabled ?? options.experimental?.collapseUnchangedRegions, defaults.hideUnchangedRegions.enabled),\n            contextLineCount: clampedInt(options.hideUnchangedRegions?.contextLineCount, defaults.hideUnchangedRegions.contextLineCount, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n            minimumLineCount: clampedInt(options.hideUnchangedRegions?.minimumLineCount, defaults.hideUnchangedRegions.minimumLineCount, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n            revealLineCount: clampedInt(options.hideUnchangedRegions?.revealLineCount, defaults.hideUnchangedRegions.revealLineCount, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        },\n        isInEmbeddedEditor: validateBooleanOption(options.isInEmbeddedEditor, defaults.isInEmbeddedEditor),\n        onlyShowAccessibleDiffViewer: validateBooleanOption(options.onlyShowAccessibleDiffViewer, defaults.onlyShowAccessibleDiffViewer),\n        renderSideBySideInlineBreakpoint: clampedInt(options.renderSideBySideInlineBreakpoint, defaults.renderSideBySideInlineBreakpoint, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        useInlineViewWhenSpaceIsLimited: validateBooleanOption(options.useInlineViewWhenSpaceIsLimited, defaults.useInlineViewWhenSpaceIsLimited),\n        renderGutterMenu: validateBooleanOption(options.renderGutterMenu, defaults.renderGutterMenu),\n        compactMode: validateBooleanOption(options.compactMode, defaults.compactMode),\n    };\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, disposableObservableValue, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, RefCounted, applyStyle, applyViewZones, translatePosition } from './utils.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n    get onDidContentSizeChange() { return this._editors.onDidContentSizeChange; }\n    constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n        super();\n        this._domElement = _domElement;\n        this._parentContextKeyService = _parentContextKeyService;\n        this._parentInstantiationService = _parentInstantiationService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._editorProgressService = _editorProgressService;\n        this.elements = h('div.monaco-diff-editor.side-by-side', { style: { position: 'relative', height: '100%' } }, [\n            h('div.editor.original@original', { style: { position: 'absolute', height: '100%', } }),\n            h('div.editor.modified@modified', { style: { position: 'absolute', height: '100%', } }),\n            h('div.accessibleDiffViewer@accessibleDiffViewer', { style: { position: 'absolute', height: '100%' } }),\n        ]);\n        this._diffModelSrc = this._register(disposableObservableValue(this, undefined));\n        this._diffModel = derived(this, reader => this._diffModelSrc.read(reader)?.object);\n        this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n        this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n        this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._boundarySashes = observableValue(this, undefined);\n        this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n        this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader)\n            ? true\n            : this._accessibleDiffViewerShouldBeVisible.read(reader));\n        this._movedBlocksLinesPart = observableValue(this, undefined);\n        this._layoutInfo = derived(this, reader => {\n            const fullWidth = this._rootSizeObserver.width.read(reader);\n            const fullHeight = this._rootSizeObserver.height.read(reader);\n            if (this._rootSizeObserver.automaticLayout) {\n                this.elements.root.style.height = '100%';\n            }\n            else {\n                this.elements.root.style.height = fullHeight + 'px';\n            }\n            const sash = this._sash.read(reader);\n            const gutter = this._gutter.read(reader);\n            const gutterWidth = gutter?.width.read(reader) ?? 0;\n            const overviewRulerPartWidth = this._overviewRulerPart.read(reader)?.width ?? 0;\n            let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n            const sideBySide = !!sash;\n            if (sideBySide) {\n                const sashLeft = sash.sashLeft.read(reader);\n                const movedBlocksLinesWidth = this._movedBlocksLinesPart.read(reader)?.width.read(reader) ?? 0;\n                originalLeft = 0;\n                originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n                gutterLeft = sashLeft - gutterWidth;\n                modifiedLeft = sashLeft;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            else {\n                gutterLeft = 0;\n                const shouldHideOriginalLineNumbers = this._options.inlineViewHideOriginalLineNumbers.read(reader);\n                originalLeft = gutterWidth;\n                if (shouldHideOriginalLineNumbers) {\n                    originalWidth = 0;\n                }\n                else {\n                    originalWidth = Math.max(5, this._editors.originalObs.layoutInfoDecorationsLeft.read(reader));\n                }\n                modifiedLeft = gutterWidth + originalWidth;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            this.elements.original.style.left = originalLeft + 'px';\n            this.elements.original.style.width = originalWidth + 'px';\n            this._editors.original.layout({ width: originalWidth, height: fullHeight }, true);\n            gutter?.layout(gutterLeft);\n            this.elements.modified.style.left = modifiedLeft + 'px';\n            this.elements.modified.style.width = modifiedWidth + 'px';\n            this._editors.modified.layout({ width: modifiedWidth, height: fullHeight }, true);\n            return {\n                modifiedEditor: this._editors.modified.getLayoutInfo(),\n                originalEditor: this._editors.original.getLayoutInfo(),\n            };\n        });\n        this._diffValue = this._diffModel.map((m, r) => m?.diff.read(r));\n        this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n        codeEditorService.willCreateDiffEditor();\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._domElement.appendChild(this.elements.root);\n        this._register(toDisposable(() => this.elements.root.remove()));\n        this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n        this._rootSizeObserver.setAutomaticLayout(options.automaticLayout ?? false);\n        this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n        this._register(autorun(reader => {\n            this._options.setWidth(this._rootSizeObserver.width.read(reader));\n        }));\n        this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n        this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => !!this._diffModel.read(reader)?.movedTextToCompare.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => (this._diffModel.read(reader)?.diff.read(reader)?.mappings.length ?? 0) > 0));\n        this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.original.uri.toString() ?? ''));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.modified.uri.toString() ?? ''));\n        this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader)\n            ? undefined\n            : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n        const dimensions = {\n            height: this._rootSizeObserver.height,\n            width: this._rootSizeObserver.width.map((w, reader) => w - (this._overviewRulerPart.read(reader)?.width ?? 0)),\n        };\n        this._sashLayout = new SashLayout(this._options, dimensions);\n        this._sash = derivedDisposable(this, reader => {\n            const showSash = this._options.renderSideBySide.read(reader);\n            this.elements.root.classList.toggle('side-by-side', showSash);\n            return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n        }).recomputeInitiallyAndOnChange(this._store);\n        const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */ this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n        derivedDisposable(this, reader => /** @description DiffEditorDecorations */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n        const origViewZoneIdsToIgnore = new Set();\n        const modViewZoneIdsToIgnore = new Set();\n        let isUpdatingViewZones = false;\n        const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n        const originalViewZones = derived(this, (reader) => {\n            const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n            const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n            return orig.concat(orig2);\n        });\n        const modifiedViewZones = derived(this, (reader) => {\n            const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n            const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n            return mod.concat(mod2);\n        });\n        this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n            isUpdatingViewZones = isUpdatingOrigViewZones;\n        }, origViewZoneIdsToIgnore));\n        let scrollState;\n        this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n            isUpdatingViewZones = isUpdatingModViewZones;\n            if (isUpdatingViewZones) {\n                scrollState = StableEditorScrollState.capture(this._editors.modified);\n            }\n            else {\n                scrollState?.restore(this._editors.modified);\n                scrollState = undefined;\n            }\n        }, modViewZoneIdsToIgnore));\n        this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => m?.diff.read(r)?.mappings.map(m => m.lineRangeMapping)), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n        const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n        this._register(applyStyle(this.elements.modified, { visibility }));\n        this._register(applyStyle(this.elements.original, { visibility }));\n        this._createDiffEditorContributions();\n        codeEditorService.addDiffEditor(this);\n        this._gutter = derivedDisposable(this, reader => {\n            return this._options.shouldRenderGutterMenu.read(reader)\n                ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes)\n                : undefined;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n        derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */ new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n            // This is to break the layout info <-> moved blocks lines part dependency cycle.\n            this._movedBlocksLinesPart.set(value, undefined);\n        });\n        this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n        this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n        const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n            /** @isInitializingDiff isDiffUpToDate */\n            if (!m) {\n                return undefined;\n            }\n            return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description DiffEditorWidgetHelper.ShowProgress */\n            if (isInitializingDiff.read(reader) === true) {\n                const r = this._editorProgressService.show(true, 1000);\n                store.add(toDisposable(() => r.done()));\n            }\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            const model = this._diffModel.read(reader);\n            if (!model) {\n                return;\n            }\n            for (const m of [model.model.original, model.model.modified]) {\n                store.add(m.onWillDispose(e => {\n                    onUnexpectedError(new BugIndicatingError('TextModel got disposed before DiffEditorWidget model got reset'));\n                    this.setModel(null);\n                }));\n            }\n        }));\n        this._register(autorun(reader => {\n            this._options.setModel(this._diffModel.read(reader));\n        }));\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n        return editor;\n    }\n    _createDiffEditorContributions() {\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(this._instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n    }\n    get _targetEditor() { return this._editors.modified; }\n    getEditorType() { return EditorType.IDiffEditor; }\n    layout(dimension) {\n        this._rootSizeObserver.observe(dimension);\n    }\n    hasTextFocus() { return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus(); }\n    saveViewState() {\n        const originalViewState = this._editors.original.saveViewState();\n        const modifiedViewState = this._editors.modified.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState,\n            modelState: this._diffModel.get()?.serializeState(),\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._editors.original.restoreViewState(diffEditorState.original);\n            this._editors.modified.restoreViewState(diffEditorState.modified);\n            if (diffEditorState.modelState) {\n                this._diffModel.get()?.restoreSerializedState(diffEditorState.modelState);\n            }\n        }\n    }\n    handleInitialized() {\n        this._editors.original.handleInitialized();\n        this._editors.modified.handleInitialized();\n    }\n    createViewModel(model) {\n        return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n    }\n    getModel() { return this._diffModel.get()?.model ?? null; }\n    setModel(model) {\n        const vm = !model ? null\n            : ('model' in model) ? RefCounted.create(model).createNewRef(this)\n                : RefCounted.create(this.createViewModel(model), this);\n        this.setDiffModel(vm);\n    }\n    setDiffModel(viewModel, tx) {\n        const currentModel = this._diffModel.get();\n        if (!viewModel && currentModel) {\n            // Transitioning from a model to no-model\n            this._accessibleDiffViewer.get().close();\n        }\n        if (this._diffModel.get() !== viewModel?.object) {\n            subtransaction(tx, tx => {\n                const vm = viewModel?.object;\n                /** @description DiffEditorWidget.setModel */\n                observableFromEvent.batchEventsGlobally(tx, () => {\n                    this._editors.original.setModel(vm ? vm.model.original : null);\n                    this._editors.modified.setModel(vm ? vm.model.modified : null);\n                });\n                const prevValueRef = this._diffModelSrc.get()?.createNewRef(this);\n                this._diffModelSrc.set(viewModel?.createNewRef(this), tx);\n                setTimeout(() => {\n                    // async, so that this runs after the transaction finished.\n                    // TODO: use the transaction to schedule disposal\n                    prevValueRef?.dispose();\n                }, 0);\n            });\n        }\n    }\n    /**\n     * @param changedOptions Only has values for top-level options that have actually changed.\n     */\n    updateOptions(changedOptions) {\n        this._options.updateOptions(changedOptions);\n    }\n    getContainerDomNode() { return this._domElement; }\n    getOriginalEditor() { return this._editors.original; }\n    getModifiedEditor() { return this._editors.modified; }\n    /**\n     * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n     */\n    getLineChanges() {\n        const diffState = this._diffModel.get()?.diff.get();\n        if (!diffState) {\n            return null;\n        }\n        return toLineChanges(diffState);\n    }\n    revert(diff) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        this._editors.modified.executeEdits('diffEditor', [\n            {\n                range: diff.modified.toExclusiveRange(),\n                text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n            }\n        ]);\n    }\n    revertRangeMappings(diffs) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        const changes = diffs.map(c => ({\n            range: c.modifiedRange,\n            text: model.model.original.getValueInRange(c.originalRange)\n        }));\n        this._editors.modified.executeEdits('diffEditor', changes);\n    }\n    _goTo(diff) {\n        this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n        this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n    }\n    goToDiff(target) {\n        const diffs = this._diffModel.get()?.diff.get()?.mappings;\n        if (!diffs || diffs.length === 0) {\n            return;\n        }\n        const curLineNumber = this._editors.modified.getPosition().lineNumber;\n        let diff;\n        if (target === 'next') {\n            diff = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber) ?? diffs[0];\n        }\n        else {\n            diff = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber) ?? diffs[diffs.length - 1];\n        }\n        this._goTo(diff);\n        if (diff.lineRangeMapping.modified.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff.lineRangeMapping.original.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.goToDiff' });\n        }\n    }\n    revealFirstDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        // wait for the diff computation to finish\n        this.waitForDiff().then(() => {\n            const diffs = diffModel.diff.get()?.mappings;\n            if (!diffs || diffs.length === 0) {\n                return;\n            }\n            this._goTo(diffs[0]);\n        });\n    }\n    accessibleDiffViewerNext() { this._accessibleDiffViewer.get().next(); }\n    accessibleDiffViewerPrev() { this._accessibleDiffViewer.get().prev(); }\n    async waitForDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        await diffModel.waitForDiff();\n    }\n    mapToOtherSide() {\n        const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n        const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n        const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n        let destinationSelection;\n        const sourceSelection = source.getSelection();\n        if (sourceSelection) {\n            const mappings = this._diffModel.get()?.diff.get()?.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n            if (mappings) {\n                const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n                const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n                destinationSelection = Range.plusRange(newRange1, newRange2);\n            }\n        }\n        return { destination, destinationSelection };\n    }\n    switchSide() {\n        const { destination, destinationSelection } = this.mapToOtherSide();\n        destination.focus();\n        if (destinationSelection) {\n            destination.setSelection(destinationSelection);\n        }\n    }\n    exitCompareMove() {\n        const model = this._diffModel.get();\n        if (!model) {\n            return;\n        }\n        model.movedTextToCompare.set(undefined, undefined);\n    }\n    collapseAllUnchangedRegions() {\n        const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.collapseAll(tx);\n            }\n        });\n    }\n    showAllUnchangedRegions() {\n        const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.showAll(tx);\n            }\n        });\n    }\n    _handleCursorPositionChange(e, isModifiedEditor) {\n        if (e?.reason === 3 /* CursorChangeReason.Explicit */) {\n            const diff = this._diffModel.get()?.diff.get()?.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n            if (diff?.lineRangeMapping.modified.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff?.lineRangeMapping.original.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.cursorPositionChanged' });\n            }\n        }\n    }\n};\nDiffEditorWidget = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, IAccessibilitySignalService),\n    __param(7, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n    return state.mappings.map(x => {\n        const m = x.lineRangeMapping;\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let innerChanges = m.innerChanges;\n        if (m.original.isEmpty) {\n            // Insertion\n            originalStartLineNumber = m.original.startLineNumber - 1;\n            originalEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            originalStartLineNumber = m.original.startLineNumber;\n            originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n        }\n        if (m.modified.isEmpty) {\n            // Deletion\n            modifiedStartLineNumber = m.modified.startLineNumber - 1;\n            modifiedEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            modifiedStartLineNumber = m.modified.startLineNumber;\n            modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n        }\n        return {\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges: innerChanges?.map(m => ({\n                originalStartLineNumber: m.originalRange.startLineNumber,\n                originalStartColumn: m.originalRange.startColumn,\n                originalEndLineNumber: m.originalRange.endLineNumber,\n                originalEndColumn: m.originalRange.endColumn,\n                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                modifiedStartColumn: m.modifiedRange.startColumn,\n                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                modifiedEndColumn: m.modifiedRange.endColumn,\n            }))\n        };\n    });\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h } from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived } from '../../../../base/common/observable.js';\nimport { globalTransaction, observableValue } from '../../../../base/common/observableInternal/base.js';\nimport { observableCodeEditor } from '../../observableCodeEditor.js';\nimport { DiffEditorWidget } from '../diffEditor/diffEditorWidget.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuWorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ActionRunnerWithContext } from './utils.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nexport class TemplateData {\n    constructor(viewModel, deltaScrollVertical) {\n        this.viewModel = viewModel;\n        this.deltaScrollVertical = deltaScrollVertical;\n    }\n    getId() {\n        return this.viewModel;\n    }\n}\nlet DiffEditorItemTemplate = class DiffEditorItemTemplate extends Disposable {\n    constructor(_container, _overflowWidgetsDomNode, _workbenchUIElementFactory, _instantiationService, _parentContextKeyService) {\n        super();\n        this._container = _container;\n        this._overflowWidgetsDomNode = _overflowWidgetsDomNode;\n        this._workbenchUIElementFactory = _workbenchUIElementFactory;\n        this._instantiationService = _instantiationService;\n        this._viewModel = observableValue(this, undefined);\n        this._collapsed = derived(this, reader => this._viewModel.read(reader)?.collapsed.read(reader));\n        this._editorContentHeight = observableValue(this, 500);\n        this.contentHeight = derived(this, reader => {\n            const h = this._collapsed.read(reader) ? 0 : this._editorContentHeight.read(reader);\n            return h + this._outerEditorHeight;\n        });\n        this._modifiedContentWidth = observableValue(this, 0);\n        this._modifiedWidth = observableValue(this, 0);\n        this._originalContentWidth = observableValue(this, 0);\n        this._originalWidth = observableValue(this, 0);\n        this.maxScroll = derived(this, reader => {\n            const scroll1 = this._modifiedContentWidth.read(reader) - this._modifiedWidth.read(reader);\n            const scroll2 = this._originalContentWidth.read(reader) - this._originalWidth.read(reader);\n            if (scroll1 > scroll2) {\n                return { maxScroll: scroll1, width: this._modifiedWidth.read(reader) };\n            }\n            else {\n                return { maxScroll: scroll2, width: this._originalWidth.read(reader) };\n            }\n        });\n        this._elements = h('div.multiDiffEntry', [\n            h('div.header@header', [\n                h('div.header-content', [\n                    h('div.collapse-button@collapseButton'),\n                    h('div.file-path', [\n                        h('div.title.modified.show-file-icons@primaryPath', []),\n                        h('div.status.deleted@status', ['R']),\n                        h('div.title.original.show-file-icons@secondaryPath', []),\n                    ]),\n                    h('div.actions@actions'),\n                ]),\n            ]),\n            h('div.editorParent', [\n                h('div.editorContainer@editor'),\n            ])\n        ]);\n        this.editor = this._register(this._instantiationService.createInstance(DiffEditorWidget, this._elements.editor, {\n            overflowWidgetsDomNode: this._overflowWidgetsDomNode,\n        }, {}));\n        this.isModifedFocused = observableCodeEditor(this.editor.getModifiedEditor()).isFocused;\n        this.isOriginalFocused = observableCodeEditor(this.editor.getOriginalEditor()).isFocused;\n        this.isFocused = derived(this, reader => this.isModifedFocused.read(reader) || this.isOriginalFocused.read(reader));\n        this._resourceLabel = this._workbenchUIElementFactory.createResourceLabel\n            ? this._register(this._workbenchUIElementFactory.createResourceLabel(this._elements.primaryPath))\n            : undefined;\n        this._resourceLabel2 = this._workbenchUIElementFactory.createResourceLabel\n            ? this._register(this._workbenchUIElementFactory.createResourceLabel(this._elements.secondaryPath))\n            : undefined;\n        this._dataStore = this._register(new DisposableStore());\n        this._headerHeight = 40;\n        this._lastScrollTop = -1;\n        this._isSettingScrollTop = false;\n        const btn = new Button(this._elements.collapseButton, {});\n        this._register(autorun(reader => {\n            btn.element.className = '';\n            btn.icon = this._collapsed.read(reader) ? Codicon.chevronRight : Codicon.chevronDown;\n        }));\n        this._register(btn.onDidClick(() => {\n            this._viewModel.get()?.collapsed.set(!this._collapsed.get(), undefined);\n        }));\n        this._register(autorun(reader => {\n            this._elements.editor.style.display = this._collapsed.read(reader) ? 'none' : 'block';\n        }));\n        this._register(this.editor.getModifiedEditor().onDidLayoutChange(e => {\n            const width = this.editor.getModifiedEditor().getLayoutInfo().contentWidth;\n            this._modifiedWidth.set(width, undefined);\n        }));\n        this._register(this.editor.getOriginalEditor().onDidLayoutChange(e => {\n            const width = this.editor.getOriginalEditor().getLayoutInfo().contentWidth;\n            this._originalWidth.set(width, undefined);\n        }));\n        this._register(this.editor.onDidContentSizeChange(e => {\n            globalTransaction(tx => {\n                this._editorContentHeight.set(e.contentHeight, tx);\n                this._modifiedContentWidth.set(this.editor.getModifiedEditor().getContentWidth(), tx);\n                this._originalContentWidth.set(this.editor.getOriginalEditor().getContentWidth(), tx);\n            });\n        }));\n        this._register(this.editor.getOriginalEditor().onDidScrollChange(e => {\n            if (this._isSettingScrollTop) {\n                return;\n            }\n            if (!e.scrollTopChanged || !this._data) {\n                return;\n            }\n            const delta = e.scrollTop - this._lastScrollTop;\n            this._data.deltaScrollVertical(delta);\n        }));\n        this._register(autorun(reader => {\n            const isActive = this._viewModel.read(reader)?.isActive.read(reader);\n            this._elements.root.classList.toggle('active', isActive);\n        }));\n        this._container.appendChild(this._elements.root);\n        this._outerEditorHeight = this._headerHeight;\n        this._contextKeyService = this._register(_parentContextKeyService.createScoped(this._elements.actions));\n        const instantiationService = this._register(this._instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._register(instantiationService.createInstance(MenuWorkbenchToolBar, this._elements.actions, MenuId.MultiDiffEditorFileToolbar, {\n            actionRunner: this._register(new ActionRunnerWithContext(() => (this._viewModel.get()?.modifiedUri))),\n            menuOptions: {\n                shouldForwardArgs: true,\n            },\n            toolbarOptions: { primaryGroup: g => g.startsWith('navigation') },\n            actionViewItemProvider: (action, options) => createActionViewItem(instantiationService, action, options),\n        }));\n    }\n    setScrollLeft(left) {\n        if (this._modifiedContentWidth.get() - this._modifiedWidth.get() > this._originalContentWidth.get() - this._originalWidth.get()) {\n            this.editor.getModifiedEditor().setScrollLeft(left);\n        }\n        else {\n            this.editor.getOriginalEditor().setScrollLeft(left);\n        }\n    }\n    setData(data) {\n        this._data = data;\n        function updateOptions(options) {\n            return {\n                ...options,\n                scrollBeyondLastLine: false,\n                hideUnchangedRegions: {\n                    enabled: true,\n                },\n                scrollbar: {\n                    vertical: 'hidden',\n                    horizontal: 'hidden',\n                    handleMouseWheel: false,\n                    useShadows: false,\n                },\n                renderOverviewRuler: false,\n                fixedOverflowWidgets: true,\n                overviewRulerBorder: false,\n            };\n        }\n        if (!data) {\n            globalTransaction(tx => {\n                this._viewModel.set(undefined, tx);\n                this.editor.setDiffModel(null, tx);\n                this._dataStore.clear();\n            });\n            return;\n        }\n        const value = data.viewModel.documentDiffItem;\n        globalTransaction(tx => {\n            this._resourceLabel?.setUri(data.viewModel.modifiedUri ?? data.viewModel.originalUri, { strikethrough: data.viewModel.modifiedUri === undefined });\n            let isRenamed = false;\n            let isDeleted = false;\n            let isAdded = false;\n            let flag = '';\n            if (data.viewModel.modifiedUri && data.viewModel.originalUri && data.viewModel.modifiedUri.path !== data.viewModel.originalUri.path) {\n                flag = 'R';\n                isRenamed = true;\n            }\n            else if (!data.viewModel.modifiedUri) {\n                flag = 'D';\n                isDeleted = true;\n            }\n            else if (!data.viewModel.originalUri) {\n                flag = 'A';\n                isAdded = true;\n            }\n            this._elements.status.classList.toggle('renamed', isRenamed);\n            this._elements.status.classList.toggle('deleted', isDeleted);\n            this._elements.status.classList.toggle('added', isAdded);\n            this._elements.status.innerText = flag;\n            this._resourceLabel2?.setUri(isRenamed ? data.viewModel.originalUri : undefined, { strikethrough: true });\n            this._dataStore.clear();\n            this._viewModel.set(data.viewModel, tx);\n            this.editor.setDiffModel(data.viewModel.diffEditorViewModelRef, tx);\n            this.editor.updateOptions(updateOptions(value.options ?? {}));\n        });\n        if (value.onOptionsDidChange) {\n            this._dataStore.add(value.onOptionsDidChange(() => {\n                this.editor.updateOptions(updateOptions(value.options ?? {}));\n            }));\n        }\n        data.viewModel.isAlive.recomputeInitiallyAndOnChange(this._dataStore, value => {\n            if (!value) {\n                this.setData(undefined);\n            }\n        });\n        if (data.viewModel.documentDiffItem.contextKeys) {\n            for (const [key, value] of Object.entries(data.viewModel.documentDiffItem.contextKeys)) {\n                this._contextKeyService.createKey(key, value);\n            }\n        }\n    }\n    render(verticalRange, width, editorScroll, viewPort) {\n        this._elements.root.style.visibility = 'visible';\n        this._elements.root.style.top = `${verticalRange.start}px`;\n        this._elements.root.style.height = `${verticalRange.length}px`;\n        this._elements.root.style.width = `${width}px`;\n        this._elements.root.style.position = 'absolute';\n        // For sticky scroll\n        const maxDelta = verticalRange.length - this._headerHeight;\n        const delta = Math.max(0, Math.min(viewPort.start - verticalRange.start, maxDelta));\n        this._elements.header.style.transform = `translateY(${delta}px)`;\n        globalTransaction(tx => {\n            this.editor.layout({\n                width: width - 2 * 8 - 2 * 1,\n                height: verticalRange.length - this._outerEditorHeight,\n            });\n        });\n        try {\n            this._isSettingScrollTop = true;\n            this._lastScrollTop = editorScroll;\n            this.editor.getOriginalEditor().setScrollTop(editorScroll);\n        }\n        finally {\n            this._isSettingScrollTop = false;\n        }\n        this._elements.header.classList.toggle('shadow', delta > 0 || editorScroll > 0);\n        this._elements.header.classList.toggle('collapsed', delta === maxDelta);\n    }\n    hide() {\n        this._elements.root.style.top = `-100000px`;\n        this._elements.root.style.visibility = 'hidden'; // Some editor parts are still visible\n    }\n};\nDiffEditorItemTemplate = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, IContextKeyService)\n], DiffEditorItemTemplate);\nexport { DiffEditorItemTemplate };\n","export class ObjectPool {\n    constructor(_create) {\n        this._create = _create;\n        this._unused = new Set();\n        this._used = new Set();\n        this._itemData = new Map();\n    }\n    getUnusedObj(data) {\n        let obj;\n        if (this._unused.size === 0) {\n            obj = this._create(data);\n            this._itemData.set(obj, data);\n        }\n        else {\n            const values = [...this._unused.values()];\n            obj = values.find(obj => this._itemData.get(obj).getId() === data.getId()) ?? values[0];\n            this._unused.delete(obj);\n            this._itemData.set(obj, data);\n            obj.setData(data);\n        }\n        this._used.add(obj);\n        return {\n            object: obj,\n            dispose: () => {\n                this._used.delete(obj);\n                if (this._unused.size > 5) {\n                    obj.dispose();\n                }\n                else {\n                    this._unused.add(obj);\n                }\n            }\n        };\n    }\n    dispose() {\n        for (const obj of this._used) {\n            obj.dispose();\n        }\n        for (const obj of this._unused) {\n            obj.dispose();\n        }\n        this._used.clear();\n        this._unused.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { getWindow, h, scheduleAtNextAnimationFrame } from '../../../../base/browser/dom.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMax } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, globalTransaction, transaction } from '../../../../base/common/observableInternal/base.js';\nimport { Scrollable } from '../../../../base/common/scrollable.js';\nimport './style.css';\nimport { ObservableElementSizeObserver } from '../diffEditor/utils.js';\nimport { OffsetRange } from '../../../common/core/offsetRange.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { DiffEditorItemTemplate, TemplateData } from './diffEditorItemTemplate.js';\nimport { ObjectPool } from './objectPool.js';\nimport { localize } from '../../../../nls.js';\nlet MultiDiffEditorWidgetImpl = class MultiDiffEditorWidgetImpl extends Disposable {\n    constructor(_element, _dimension, _viewModel, _workbenchUIElementFactory, _parentContextKeyService, _parentInstantiationService) {\n        super();\n        this._element = _element;\n        this._dimension = _dimension;\n        this._viewModel = _viewModel;\n        this._workbenchUIElementFactory = _workbenchUIElementFactory;\n        this._parentContextKeyService = _parentContextKeyService;\n        this._parentInstantiationService = _parentInstantiationService;\n        this._scrollableElements = h('div.scrollContent', [\n            h('div@content', {\n                style: {\n                    overflow: 'hidden',\n                }\n            }),\n            h('div.monaco-editor@overflowWidgetsDomNode', {}),\n        ]);\n        this._scrollable = this._register(new Scrollable({\n            forceIntegerValues: false,\n            scheduleAtNextAnimationFrame: (cb) => scheduleAtNextAnimationFrame(getWindow(this._element), cb),\n            smoothScrollDuration: 100,\n        }));\n        this._scrollableElement = this._register(new SmoothScrollableElement(this._scrollableElements.root, {\n            vertical: 1 /* ScrollbarVisibility.Auto */,\n            horizontal: 1 /* ScrollbarVisibility.Auto */,\n            useShadows: false,\n        }, this._scrollable));\n        this._elements = h('div.monaco-component.multiDiffEditor', {}, [\n            h('div', {}, [this._scrollableElement.getDomNode()]),\n            h('div.placeholder@placeholder', {}, [h('div', [localize('noChangedFiles', 'No Changed Files')])]),\n        ]);\n        this._sizeObserver = this._register(new ObservableElementSizeObserver(this._element, undefined));\n        this._objectPool = this._register(new ObjectPool((data) => {\n            const template = this._instantiationService.createInstance(DiffEditorItemTemplate, this._scrollableElements.content, this._scrollableElements.overflowWidgetsDomNode, this._workbenchUIElementFactory);\n            template.setData(data);\n            return template;\n        }));\n        this.scrollTop = observableFromEvent(this, this._scrollableElement.onScroll, () => /** @description scrollTop */ this._scrollableElement.getScrollPosition().scrollTop);\n        this.scrollLeft = observableFromEvent(this, this._scrollableElement.onScroll, () => /** @description scrollLeft */ this._scrollableElement.getScrollPosition().scrollLeft);\n        this._viewItemsInfo = derivedWithStore(this, (reader, store) => {\n            const vm = this._viewModel.read(reader);\n            if (!vm) {\n                return { items: [], getItem: _d => { throw new BugIndicatingError(); } };\n            }\n            const viewModels = vm.items.read(reader);\n            const map = new Map();\n            const items = viewModels.map(d => {\n                const item = store.add(new VirtualizedViewItem(d, this._objectPool, this.scrollLeft, delta => {\n                    this._scrollableElement.setScrollPosition({ scrollTop: this._scrollableElement.getScrollPosition().scrollTop + delta });\n                }));\n                const data = this._lastDocStates?.[item.getKey()];\n                if (data) {\n                    transaction(tx => {\n                        item.setViewState(data, tx);\n                    });\n                }\n                map.set(d, item);\n                return item;\n            });\n            return { items, getItem: d => map.get(d) };\n        });\n        this._viewItems = this._viewItemsInfo.map(this, items => items.items);\n        this._spaceBetweenPx = 0;\n        this._totalHeight = this._viewItems.map(this, (items, reader) => items.reduce((r, i) => r + i.contentHeight.read(reader) + this._spaceBetweenPx, 0));\n        this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._element));\n        this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        /** This accounts for documents that are not loaded yet. */\n        this._lastDocStates = {};\n        this._contextKeyService.createKey(EditorContextKeys.inMultiDiffEditor.key, true);\n        this._register(autorunWithStore((reader, store) => {\n            const viewModel = this._viewModel.read(reader);\n            if (viewModel && viewModel.contextKeys) {\n                for (const [key, value] of Object.entries(viewModel.contextKeys)) {\n                    const contextKey = this._contextKeyService.createKey(key, undefined);\n                    contextKey.set(value);\n                    store.add(toDisposable(() => contextKey.reset()));\n                }\n            }\n        }));\n        const ctxAllCollapsed = this._parentContextKeyService.createKey(EditorContextKeys.multiDiffEditorAllCollapsed.key, false);\n        this._register(autorun((reader) => {\n            const viewModel = this._viewModel.read(reader);\n            if (viewModel) {\n                const allCollapsed = viewModel.items.read(reader).every(item => item.collapsed.read(reader));\n                ctxAllCollapsed.set(allCollapsed);\n            }\n        }));\n        this._register(autorun((reader) => {\n            /** @description Update widget dimension */\n            const dimension = this._dimension.read(reader);\n            this._sizeObserver.observe(dimension);\n        }));\n        this._register(autorun((reader) => {\n            /** @description Update widget dimension */\n            const items = this._viewItems.read(reader);\n            this._elements.placeholder.classList.toggle('visible', items.length === 0);\n        }));\n        this._scrollableElements.content.style.position = 'relative';\n        this._register(autorun((reader) => {\n            /** @description Update scroll dimensions */\n            const height = this._sizeObserver.height.read(reader);\n            this._scrollableElements.root.style.height = `${height}px`;\n            const totalHeight = this._totalHeight.read(reader);\n            this._scrollableElements.content.style.height = `${totalHeight}px`;\n            const width = this._sizeObserver.width.read(reader);\n            let scrollWidth = width;\n            const viewItems = this._viewItems.read(reader);\n            const max = findFirstMax(viewItems, compareBy(i => i.maxScroll.read(reader).maxScroll, numberComparator));\n            if (max) {\n                const maxScroll = max.maxScroll.read(reader);\n                scrollWidth = width + maxScroll.maxScroll;\n            }\n            this._scrollableElement.setScrollDimensions({\n                width: width,\n                height: height,\n                scrollHeight: totalHeight,\n                scrollWidth,\n            });\n        }));\n        _element.replaceChildren(this._elements.root);\n        this._register(toDisposable(() => {\n            _element.replaceChildren();\n        }));\n        this._register(this._register(autorun(reader => {\n            /** @description Render all */\n            globalTransaction(tx => {\n                this.render(reader);\n            });\n        })));\n    }\n    render(reader) {\n        const scrollTop = this.scrollTop.read(reader);\n        let contentScrollOffsetToScrollOffset = 0;\n        let itemHeightSumBefore = 0;\n        let itemContentHeightSumBefore = 0;\n        const viewPortHeight = this._sizeObserver.height.read(reader);\n        const contentViewPort = OffsetRange.ofStartAndLength(scrollTop, viewPortHeight);\n        const width = this._sizeObserver.width.read(reader);\n        for (const v of this._viewItems.read(reader)) {\n            const itemContentHeight = v.contentHeight.read(reader);\n            const itemHeight = Math.min(itemContentHeight, viewPortHeight);\n            const itemRange = OffsetRange.ofStartAndLength(itemHeightSumBefore, itemHeight);\n            const itemContentRange = OffsetRange.ofStartAndLength(itemContentHeightSumBefore, itemContentHeight);\n            if (itemContentRange.isBefore(contentViewPort)) {\n                contentScrollOffsetToScrollOffset -= itemContentHeight - itemHeight;\n                v.hide();\n            }\n            else if (itemContentRange.isAfter(contentViewPort)) {\n                v.hide();\n            }\n            else {\n                const scroll = Math.max(0, Math.min(contentViewPort.start - itemContentRange.start, itemContentHeight - itemHeight));\n                contentScrollOffsetToScrollOffset -= scroll;\n                const viewPort = OffsetRange.ofStartAndLength(scrollTop + contentScrollOffsetToScrollOffset, viewPortHeight);\n                v.render(itemRange, scroll, width, viewPort);\n            }\n            itemHeightSumBefore += itemHeight + this._spaceBetweenPx;\n            itemContentHeightSumBefore += itemContentHeight + this._spaceBetweenPx;\n        }\n        this._scrollableElements.content.style.transform = `translateY(${-(scrollTop + contentScrollOffsetToScrollOffset)}px)`;\n    }\n};\nMultiDiffEditorWidgetImpl = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, IInstantiationService)\n], MultiDiffEditorWidgetImpl);\nexport { MultiDiffEditorWidgetImpl };\nclass VirtualizedViewItem extends Disposable {\n    constructor(viewModel, _objectPool, _scrollLeft, _deltaScrollVertical) {\n        super();\n        this.viewModel = viewModel;\n        this._objectPool = _objectPool;\n        this._scrollLeft = _scrollLeft;\n        this._deltaScrollVertical = _deltaScrollVertical;\n        this._templateRef = this._register(disposableObservableValue(this, undefined));\n        this.contentHeight = derived(this, reader => this._templateRef.read(reader)?.object.contentHeight?.read(reader) ?? this.viewModel.lastTemplateData.read(reader).contentHeight);\n        this.maxScroll = derived(this, reader => this._templateRef.read(reader)?.object.maxScroll.read(reader) ?? { maxScroll: 0, scrollWidth: 0 });\n        this.template = derived(this, reader => this._templateRef.read(reader)?.object);\n        this._isHidden = observableValue(this, false);\n        this._isFocused = derived(this, reader => this.template.read(reader)?.isFocused.read(reader) ?? false);\n        this.viewModel.setIsFocused(this._isFocused, undefined);\n        this._register(autorun((reader) => {\n            const scrollLeft = this._scrollLeft.read(reader);\n            this._templateRef.read(reader)?.object.setScrollLeft(scrollLeft);\n        }));\n        this._register(autorun(reader => {\n            const ref = this._templateRef.read(reader);\n            if (!ref) {\n                return;\n            }\n            const isHidden = this._isHidden.read(reader);\n            if (!isHidden) {\n                return;\n            }\n            const isFocused = ref.object.isFocused.read(reader);\n            if (isFocused) {\n                return;\n            }\n            this._clear();\n        }));\n    }\n    dispose() {\n        this._clear();\n        super.dispose();\n    }\n    toString() {\n        return `VirtualViewItem(${this.viewModel.documentDiffItem.modified?.uri.toString()})`;\n    }\n    getKey() {\n        return this.viewModel.getKey();\n    }\n    setViewState(viewState, tx) {\n        this.viewModel.collapsed.set(viewState.collapsed, tx);\n        this._updateTemplateData(tx);\n        const data = this.viewModel.lastTemplateData.get();\n        const selections = viewState.selections?.map(Selection.liftSelection);\n        this.viewModel.lastTemplateData.set({\n            ...data,\n            selections,\n        }, tx);\n        const ref = this._templateRef.get();\n        if (ref) {\n            if (selections) {\n                ref.object.editor.setSelections(selections);\n            }\n        }\n    }\n    _updateTemplateData(tx) {\n        const ref = this._templateRef.get();\n        if (!ref) {\n            return;\n        }\n        this.viewModel.lastTemplateData.set({\n            contentHeight: ref.object.contentHeight.get(),\n            selections: ref.object.editor.getSelections() ?? undefined,\n        }, tx);\n    }\n    _clear() {\n        const ref = this._templateRef.get();\n        if (!ref) {\n            return;\n        }\n        transaction(tx => {\n            this._updateTemplateData(tx);\n            ref.object.hide();\n            this._templateRef.set(undefined, tx);\n        });\n    }\n    hide() {\n        this._isHidden.set(true, undefined);\n    }\n    render(verticalSpace, offset, width, viewPort) {\n        this._isHidden.set(false, undefined);\n        let ref = this._templateRef.get();\n        if (!ref) {\n            ref = this._objectPool.getUnusedObj(new TemplateData(this.viewModel, this._deltaScrollVertical));\n            this._templateRef.set(ref, undefined);\n            const selections = this.viewModel.lastTemplateData.get().selections;\n            if (selections) {\n                ref.object.editor.setSelections(selections);\n            }\n        }\n        ref.object.render(verticalSpace, width, offset, viewPort);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../../nls.js';\nimport { registerColor, editorBackground } from '../../../../platform/theme/common/colorRegistry.js';\nexport const multiDiffEditorHeaderBackground = registerColor('multiDiffEditor.headerBackground', { dark: '#262626', light: 'tab.inactiveBackground', hcDark: 'tab.inactiveBackground', hcLight: 'tab.inactiveBackground', }, localize('multiDiffEditor.headerBackground', 'The background color of the diff editor\\'s header'));\nexport const multiDiffEditorBackground = registerColor('multiDiffEditor.background', editorBackground, localize('multiDiffEditor.background', 'The background color of the multi file diff editor'));\nexport const multiDiffEditorBorder = registerColor('multiDiffEditor.border', { dark: 'sideBarSectionHeader.border', light: '#cccccc', hcDark: 'sideBarSectionHeader.border', hcLight: '#cccccc', }, localize('multiDiffEditor.border', 'The border color of the multi file diff editor'));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { derivedWithStore, observableValue, recomputeInitiallyAndOnChange } from '../../../../base/common/observable.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { MultiDiffEditorWidgetImpl } from './multiDiffEditorWidgetImpl.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport './colors.js';\nimport { DiffEditorItemTemplate } from './diffEditorItemTemplate.js';\nlet MultiDiffEditorWidget = class MultiDiffEditorWidget extends Disposable {\n    constructor(_element, _workbenchUIElementFactory, _instantiationService) {\n        super();\n        this._element = _element;\n        this._workbenchUIElementFactory = _workbenchUIElementFactory;\n        this._instantiationService = _instantiationService;\n        this._dimension = observableValue(this, undefined);\n        this._viewModel = observableValue(this, undefined);\n        this._widgetImpl = derivedWithStore(this, (reader, store) => {\n            readHotReloadableExport(DiffEditorItemTemplate, reader);\n            return store.add(this._instantiationService.createInstance((readHotReloadableExport(MultiDiffEditorWidgetImpl, reader)), this._element, this._dimension, this._viewModel, this._workbenchUIElementFactory));\n        });\n        this._register(recomputeInitiallyAndOnChange(this._widgetImpl));\n    }\n};\nMultiDiffEditorWidget = __decorate([\n    __param(2, IInstantiationService)\n], MultiDiffEditorWidget);\nexport { MultiDiffEditorWidget };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorCommon from '../common/editorCommon.js';\n/**\n *@internal\n */\nexport function isCodeEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.ICodeEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isDiffEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.IDiffEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isCompositeEditor(thing) {\n    return !!thing\n        && typeof thing === 'object'\n        && typeof thing.onDidChangeActiveEditor === 'function';\n}\n/**\n *@internal\n */\nexport function getCodeEditor(thing) {\n    if (isCodeEditor(thing)) {\n        return thing;\n    }\n    if (isDiffEditor(thing)) {\n        return thing.getModifiedEditor();\n    }\n    if (isCompositeEditor(thing) && isCodeEditor(thing.activeCodeEditor)) {\n        return thing.activeCodeEditor;\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getActiveElement } from '../../../../base/browser/dom.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { EditorAction2 } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { DiffEditorWidget } from './diffEditorWidget.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize2 } from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport './registrations.contribution.js';\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleCollapseUnchangedRegions',\n            title: localize2('toggleCollapseUnchangedRegions', 'Toggle Collapse Unchanged Regions'),\n            icon: Codicon.map,\n            toggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            menu: {\n                when: ContextKeyExpr.has('isInDiffEditor'),\n                id: MenuId.EditorTitle,\n                order: 22,\n                group: 'navigation',\n            },\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.hideUnchangedRegions.enabled');\n        configurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n    }\n}\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleShowMovedCodeBlocks',\n            title: localize2('toggleShowMovedCodeBlocks', 'Toggle Show Moved Code Blocks'),\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.experimental.showMoves');\n        configurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n    }\n}\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleUseInlineViewWhenSpaceIsLimited',\n            title: localize2('toggleUseInlineViewWhenSpaceIsLimited', 'Toggle Use Inline View When Space Is Limited'),\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.useInlineViewWhenSpaceIsLimited');\n        configurationService.updateValue('diffEditor.useInlineViewWhenSpaceIsLimited', newValue);\n    }\n}\nconst diffEditorCategory = localize2('diffEditor', \"Diff Editor\");\nexport class SwitchSide extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.switchSide',\n            title: localize2('switchSide', 'Switch Side'),\n            icon: Codicon.arrowSwap,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, arg) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            if (arg && arg.dryRun) {\n                return { destinationSelection: diffEditor.mapToOtherSide().destinationSelection };\n            }\n            else {\n                diffEditor.switchSide();\n            }\n        }\n        return undefined;\n    }\n}\nexport class ExitCompareMove extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.exitCompareMove',\n            title: localize2('exitCompareMove', 'Exit Compare Move'),\n            icon: Codicon.close,\n            precondition: EditorContextKeys.comparingMovedCode,\n            f1: false,\n            category: diffEditorCategory,\n            keybinding: {\n                weight: 10000,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.exitCompareMove();\n        }\n    }\n}\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.collapseAllUnchangedRegions',\n            title: localize2('collapseAllUnchangedRegions', 'Collapse All Unchanged Regions'),\n            icon: Codicon.fold,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.collapseAllUnchangedRegions();\n        }\n    }\n}\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.showAllUnchangedRegions',\n            title: localize2('showAllUnchangedRegions', 'Show All Unchanged Regions'),\n            icon: Codicon.unfold,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.showAllUnchangedRegions();\n        }\n    }\n}\nexport class RevertHunkOrSelection extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.revert',\n            title: localize2('revert', 'Revert'),\n            f1: false,\n            category: diffEditorCategory,\n        });\n    }\n    run(accessor, arg) {\n        const diffEditor = findDiffEditor(accessor, arg.originalUri, arg.modifiedUri);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.revertRangeMappings(arg.mapping.innerChanges ?? []);\n        }\n        return undefined;\n    }\n}\nconst accessibleDiffViewerCategory = localize2('accessibleDiffViewer', \"Accessible Diff Viewer\");\nexport class AccessibleDiffViewerNext extends Action2 {\n    static { this.id = 'editor.action.accessibleDiffViewer.next'; }\n    constructor() {\n        super({\n            id: AccessibleDiffViewerNext.id,\n            title: localize2('editor.action.accessibleDiffViewer.next', 'Go to Next Difference'),\n            category: accessibleDiffViewerCategory,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            keybinding: {\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            f1: true,\n        });\n    }\n    run(accessor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor?.accessibleDiffViewerNext();\n    }\n}\nexport class AccessibleDiffViewerPrev extends Action2 {\n    static { this.id = 'editor.action.accessibleDiffViewer.prev'; }\n    constructor() {\n        super({\n            id: AccessibleDiffViewerPrev.id,\n            title: localize2('editor.action.accessibleDiffViewer.prev', 'Go to Previous Difference'),\n            category: accessibleDiffViewerCategory,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            keybinding: {\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            f1: true,\n        });\n    }\n    run(accessor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor?.accessibleDiffViewerPrev();\n    }\n}\nexport function findDiffEditor(accessor, originalUri, modifiedUri) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    return diffEditors.find(diffEditor => {\n        const modified = diffEditor.getModifiedEditor();\n        const original = diffEditor.getOriginalEditor();\n        return modified && modified.getModel()?.uri.toString() === modifiedUri.toString()\n            && original && original.getModel()?.uri.toString() === originalUri.toString();\n    }) || null;\n}\nexport function findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeElement = getActiveElement();\n    if (activeElement) {\n        for (const d of diffEditors) {\n            const container = d.getContainerDomNode();\n            if (isElementOrParentOf(container, activeElement)) {\n                return d;\n            }\n        }\n    }\n    return null;\n}\nfunction isElementOrParentOf(elementOrParent, element) {\n    let e = element;\n    while (e) {\n        if (e === elementOrParent) {\n            return true;\n        }\n        e = e.parentElement;\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { AccessibleDiffViewerNext, AccessibleDiffViewerPrev, CollapseAllUnchangedRegions, ExitCompareMove, RevertHunkOrSelection, ShowAllUnchangedRegions, SwitchSide, ToggleCollapseUnchangedRegions, ToggleShowMovedCodeBlocks, ToggleUseInlineViewWhenSpaceIsLimited } from './commands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyEqualsExpr, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport './registrations.contribution.js';\nregisterAction2(ToggleCollapseUnchangedRegions);\nregisterAction2(ToggleShowMovedCodeBlocks);\nregisterAction2(ToggleUseInlineViewWhenSpaceIsLimited);\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: new ToggleUseInlineViewWhenSpaceIsLimited().desc.id,\n        title: localize('useInlineViewWhenSpaceIsLimited', \"Use Inline View When Space Is Limited\"),\n        toggled: ContextKeyExpr.has('config.diffEditor.useInlineViewWhenSpaceIsLimited'),\n        precondition: ContextKeyExpr.has('isInDiffEditor'),\n    },\n    order: 11,\n    group: '1_diff',\n    when: ContextKeyExpr.and(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, ContextKeyExpr.has('isInDiffEditor')),\n});\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: new ToggleShowMovedCodeBlocks().desc.id,\n        title: localize('showMoves', \"Show Moved Code Blocks\"),\n        icon: Codicon.move,\n        toggled: ContextKeyEqualsExpr.create('config.diffEditor.experimental.showMoves', true),\n        precondition: ContextKeyExpr.has('isInDiffEditor'),\n    },\n    order: 10,\n    group: '1_diff',\n    when: ContextKeyExpr.has('isInDiffEditor'),\n});\nregisterAction2(RevertHunkOrSelection);\nfor (const ctx of [\n    { icon: Codicon.arrowRight, key: EditorContextKeys.diffEditorInlineMode.toNegated() },\n    { icon: Codicon.discard, key: EditorContextKeys.diffEditorInlineMode }\n]) {\n    MenuRegistry.appendMenuItem(MenuId.DiffEditorHunkToolbar, {\n        command: {\n            id: new RevertHunkOrSelection().desc.id,\n            title: localize('revertHunk', \"Revert Block\"),\n            icon: ctx.icon,\n        },\n        when: ContextKeyExpr.and(EditorContextKeys.diffEditorModifiedWritable, ctx.key),\n        order: 5,\n        group: 'primary',\n    });\n    MenuRegistry.appendMenuItem(MenuId.DiffEditorSelectionToolbar, {\n        command: {\n            id: new RevertHunkOrSelection().desc.id,\n            title: localize('revertSelection', \"Revert Selection\"),\n            icon: ctx.icon,\n        },\n        when: ContextKeyExpr.and(EditorContextKeys.diffEditorModifiedWritable, ctx.key),\n        order: 5,\n        group: 'primary',\n    });\n}\nregisterAction2(SwitchSide);\nregisterAction2(ExitCompareMove);\nregisterAction2(CollapseAllUnchangedRegions);\nregisterAction2(ShowAllUnchangedRegions);\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: AccessibleDiffViewerNext.id,\n        title: localize('Open Accessible Diff Viewer', \"Open Accessible Diff Viewer\"),\n        precondition: ContextKeyExpr.has('isInDiffEditor'),\n    },\n    order: 10,\n    group: '2_diff',\n    when: ContextKeyExpr.and(EditorContextKeys.accessibleDiffViewerVisible.negate(), ContextKeyExpr.has('isInDiffEditor')),\n});\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.next', AccessibleDiffViewerNext.id);\nregisterAction2(AccessibleDiffViewerNext);\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.prev', AccessibleDiffViewerPrev.id);\nregisterAction2(AccessibleDiffViewerPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n    const vsDataTransfer = new VSDataTransfer();\n    for (const item of dataTransfer.items) {\n        const type = item.type;\n        if (item.kind === 'string') {\n            const asStringValue = new Promise(resolve => item.getAsString(resolve));\n            vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n        }\n        else if (item.kind === 'file') {\n            const file = item.getAsFile();\n            if (file) {\n                vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n            }\n        }\n    }\n    return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n    const uri = file.path ? URI.parse(file.path) : undefined;\n    return createFileDataTransferItem(file.name, uri, async () => {\n        return new Uint8Array(await file.arrayBuffer());\n    });\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n    CodeDataTransfers.EDITORS,\n    CodeDataTransfers.FILES,\n    DataTransfers.RESOURCES,\n    DataTransfers.INTERNAL_URI_LIST,\n]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n    const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n    // Try to expose the internal uri-list type as the standard type\n    const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n    if (uriList) {\n        vsDataTransfer.replace(Mimes.uriList, uriList);\n    }\n    else {\n        if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n            // Otherwise, fallback to adding dragged resources to the uri list\n            const editorData = [];\n            for (const item of sourceDataTransfer.items) {\n                const file = item.getAsFile();\n                if (file) {\n                    const path = file.path;\n                    try {\n                        if (path) {\n                            editorData.push(URI.file(path).toString());\n                        }\n                        else {\n                            editorData.push(URI.parse(file.name, true).toString());\n                        }\n                    }\n                    catch {\n                        // Parsing failed. Leave out from list\n                    }\n                }\n            }\n            if (editorData.length) {\n                vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n            }\n        }\n    }\n    for (const internal of INTERNAL_DND_MIME_TYPES) {\n        vsDataTransfer.delete(internal);\n    }\n    return vsDataTransfer;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../../base/common/objects.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, codeEditorWidgetOptions, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super(domElement, { ...parentEditor.getRawOptions(), overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, ICommandService),\n    __param(7, IContextKeyService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IAccessibilityService),\n    __param(11, ILanguageConfigurationService),\n    __param(12, ILanguageFeaturesService)\n], EmbeddedCodeEditorWidget);\nexport { EmbeddedCodeEditorWidget };\n"],"names":["Disposable","Emitter","localize","assertType","URI","isNonEmptyArray","StopWatch","timeout","logOnceWebWorkerWarning","canceled","LinkedList","toDisposable","DisposableStore","onUnexpectedError","isMarkdownString","isMacintosh","isString","isFunction","CancellationTokenSource","TimeoutTimer","isObject","matchesScheme","Schemas","parse","normalizePath","ResourceMap","matchesSomeScheme","CancellationToken","deepClone","equals","RunOnceScheduler","isNative","isLinux","Lazy","commonPrefixLength","commonSuffixLength","MutableDisposable","Event","isHighSurrogate","Mimes","isIOS","isAndroid","isMobile","OS","IME","Color","isWindows","isUndefined","isNumber","isBoolean","BugIndicatingError","ArrayQueue","isDefined","toUint8","createSingleCallFunction","LRUCache","isFullWidthCharacter","getCharContainingOffset","firstNonWhitespaceIndex","lastNonWhitespaceIndex","assertIsDefined","DisposableMap","createEventDeliveryQueue","dispose","autorun","observableValue","autorunHandleChanges","autorunWithStore","autorunOpts","transaction","findLast","Codicon","ThemeIcon","derived","observableSignal","groupAdjacentBy","waitForState","softAssert","observableSignalFromEvent","readHotReloadableExport","observableFromEvent","derivedWithStore","recomputeInitiallyAndOnChange","constObservable","tieBreakComparators","findMaxIdx","Action","compareBy","numberComparator","booleanComparator","ActionRunner","derivedDisposable","derivedWithSetter","TransactionImpl","observableValueOpts","equalsIfDefined","itemsEquals","derivedOpts","autorunWithStoreHandleChanges","MarkdownString","derivedConstOnceDefined","disposableObservableValue","subtransaction","globalTransaction","Scrollable","findFirstMax","localize2","VSDataTransfer","createStringDataTransferItem","UriList","createFileDataTransferItem","mixin","createWebWorker","FontInfo","EditorFontLigatures","Position","IModelService","ITextModelService","ITextResourceConfigurationService","ILanguageConfigurationService","ILanguageFeaturesService","MovedText","LineRangeMapping","LineRange","DetailedLineRangeMapping","RangeMapping","Range","EditorWorkerHost","EditorSimpleWorker","WorkerTextModelSyncClient","tokenizeToString","ILanguageService","PLAINTEXT_LANGUAGE_ID","EDITOR_FONT_DEFAULTS","IMarkerDecorationsService","ComputeOptionsMemory","EditorZoom","BareFontInfo","editorOptionsRegistry","ConfigurationChangedEvent","ViewEventHandler","LineDecoration","LineRange$1","RenderLineInput","renderViewLine","DomPosition","AtomicTabMoveOperations","CursorColumns","Selection","editorLineNumbers","editorDimmedLineNumber","getMapForWordSeparators","EditorOptions","TokenizationRegistry","ColumnSelection","EditorContextKeys","CursorMoveCommands","CursorState","EnterOperation","TypeOperations","DeleteOperations","CursorMove","StringBuilder","editorLineHighlight","editorLineHighlightBorder","GlyphMarginLane","editorBracketPairGuideActiveBackground1","editorBracketPairGuideBackground1","editorBracketHighlightingForeground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideBackground2","editorBracketHighlightingForeground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideBackground3","editorBracketHighlightingForeground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideBackground4","editorBracketHighlightingForeground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideBackground5","editorBracketHighlightingForeground5","editorBracketPairGuideActiveBackground6","editorBracketPairGuideBackground6","editorBracketHighlightingForeground6","editorActiveIndentGuide1","editorIndentGuide1","editorActiveIndentGuide2","editorIndentGuide2","editorActiveIndentGuide3","editorIndentGuide3","editorActiveIndentGuide4","editorIndentGuide4","editorActiveIndentGuide5","editorIndentGuide5","editorActiveIndentGuide6","editorIndentGuide6","BracketPairGuidesClassNames","HorizontalGuidesState","IndentGuide","MinimapTokensColorTracker","ViewModelDecoration","RGBA8","EditorLayoutInfoComputer","MINIMAP_GUTTER_WIDTH","OverviewRulerDecorationsGroup","editorOverviewRulerBorder","editorCursorForeground","editorMultiCursorPrimaryForeground","editorMultiCursorSecondaryForeground","editorOverviewRulerBackground","OverviewZoneManager","TextEditorCursorStyle","editorCursorBackground","editorMultiCursorPrimaryBackground","editorMultiCursorSecondaryBackground","editorWhitespaces","ViewContext","ViewportData","LineInjectedText","ModelLineProjectionData","ModelDecorationOptions","InternalEditorAction","EditorType","WordOperations","filterValidationDecorations","ViewModel","MonospaceLineBreaksComputerFactory","editorUnnecessaryCodeOpacity","TextLength","IEditorWorkerService","TextEditInfo","LineRangeSet","combineTextEditInfos","DefaultLinesDiffComputer","optimizeSequenceDiffs","OffsetRange","OffsetRangeSet","TextModelText","TextEdit","SymbolKinds","OverviewRulerZone","boolean","clampedInt","stringSet","clampedFloat","diffEditorDefaultOptions","createDecorator","Registry","MenuId","ILogService","IContextKeyService","ContextKeyExpr","KeybindingsRegistry","CommandsRegistry","MenuRegistry","ITelemetryService","IInstantiationService","Action2","IThemeService","IOpenerService","IKeybindingService","IConfigurationService","IAccessibilityService","IContextMenuService","ILayoutService","registerThemingParticipant","ContextViewHandler","registerSingleton","IHoverService","editorHoverBorder","ICommandService","extractSelection","EditorOpenSource","asCssVariable","isHighContrast","getThemeTypeSelector","minimapBackground","minimapForegroundOpacity","editorForeground","minimapSelection","editorSelectionForeground","ServiceCollection","Severity","INotificationService","editorErrorForeground","editorWarningForeground","editorInfoForeground","editorHintForeground","registerColor","registerIcon","IMenuService","WorkbenchHoverDelegate","MenuWorkbenchToolBar","diffOverviewRulerInserted","defaultInsertColor","diffInserted","diffOverviewRulerRemoved","defaultRemoveColor","diffRemoved","IAccessibilitySignalService","IEditorProgressService","bindContextKey","AccessibilitySignal","createActionViewItem","editorBackground","registerAction2","ContextKeyEqualsExpr","CodeDataTransfers","mainWindow","createTrustedTypesPolicy","isWebKit","isFirefox","isSafari","isWebkitWebView","StandardMouseEvent","GlobalPointerMoveMonitor","StandardWheelEvent","DomEmitter","BrowserFeatures","isChrome","isAndroid$1","DEFAULT_FONT_FAMILY","DataTransfers","getWindowId","getActiveElement","WindowIntervalTimer","getWindow","$$1","addDisposableListener","isHTMLElement","prepend","append","getDomNodeZoomLevel","isAncestorOfActiveElement","isAncestor","EventType","windowOpenNoOpener","scheduleAtNextAnimationFrame","getWindowById","isInShadowDOM","createStyleSheet","getDomNodePagePosition","addStandardDisposableListener","getShadowRoot","isKeyboardEvent","saveParentsScrollTop","restoreParentsScrollTop","getClientArea","computeScreenAwareSize","runAtThisOrScheduleAtNextAnimationFrame","runWhenWindowIdle","DragAndDropObserver","trackFocus","h","reset","Widget$1","HoverWidget$1","HoverAction","getHoverAccessibleViewHint","status","MouseWheelClassifier","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","SmoothScrollableElement","ActionBar","renderLabelWithIcons","renderIcon","ScrollbarState","Button","renderMarkdown","StandardKeyboardEvent","DiffEditorSash","allowsTrueInlineDiffRendering","DiffEditorEditors","SashLayout","DiffEditorDecorations","DiffEditorViewZones","AccessibleDiffViewer","AccessibleDiffViewerModelFromEditors","FastDomNode","createFastDomNode","PixelRatio","inputLatency","Gesture","EventType$1","applyFontInfo","domNode","fontInfo","CharWidthRequest","chr","type","width","DomCharWidthReader","bareFontInfo","requests","targetWindow","_a","container","regularDomNode","boldDomNode","italicDomNode","testElements","request","parent","testElement","htmlString","i","testString","len","readCharWidths","FontMeasurementsImpl","windowId","cache","FontMeasurementsCache","item","value","values","somethingRemoved","readConfig","all","monospace","result","typicalHalfwidthCharacter","typicalFullwidthCharacter","space","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","rightwardsArrow","halfwidthRightwardsArrow","middot","wsmiddotWidth","monospaceTestChars","maxDigitWidth","isMonospace","referenceWidth","diff","canUseHalfwidthRightwardsArrow","itemId","id","FontMeasurements","ICodeEditorService","Command","opts","kbOptsArr","kbOpts","kbWhen","desc","accessor","args","MultiCommand","priority","name","implementation","when","a","b","logService","contextKeyService","impl","context","ProxyCommand","command","EditorCommand","controllerGetter","editor","controller","precondition","runner","codeEditorService","editorAccessor","EditorAction","menuOpts","withDefaults","MultiEditorAction","EditorAction2","kbService","registerModelAndPositionCommand","handler","instaService","resource","position","model","editorPosition","reference","resolve","reject","err","registerEditorCommand","editorCommand","EditorContributionRegistry","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","instantiation","EditorExtensionsRegistry","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","c","getDiffEditorContributions","Extensions","_EditorContributionRegistry","registerCommand","UndoCommand","nls.localize","RedoCommand","SelectAllCommand","__decorate","decorators","target","key","r","d","__param","paramIndex","decorator","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","EditorWorkerService","workerDescriptor","configurationService","_languageConfigurationService","languageFeaturesService","WorkerManager","token","links","WordBasedCompletionItemProvider","uri","options","range","original","modified","algorithm","toLineRangeMappings","m","changes","edits","pretty","sw","worker","up","wordDefRegExp","wordDef","wordDefFlags","resources","forceLargeModels","workerManager","languageConfigurationService","config","models","candidate","word","replace","insert","data","_workerDescriptor","_","EditorWorkerClient","SynchronousWorkerClient","instance","channel","keepIdleModels","method","proxy","leadingWord","AbstractCodeEditorService","_themeService","editorWithWidgetFocus","editors","provider","ed","key1","dest","input","source","sideBySide","rm","MarkdownRenderer_1","MarkdownRenderer","_options","_languageService","_openerService","markdown","markedOptions","disposables","rendered","languageAlias","_b","languageId","html","element","link","openLinkFromMarkdown","openerService","isTrusted","toAllowCommandsOption","e","$","dom.$","HoverWidget","Widget","dom.getWindow","_keybindingService","_configurationService","_instantiationService","_accessibilityService","_c","_d","_e","_f","_g","url","ElementHoverTarget","BaseHoverWidget","dom.addDisposableListener","rowElement","contentsElement","dom.isHTMLElement","mdRenderer","content","statusBarElement","actionsElement","keybinding","keybindingLabel","hideOnHover","infoElement","mouseTrackerTargets","mouseTracker","CompositeMouseTracker","mouseTracker2Targets","firstContainerFocusElement","lastContainerFocusElement","beforeContainerFocusElement","dom.prepend","afterContainerFocusElement","dom.append","root","node","parsedNode","recursivelyFoundElement","accessibleViewHint","getZoomAccountedBoundingClientRect","zoom","dom.getDomNodeZoomLevel","boundingRect","targetBounds","top","right","bottom","left","height","targetRect","hoverWidth","hoverPointerOffset","padding","maxHeight","extraRightPadding","hoverHeight","pointerLeftPosition","pointerX","_elements","n","_element","ManagedHoverWidget","hoverDelegate","fadeInAnimation","focus","resolvedContent","oldHoverWidget","hoverOptions","HoverService","contextMenuService","_layoutService","skipLastFocusedUpdate","getHoverOptionsIdentity","trapFocus","activeElement","hoverDisposables","hover","targetElement","HoverContextViewDelegate","focusedElement","focusedElementDocument","observer","firstTargetElement","entries","hideOnKeyDown","event","hoverPreparation","hoverWidget","hideHover","disposeWidget","disposePreparation","hadHover","triggerShowHover","delay","isMouseDown","mouseDownEmitter","mouseUpEmitter","mouseLeaveEmitter","onMouseOver","toDispose","onMouseMove","getHoverTargetElement","mouseOverDomEmitter","onFocus","onBlur","focusDomEmitter","tagName","newContent","_hover","_focus","stopElement","theme","collector","hoverBorder","IBulkEditService","ResourceEdit","metadata","edit","ResourceTextEdit","ResourceFileEdit","textEdit","versionId","oldResource","newResource","CommandOpener","_commandService","EditorOpener","_editorService","selection","OpenerService","editorService","commandService","href","dom.windowOpenNoOpener","opener","targetURI","validationTarget","validator","resolver","externalUri","preferredOpenerId","MarkerDecorationsContribution","_editor","_markerDecorationsService","ElementSizeObserver","referenceDomElement","dimension","observedDimenstion","observeNow","shouldObserve","alreadyObservedThisAnimationFrame","update","emitEvent","observedWidth","observedHeight","_EditorSettingMigration","migrate","read","write","firstDotIndex","firstSegment","EditorSettingMigration","registerEditorSettingMigration","registerSimpleEditorSettingMigration","oldValue","newValue","migrateOptions","migration","suggestFilteredTypesMapping","entry","toBeModified","TabFocusImpl","tabFocusMode","TabFocus","EditorConfiguration","isSimpleWidget","contextMenuId","deepCloneAndMigrateOptions","EditorOptionsUtil","newOptions","changeEvent","partialEnv","env","getExtraEditorClassName","browser.isWebKit","browser.isFirefox","_newOptions","isDominatedByLongLines","modelLineCount","lineNumbersDigitCount","digitCount","viewLineCount","reservedHeight","decorationLaneCount","extra","browser.isSafari","browser.isWebkitWebView","platform.isMacintosh","ValidatedEditorOptions","option","ComputedEditorOptions","editorOption","arrays.equals","somethingChanged","changed","objects.deepClone","PageCoordinates","x","y","ClientCoordinates","clientX","clientY","EditorPagePosition","CoordinatesRelativeToEditor","createEditorPagePosition","editorViewDomNode","editorPos","dom.getDomNodePagePosition","createCoordinatesRelativeToEditor","editorPagePosition","pos","scaleX","scaleY","relativeX","relativeY","EditorMouseEvent","isFromPointerCapture","EditorMouseEventFactory","callback","dom.EventType","EditorPointerEventFactory","GlobalEditorPointerMoveMonitor","initialElement","pointerId","initialButtons","pointerMoveCallback","onStopCallback","dom.addStandardDisposableListener","_DynamicCssRules","rule","properties","existingRule","counter","RefCountedCssRule","dom.isInShadowDOM","DynamicCssRules","className","_containerElement","dom.createStyleSheet","str","prop","cssValue","cssPropName","camelToDashes","first","letter","ViewPart","PartFingerprints","partId","child","stopAt","resultLen","RestrictedRenderingContext","viewLayout","viewportData","vInfo","absoluteTop","lineNumber","includeViewZones","RenderingContext","viewLines","includeNewLines","LineVisibleRanges","outsideRenderedLine","ranges","continuesOnNextLine","HorizontalRange","FloatHorizontalRange","HorizontalPosition","VisibleRanges","RangeUtil","endNode","startElement","startOffset","endElement","endOffset","prev","clientRects","clientRectDeltaLeft","clientRectScale","clientRect","startChildIndex","endChildIndex","max","canUseFastRenderedViewLine","platform.isNative","platform.isLinux","monospaceAssumptionsAreValid","ViewLineOptions","themeType","other","_ViewLine","deltaTop","lineHeight","sb","lineData","actualInlineDecorations","selectionsOnLine","selections","startColumn","endColumn","renderLineInput","output","renderedViewLine","FastRenderedViewLine","createRenderedLine","stopRenderingLineAfter","horizontalRanges","spanNode","offset","ViewLine","characterMapping","keyColumnCount","horizontalOffset","expectedWidth","actualWidth","startPosition","endPosition","column","keyColumnOrdinal","keyColumn","keyColumnPixelOffset","keyColumnHorizontalOffset","myDomNode","domPosition","getColumnOfNodeOffset","RenderedViewLine","containsRTL","containsForeignElements","pixelOffset","readingTarget","cachedPixelOffset","expectedResult","startDomPosition","endDomPosition","WebKitRenderedViewLine","endPixelOffset","lastRange","createWebKitRenderedLine","createNormalRenderedLine","spanNodeTextContentLength","spanIndex","UnknownHitTestResult","hitTarget","ContentHitTestResult","injectedText","HitTestResult","createFromDOMInfo","ctx","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","EditorRange","mouseColumn","detail","outsidePosition","outsideDistance","ElementPath","path","HitTestContext","viewHelper","lastRenderData","mouseVerticalOffset","viewZoneWhitespace","viewZoneMiddle","lineCount","positionBefore","positionAfter","maxLineColumn","attr","BareHitTestRequest","relativePos","MouseTargetFactory","HitTestRequest","eventTarget","hasEventTarget","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","resolvedRequest","widgetId","mouseContentHorizontalOffset","cursorVerticalOffset","viewZoneData","mouseTargetType","res","modelCoordinate","lanes","lineWidth","hitTestResult","possibleLineNumber","maxColumn","layoutInfo","typicalHalfwidthCharacterWidth","visibleRange","columnHorizontalOffset","points","lineMaxColumn","mouseCoordinates","spanNodeClientRect","mouseIsOverSpanNode","rng","curr","prevDelta","nextDelta","lineStartVerticalOffset","lineEndVerticalOffset","lineCenteredVerticalOffset","adjustedPageY","adjustedPage","coords","shadowRoot","dom.getShadowRoot","shadowCaretRangeFromPoint","startContainer","parent1","parent2","parent3","hitResult","parent1ClassName","parent2ClassName","tokenSpan","viewModel","lineContent","tabSize","newPosition","normalizedPosition","el","rect","elWindow","fontStyle","fontVariant","fontWeight","fontSize","fontFamily","font","text","pixelCursor","step","charWidthReader","CharWidthReader","_CharWidthReader","char","cacheKey","MouseHandler","viewController","MouseDownOperation","testEventTarget","mouseEvents","capturePointerId","classifier","prevMouseWheelTime","gestureStartZoomLevel","gestureHasZoomModifiers","gestureAccumulatedDelta","onMouseWheel","browserEvent","hasMouseWheelZoomModifiers","zoomLevel","delta","t","targetIsContent","targetIsGutter","targetIsLineNumbers","selectOnLineNumbers","targetIsViewZone","targetIsWidget","shouldHandle","_context","_viewController","_viewHelper","_mouseTargetFactory","createMouseTarget","getMouseColumn","TopBottomDragScrolling","inSelectionMode","revealType","MouseDownState","targetType","dom.isKeyboardEvent","editorContent","verticalOffset","aboveLineNumber","belowLineNumber","positionOutsideEditor","selectionStart","_dispatchMouse","mouseEvent","TopBottomDragScrollingOperation","dom.scheduleAtNextAnimationFrame","now","elapsed","viewportInLines","outsideDistanceInLines","scrollSpeedInLines","scrollInPixels","scrollValue","edgeLineNumber","mouseTarget","horizontalScrollbarHeight","_MouseDownState","startedOnLineNumbers","setMouseDownCount","newMouseDownPosition","currentTime","_TextAreaState","selectionEnd","newlineCountBeforeSelection","textArea","previousState","valueBeforeSelectionStart","previousValueBeforeSelectionStart","reason","select","str1","str2","anchor","deltaText","signum","lineFeedCnt","lastLineFeedIndex","currentState","couldBeEmojiInput","prefixLength","strings.commonPrefixLength","suffixLength","strings.commonSuffixLength","currentValue","previousSelectionStart","previousSelectionEnd","currentSelectionStart","currentSelectionEnd","replacePreviousCharacters","previousValue","TextAreaState","PagedScreenReaderStrategy","linesPerPage","page","startLineNumber","endLineNumber","trimLongText","selectionStartPage","selectionStartPageRange","selectionEndPage","selectionEndPageRange","pretextRange","pretextStart","pretext","lastLine","lastLineMaxColumn","posttextRange","posttextEnd","posttext","selectionRange1","selectionRange2","TextAreaSyntethicEvents","CopyOptions","_InMemoryClipboardMetadataManager","lastCopiedValue","pastedText","InMemoryClipboardMetadataManager","CompositionContext","typeInput","TextAreaInput","_host","_textArea","_OS","_browser","_logService","lastKeyDown","currentComposition","newState","strings.isHighSurrogate","ClipboardEventUtils","hadFocus","previousSelectionChangeEventTime","delta1","delta2","newSelectionStart","newSelectionEnd","_newSelectionStartPosition","newSelectionStartPosition","_newSelectionEndPosition","newSelectionEndPosition","newSelection","newHasFocus","textAreaState","dataToCopy","storedMetadata","clipboardData","rawmetadata","file","TextAreaWrapper","_actual","dom.getActiveElement","activeWindow","currentIsFocused","scrollState","dom.saveParentsScrollTop","dom.restoreParentsScrollTop","PointerEventHandler","pointerType","pointerEvents","TouchHandler","PointerHandler","platform.isIOS","platform.isAndroid","platform.isMobile","DynamicViewOverlay","_LineNumbersOverlay","lineNumbers","primaryViewPosition","shouldRender","viewLineNumber","modelPosition","modelLineNumber","finalLineNumber","lineHeightClassName","visibleStartLineNumber","visibleEndLineNumber","lineNoDecorations","decorationStartIndex","lineIndex","renderLineNumber","extraClassNames","LineNumbersOverlay","editorLineNumbersColor","editorDimmedLineNumberColor","_Margin","adjustedScrollTop","Margin","VisibleTextAreaData","distanceToModelLineStart","widthOfHiddenLineTextBefore","distanceToModelLineEnd","visibleRangeProvider","startModelPosition","endModelPosition","tokenPresentation","canUseZeroSizeTextarea","TextAreaHandler","simpleModel","eol","textAreaInputHost","rawTextToCopy","platform.isWindows","newLineCharacter","isFromEmptySelection","multicursorText","mode","richText","textBefore","placeholderText","browser.isAndroid","wordAtPosition","positionOffsetInWord","viewAnchorPosition","deltaOffset","textAreaWrapper","platform.OS","browser.isChrome","pasteOnNewLine","modelSelection","ta","widthOfHiddenTextBefore","textBeforeSelection","lineFeedOffset1","lineTextBeforeSelection","tabOffset1","desiredVisibleBeforeCharCount","visibleBeforeCharCount","hiddenLineTextBefore","measureText","textAfterSelection","lineFeedOffset2","lineTextAfterSelection","tabOffset2","desiredVisibleAfterCharCount","visibleAfterCharCount","ANDROID_WORD_SEPARATORS","wordSeparators","goingLeft","goingRight","distance","charCode","charBefore","toggleKeybindingLabel","runCommandKeybindingLabel","keybindingEditorKeybindingLabel","editorNotAccessibleMessage","accessibilityPageSize","wrappingColumn","visibleStart","visibleEnd","scrollLeft","viewLineData","startTokenIndex","endTokenIndex","textareaSpansSingleToken","presentation","startIndex","renderData","tac","targetDocument","CORE_WEIGHT","CoreEditorCommand","EditorScroll_","isEditorScrollArgs","arg","types.isObject","scrollArg","types.isString","types.isUndefined","types.isNumber","types.isBoolean","direction","unit","revealCursor","RevealLine_","isRevealLineArgs","reveaLineArg","EditorOrNativeTextInputCommand","focusedEditor","activeEditor","CoreNavigationCommands","BaseMoveToCommand","ColumnSelectCommand","viewState","primary","prevColumnSelectData","validatedPosition","validatedViewPosition","fromViewLineNumber","fromViewVisualColumn","ColumnSelectUpCommand","ColumnSelectDownCommand","CursorMoveImpl","CursorMove_","parsed","cursors","CursorMoveBasedCommand","dynamicArgs","states","newModelPosition","newViewPosition","state","lastAddedCursorIndex","newStates","HomeCommand","LineStartCommand","cursor","EndCommand","LineEndCommand","TopCommand","BottomCommand","EditorScrollImpl","horizontalUnits","verticalUnits","horizontalDirections","verticalDirections","runEditorScroll","desiredScrollTop","desiredVisibleViewRange","futureViewport","visibleViewRange","visibleModelRange","desiredTopModelLineNumber","viewPosition","noOfLines","deltaLines","desiredScrollLeft","deltaColumns","WordCommand","lastAddedState","LineCommand","LastCursorLineCommand","revealLineArg","lineNumberArg","revealAt","viewRange","columnSelectionCondition","registerColumnSelection","CoreEditingCommands","CoreEditingCommand","shouldPushStackElementBefore","commands","s","EditorHandlerCommand","handlerId","registerOverwritableCommand","ViewController","configuration","userInputEvents","commandDelegate","replacePrevCharCnt","replaceNextCharCnt","positionDelta","minColumn","selectionClipboardIsOn","columnSelection","doColumnSelect","wholeLine","RenderedLinesCollection","_lineFactory","rendLineNumberStart","lines","deleteFromLineNumber","deleteToLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","changeFromLineNumber","changeCount","changeToLineNumber","someoneNotified","changedLineNumber","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","afterLines","deletedLines","notifiedSomeone","from","to","VisibleLinesCollection","deleted","lineDomNode","inp","renderer","ViewLayerRenderer","resCtx","_ViewLayerRenderer","_domNode","_viewportData","inContext","stopLineNumber","fromLineNumber","toLineNumber","removeCnt","endIndex","deltaLN","newLinesLen","removeCount","removeIndex","domNodeIsEmpty","newLinesHTML","wasNew","lastChild","currChild","line","invalidLinesHTML","wasInvalid","hugeDomNode","linesLength","hadNewLine","hadInvalidLine","ViewOverlays","ViewOverlayLine","overlay","toRender","dynamicOverlay","dynamicOverlays","ContentViewOverlays","MarginViewOverlays","ViewUserInputEvents","coordinatesConverter","BlockDecorations","didChange","newContentWidth","newContentLeft","count","decorations","decoration","block","paddingTop","paddingRight","paddingBottom","paddingLeft","ViewContentWidgets","viewDomNode","keys","_widget","myWidget","widget","primaryAnchor","secondaryAnchor","preference","affinity","actual","PositionPair","getValidPositionPair","validModelPosition","elDocument","aboveLineTop","heightAvailableAboveLine","underLineTop","heightAvailableUnderLine","aboveTop","fitsAbove","belowTop","fitsBelow","windowSize","domNodePosition","MIN_LIMIT","MAX_LIMIT","absoluteLeft","absoluteAboveTop","absoluteBelowTop","dom.getClientArea","absoluteAboveLeft","TOP_PADDING","BOTTOM_PADDING","topLeft","Coordinate","getCoordinates","secondaryViewPosition","secondary","horizontalPosition","AnchorCoordinate","preferredDimensions","safeInvoke","placement","pass","pref","fn","thisArg","AbstractLineHighlightOverlay","hasChanged","cursorsLineNumbers","selectionIsEmpty","renderedLineWrapped","cursorLineNumber","firstViewLineNumber","lastViewLineNumber","firstLine","renderedLineExact","CurrentLineHighlightOverlay","exact","CurrentLineMarginHighlightOverlay","lineHighlight","lineHighlightBorder","DecorationsOverlay","_decorations","decorationsLen","aClassName","bClassName","lenI","decorationOutput","j","prevClassName","prevShowIfCollapsed","prevRange","prevShouldFillLineOnLineBreak","showIfCollapsed","shouldFillLineOnLineBreak","linesVisibleRanges","lenJ","lineVisibleRanges","singleVisibleRange","center","k","lenK","expandToLeft","EditorScrollbar","linesContent","overflowGuardDomNode","scrollbar","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","scrollbarOptions","onBrowserDesperateReveal","lookAtScrollTop","lookAtScrollLeft","newScrollPosition","deltaLeft","newOpts","DecorationToRender","tooltip","zIndex","LineDecorationToRender","VisibleLineDecorationsToRender","DedupOverlay","prevEndLineIndex","startLineIndex","endLineIndex","GlyphMarginWidgets","glyphMarginClassName","lane","laneIndex","DecorationBasedGlyphRenderRequest","widgetLineNumber","WidgetBasedGlyphRenderRequest","decorationGlyphsToRender","requestsAtLocation","winner","classNames","dec","combinedClassName","DecorationBasedGlyph","IndentGuidesOverlay","wrappingInfo","scrollWidth","activeCursorPosition","indents","indent","leftOffset","guide","bracketGuides","indentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","activeIndentInfo","indentSize","lineGuides","bracketGuidesInLine","bracketGuidesInLineQueue","indentGuidesInLine","indentLvl","indentGuide","isActive","g","peeked","transparentToUndefined","color","colors","colorProvider","indentColors","colorValues","bracketColor","guideColor","guideColorActive","effectiveGuideColor","effectiveGuideColorActive","indentColorValues","indentColor","indentColorActive","effectiveIndentColor","effectiveIndentColorActive","level","DomReadingContext","LastRenderedData","currentVisibleRange","HorizontalRevealRangeRequest","minimalReveal","startScrollTop","stopScrollTop","scrollType","HorizontalRevealSelectionsRequest","minLineNumber","maxLineNumber","_ViewLines","conf","newViewLineOptions","rendStartLineNumber","rendEndLineNumber","min","viewLineDomNode","_range","originalEndLineNumber","visibleRanges","visibleRangesLen","domReadingContext","nextLineModelLineNumber","continuesInNextLine","visibleRangesForLine","currentLineModelLineNumber","fast","localMaxLineWidth","allWidthsComputed","visibleLine","longestLineNumber","longestWidth","horizontalRevealRequest","newScrollLeft","iLineWidth","viewport","verticalType","viewportStartY","viewportHeight","viewportEndY","boxIsSingleRange","boxStartY","boxEndY","shouldIgnoreScrollOff","maxLinesInViewport","surroundingLines","newScrollTop","desiredGapAbove","minScrollTop","boxMiddleY","viewportStartX","viewportEndX","boxStartX","boxEndX","viewportStart","viewportEnd","boxStart","boxEnd","revealAtStart","revealAtEnd","viewportLength","ViewLines","LinesDecorationsOverlay","rLen","linesDecorationsClassName","firstLineDecorationClassName","common","lineOutput","addition","MarginViewLineDecorationsOverlay","marginClassName","allCharCodes","v","getCharIndex","chCode","fontScale","MinimapCharRenderer","charData","scale","ratio","dx","dy","foregroundAlpha","backgroundColor","backgroundAlpha","useLighterFont","force1pxHeight","charWidth","charHeight","renderHeight","charIndex","destWidth","backgroundR","backgroundG","backgroundB","deltaR","deltaG","deltaB","destAlpha","sourceOffset","row","colorR","colorG","colorB","charTable","decodeData","prebakedMiniMaps","MinimapCharRendererFactory","factory","canvas","code","destOffset","targetIndex","brightest","sourceY1","sourceY2","sourceX1","sourceX2","samples","sy","sourceRow","yBalance","sx","xBalance","sourceIndex","weight","final","pixelsPerCharacter","resultOffset","adjust","POINTER_DRAG_RESET_DISTANCE","GUTTER_DECORATION_WIDTH","MinimapOptions","tokensColorTracker","pixelRatio","minimapLayout","minimapOpts","defaultBackgroundColor","themeColor","defaultForegroundColor","MinimapLayout","scrollTop","scrollHeight","sliderNeeded","_computedSliderRatio","sliderTop","sliderHeight","topPaddingLineCount","pageY","minimapLineHeight","viewportStartLineNumber","viewportEndLineNumber","viewportStartLineNumberVerticalOffset","viewportContainsWhitespaceGaps","realLineCount","previousLayout","minimapLinesFitting","logicalScrollHeight","maxMinimapSliderTop","computedSliderRatio","maxLinesFitting","viewportLineCount","expectedViewportLineCount","extraLinesAtTheTop","extraLinesAtTheBottom","consideringStartLineNumber","partialLine","sliderTopAligned","_MinimapLine","MinimapLine","RenderData","renderedLayout","imageData","layout","tmp","MinimapBuffers","WIDTH","HEIGHT","background","backgroundA","MinimapSamplingState","oldSamplingState","minimapLineCount","halfRatio","lastIndex","oldMinimapLines","oldLength","oldIndex","oldDeltaLineCount","minViewLineNumber","MAX_EVENT_COUNT","events","lastEvent","toViewLineNumber","oldMinimapLineNumber","selectedViewLineNumber","samplingRatio","minimapLines","fromLineIndex","toLineIndex","sampledLineNumber","minimapLineStart","minimapLineEnd","deletedLineCount","changeStartIndex","changeEndIndex","insertedLineCount","Minimap","samplingState","InnerMinimap","minimapLineRange","minimapCtx","wasSampling","needed","minimapStartLineNumber","minimapEndLineNumber","headerHeightInMinimapLines","modelStartLineNumber","modelEndLineNumber","fitWidth","headerText","cachedText","fittedText","initialPosY","internalOffsetY","initialSliderState","initialPosX","handlePointerMove","posy","posx","minimapPosition","pointerOrthogonalDelta","pointerDelta","pointerMoveData","touch","startY","class_","renderingCtx","canvasInnerWidth","canvasInnerHeight","minimapCharWidth","canvasContext","highlightedLines","ContiguousLineMap","lineOffsetMap","y1","y2","intersection","yy1","yy2","highlightColors","minimapOptions","decorationColor","highlightColor","characterWidth","decorationRange","x1","x2","lineIndexToXOffset","prevx","strings.isFullWidthCharacter","sectionHeaderFontSize","sectionHeaderLetterSpacing","backgroundFillHeight","backgroundFill","foregroundColor","foregroundFill","separatorStroke","backgroundFillY","separatorY","maxWidth","ellipsis","ellipsisWidth","averageCharWidth","maxCharCount","halfCharCount","hasSeparatorLine","minimapWidth","textY","_lastData","_dirtyY1","_dirtyY2","lineInfo","defaultBackground","renderMinimap","charRenderer","renderMinimapLineHeight","innerLinePadding","renderBackground","renderedLines","dirtyY1","dirtyHeight","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","dirtyY2","colorTracker","minimapCharRenderer","tokens","maxDx","tabsCharDelta","tokenIndex","tokensLen","tokenEndIndex","tokenColorId","tokenColor","insertSpacesCount","defaultValue","ViewOverlayWidgets","widgetData","stack","maxMinWidth","widgetMinWidthInPx","stackCoordinates","maxRight","widgetHeight","editorBoundingBox","Settings","borderColor","cursorColorSingle","cursorColorPrimary","cursorColorSecondary","minimapEnabled","minimapSide","canvasLeftOffset","canvasWidth","laneCount","remainingWidth","leftWidth","rightWidth","centerWidth","centerOffset","rightOffset","DecorationsOverviewRuler","renderNow","newSettings","editorCtx","canvasHeight","outerHeight","heightRatio","minDecorationHeight","halfMinDecorationHeight","canvasCtx","w","decorationGroup","decorationGroupData","prevLane","prevY1","prevY2","yCenter","cursorHeight","halfCursorHeight","cursorX","cursorW","prevColor","OverviewRuler","cssClassName","zones","colorZones","id2Color","currentColorId","currentFrom","currentTo","zone","zoneColorId","zoneFrom","zoneTo","Rulers","currentCount","desiredCount","rulerWidth","addCount","ruler","ScrollDecorationViewPart","newShouldShow","HorizontalRangeWithStyle","LineVisibleRangesWithStyle","toStyledRange","toStyled","_SelectionsOverlay","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","bottomLineNumber","curLineRange","curLeft","curRight","startStyle","endStyle","prevLeft","prevRight","abs","nextLeft","nextRight","output2","hasMultipleSelections","visibleRangesHaveStyle","firstLineNumber","lastLineNumber","innerCornerOutput","restOfSelectionOutput","thisFrameVisibleRangesWithStyle","visibleRangesWithStyle","internalCorners","restOfSelection","SelectionsOverlay","editorSelectionForegroundColor","ViewCursorRenderData","textContent","textContentClassName","CursorPlurality","ViewCursor","plurality","pauseAnimation","strings.getCharContainingOffset","nextGrapheme","window","dom.computeScreenAwareSize","visibleRangeForCharacter","firstVisibleRangeForCharacter","_ViewCursors","secondaryPositions","addCnt","newCursor","positions","secondaryCursor","blinkingStyle","isHidden","isSolid","renderDataLen","primaryRenderData","secondaryRenderData","ViewCursors","cursorThemes","cursorTheme","caret","caretBackground","invalidFunc","ViewZones","whitespaces","oldWhitespaces","whitespace","hadAChange","whitespaceAccessor","props","oldWhitespace","zoneAfterModelPosition","validAfterLineNumber","zoneBeforeModelPosition","isVisible","zonesHaveChanged","changeAccessor","safeInvoke1Arg","myZone","visibleWhitespaces","visibleZones","hasVisibleZone","visibleWhitespace","newTop","newHeight","newDisplay","func","arg1","WhitespaceOverlay","WhitespaceOptions","USE_SVG","continuesWithWrappedLine","fauxIndentLength","onlyBoundary","onlyTrailing","middotWidth","spaceWidth","wsmiddotDiff","middotDiff","renderSpaceCharCode","lineIsEmptyOrWhitespace","strings.firstNonWhitespaceIndex","strings.lastNonWhitespaceIndex","currentSelectionIndex","currentSelection","maxLeft","prevChCode","nextChCode","prevCharCode","strokeWidth","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p","experimentalWhitespaceRendering","View","colorTheme","overflowWidgetsDomNode","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","marginViewOverlays","margin","rulers","blockOutline","minimap","overviewRulerData","laneModel","glyphs","glyph","viewZoneId","focused","viewPart","rendering","EditorRenderingCoordinator","viewParts","safeInvokeNoArg","viewPartsToRender","partialViewportData","scrollPosition","modelColumn","everything","newPreference","_EditorRenderingCoordinator","renderingIndex","disposable","dom.runAtThisOrScheduleAtNextAnimationFrame","coordinatedRenderings","datas","ttPolicy","DOMLineBreaksComputerFactory","wrappingIndent","wordBreak","injectedTexts","lineText","previousLineBreakData","createLineBreaks","firstLineBreakColumn","injectedTextsPerLine","createEmptyLineBreakWithPossiblyInjectedText","requestIdx","injectionOptions","injectionOffsets","overallWidth","additionalIndentSize","additionalIndentLength","containerDomNode","firstNonWhitespaceIndices","wrappedTextIndentLengths","renderLineContents","allCharOffsets","allVisibleColumns","wrappedTextIndentLength","indentWidth","renderLineContent","renderLine","trustedhtml","lineDomNodes","breakOffsets","readLineBreaks","visibleColumns","breakOffsetsVisibleColumn","curInjectedTexts","initialVisibleColumn","wrappingIndentLength","hangingOffset","visibleColumn","charOffset","charOffsets","nextCharCode","producedCharacters","spans","discoverBreaks","low","lowRects","high","highRects","readClientRect","mid","midRects","CodeEditorContributions","contributions","instantiationService","contributionsState","contribution","contribs","contrib","CodeEditorWidget_1","CodeEditorWidget","domElement","codeEditorWidgetOptions","themeService","notificationService","accessibilityService","InteractionEmitter","BooleanEventEmitter","EDITOR_ID","EditorContextKeysManager","EditorModeContext","CodeEditorWidgetFocusTracker","internalAction","isDropIntoEnabled","dom.DragAndDropObserver","editorCommon.EditorType","preserveBOM","eolPreference","_model","hasTextFocus","detachedModel","decorationType","subTypes","subType","modelData","maxCol","rawPosition","modelRange","revealHorizontal","validatedModelRange","something","isSelection","isRange","sel","revealVerticalInCenter","cursorState","codeEditorState","reducedState","payload","clipboardEvent","endCursorState","cursorStateComputer","EditorDecorationsCollection","oldDecorations","newDecorations","decorationIds","decorationTypeKey","oldDecorationsIds","postponeRendering","forceRedraw","domNodeHeight","listenersToRemove","attachedView","cb","multiCursorLimit","message","e1","e2","view","hasRealView","ModelData","viewUserInputEvents","removeDomNode","_emitterOptions","_value","_contributions","deliveryQueue","_contextKeyService","_languageFeaturesService","dom.trackFocus","listener","thisArgs","index","decorationId","newDecorationIds","squigglyStart","squigglyEnd","getSquigglySVGData","dotdotdotStart","dotdotdotEnd","getDotDotDotSVGData","errorForeground","warningForeground","infoForeground","hintForeground","unnecessaryForeground","StableEditorScrollState","visiblePosition","visiblePositionScrollDelta","visiblePositionScrollTop","_initialScrollTop","_initialContentHeight","_visiblePosition","_visiblePositionScrollDelta","_cursorPosition","currentCursorPosition","joinCombine","arr1","arr2","keySelector","combine","val1","val2","key2","applyObservableDecorations","decorationsCollection","reader","appendRemoveOnDispose","prependRemoveOnDispose","ObservableElementSizeObserver","tx","automaticLayout","animatedObservable","base","store","targetVal","startVal","curVal","animationStartMs","durationMs","animationFrame","passedMs","easeOutExpo","ViewZoneOverlayWidget","viewZone","htmlElement","ManagedOverlayWidget","applyStyle","PlaceholderViewZone","_afterLineNumber","heightInPx","_ManagedOverlayWidget","_domElement","style","val","applyViewZones","viewZones","setIsUpdating","zoneIds","lastViewZoneIds","curViewZones","viewZonIdsPerViewZone","viewZoneIdPerOnChangeObservable","z","changeSummary","vz","DisposableCancellationTokenSource","translatePosition","posInOriginal","mappings","mapping","newLineNumber","innerMapping","l","lengthBetweenPositions","position1","position2","filterWithPrevious","arr","filter","cur","RefCounted","debugOwner","BaseRefCounted","object","_disposable","_debugOwner","ClonedRefCounted","idx","_base","diffInsertIcon","diffRemoveIcon","diffLineAddDecorationBackgroundWithIndicator","diffLineDeleteDecorationBackgroundWithIndicator","diffLineAddDecorationBackground","diffLineDeleteDecorationBackground","diffAddDecoration","diffWholeLineAddDecoration","diffAddDecorationEmpty","diffDeleteDecoration","diffWholeLineDeleteDecoration","diffDeleteDecorationEmpty","WorkerBasedDocumentDiffProvider_1","IDiffProviderFactoryService","WorkerBasedDiffProviderFactoryService","WorkerBasedDocumentDiffProvider","editorWorkerService","telemetryService","cancellationToken","uriKey","timeMs","DiffEditorViewModel","movedText","_diffProviderFactoryService","diffProvider","onChangeSignal","contentChangedSignal","debouncer","lastUnchangedRegions","lastUnchangedRegionsOrigRanges","lastUnchangedRegionsModRanges","updatedLastUnchangedRegions","UnchangedRegion","newRanges","touching","sumLineCount","sum","originalDecorationIds","modifiedDecorationIds","updateUnchangedRegions","newUnchangedRegions","visibleRegions","hiddenRegions","length","newUnchangedRegions2","intersecting","f","textEdits","documentDiffProvider","originalTextEditInfos","modifiedTextEditInfos","normalizeDocumentDiff","DiffState","currentSyncedMovedText","unchangedRegions","regions","normalizeRangeMapping","rangeMapping","originalRange","modifiedRange","DiffMapping","movedTexts","identical","quitEarly","lineRangeMapping","originalLineCount","modifiedLineCount","minHiddenLineCount","minContext","inversedMappings","origStart","modStart","atStart","atEnd","originalLineNumber","modifiedLineNumber","visibleLineCountTop","visibleLineCountBottom","visibleLineCountTop2","visibleLineCountBottom2","hiddenModified","originalStartLineNumber","modifiedStartLineNumber","modifiedEndLineNumberEx","isLast","newR","maxVisibleLineCountTop","maxVisibleLineCountBottom","_MovedBlocksLinesFeature","_rootElement","_diffModel","_originalEditorLayoutInfo","_modifiedEditorLayoutInfo","_editors","moves","infoOrig","infoMod","move","computeLineStart","t1","t2","start","end","LinesLayout","lineAreaLeft","lineAreaWidth","track","verticalY","arrowHeight","arrowWidth","rectWidth","rectHeight","arrowRight","info","info2","movedBlockViewZones","blocks","MovedBlockOverlayWidget","originalHasFocus","modifiedHasFocus","lastChangedEditor","summary","originalPos","modifiedPos","MovedBlocksLinesFeature","setsPerTrack","trackPerLineIdx","trackIdx","set","_trackCount","lineIdx","_viewZone","_move","_kind","editorLayout","actionBar","caption","actionCompare","EditorGutter","itemProvider","o","unusedIds","visibleRange2","gutterItems","gutterItem","gutterItemObs","itemView","ManagedGutterItemView","gutterItemView","ActionRunnerWithContext","_getContext","emptyArr","DiffEditorGutter","diffEditorRoot","_sashLayout","_boundarySashes","_menuService","cursorPosition","selectedLineNumbers","diffs","DiffGutterItem","currentDiff","DiffToolBar","showAlways","menuId","rangeOverride","originalUri","modifiedUri","_item","gutter","itemRange","itemHeight","middleHeight","effectiveCheckboxTop","preferredViewPortRange","preferredParentRange","observableCodeEditor","ObservableCodeEditor","_ObservableCodeEditor","d1","d2","overlayWidgetId","reactToChange","observable","reactToChangeWithStore","deltas","HideUnchangedRegionsFeature_1","HideUnchangedRegionsFeature","modifiedOutlineSource","origViewZones","modViewZones","compactMode","curUnchangedRegions","origVz","CompactCollapsedCodeOverlayWidget","modViewZone","CollapsedCodeOverlayWidget","unchangedLinesDecoration","unchangedLinesDecorationShow","region","startRange","_unchangedRegion","_hide","linesHiddenText","_unchangedRegionRange","_modifiedOutlineSource","_revealModifiedHiddenLine","isFullyRevealed","isDragged","startTop","didMove","mouseMoveListener","lineDelta","newVal","mouseUpListener","top2","children","span","items","icon","divItem","OverviewRulerFeature_1","OverviewRulerFeature","_rootWidth","_rootHeight","currentColorTheme","currentColors","insertColor","removeColor","viewportDomElement","diffOverviewRoot","originalOverviewRuler","modifiedOverviewRuler","origViewZonesChanged","modViewZonesChanged","origHiddenRangesChanged","modHiddenRangesChanged","createZones","vm","originalZones","modifiedZones","freeSpace","scrollBarOptions","RevertButtonsFeature","glyphWidgetsModified","selectedDiffs","selectedDiffsSet","btn","RevertButton","_RevertButton","_lineNumber","_diffs","_revertSelection","_DelegatingEditor","DelegatingEditor","DiffEditorOptions","isSimpleDiff","optionsCopy","validateDiffEditorOptions","changedOptions","newDiffEditorOptions","supportsTrueDiffRendering","isInsertion","isDeletion","defaults","_h","validateBooleanOption","validateStringSetOption","DiffEditorWidget","_parentContextKeyService","_parentInstantiationService","_accessibilitySignalService","_editorProgressService","fullWidth","fullHeight","sash","gutterWidth","overviewRulerPartWidth","originalLeft","originalWidth","modifiedLeft","modifiedWidth","gutterLeft","sashLeft","movedBlocksLinesWidth","shouldHideOriginalLineNumbers","o2","dimensions","showSash","unchangedRangesFeature","origViewZoneIdsToIgnore","modViewZoneIdsToIgnore","isUpdatingViewZones","viewZoneManager","originalViewZones","orig","orig2","modifiedViewZones","mod","mod2","isUpdatingOrigViewZones","isUpdatingModViewZones","visible","visibility","isInitializingDiff","editorWidgetOptions","originalViewState","modifiedViewState","diffEditorState","currentModel","prevValueRef","diffState","toLineChanges","curLineNumber","diffModel","isModifiedFocus","destination","destinationSelection","sourceSelection","newRange1","newRange2","isModifiedEditor","modifiedEndLineNumber","innerChanges","TemplateData","deltaScrollVertical","DiffEditorItemTemplate","_container","_overflowWidgetsDomNode","_workbenchUIElementFactory","scroll1","scroll2","updateOptions","isRenamed","isDeleted","isAdded","flag","verticalRange","editorScroll","viewPort","maxDelta","ObjectPool","_create","obj","MultiDiffEditorWidgetImpl","_dimension","_viewModel","template","viewModels","map","VirtualizedViewItem","contextKey","ctxAllCollapsed","allCollapsed","totalHeight","viewItems","maxScroll","contentScrollOffsetToScrollOffset","itemHeightSumBefore","itemContentHeightSumBefore","viewPortHeight","contentViewPort","itemContentHeight","itemContentRange","scroll","_objectPool","_scrollLeft","_deltaScrollVertical","ref","verticalSpace","MultiDiffEditorWidget","isCodeEditor","thing","isDiffEditor","isCompositeEditor","getCodeEditor","ToggleCollapseUnchangedRegions","ToggleShowMovedCodeBlocks","ToggleUseInlineViewWhenSpaceIsLimited","diffEditorCategory","SwitchSide","diffEditor","findFocusedDiffEditor","ExitCompareMove","CollapseAllUnchangedRegions","ShowAllUnchangedRegions","RevertHunkOrSelection","findDiffEditor","accessibleDiffViewerCategory","_AccessibleDiffViewerNext","AccessibleDiffViewerNext","_AccessibleDiffViewerPrev","AccessibleDiffViewerPrev","diffEditors","isElementOrParentOf","elementOrParent","toVSDataTransfer","dataTransfer","vsDataTransfer","asStringValue","createFileDataTransferItemFromFile","INTERNAL_DND_MIME_TYPES","toExternalVSDataTransfer","sourceDataTransfer","overwriteUriList","uriList","editorData","internal","EmbeddedCodeEditorWidget","parentEditor","objects.mixin"],"mappings":"AAAA,OAAA,KAAAA,EAAA,KAAAC,EAAA,MAAAC,EAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,EAAA,MAAAC,EAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,MAAAC,EAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,KAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MAAAC,GAAA,MA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]}